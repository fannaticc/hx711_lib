

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 10 17:31:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text4_split_1,local,class=CODE,merge=1,delta=2
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.05
    76                           ; Generated 20/12/2018 GMT
    77                           ; 
    78                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1619 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0118                     	;# 
   173  0119                     	;# 
   174  011C                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  018E                     	;# 
   178  0191                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0197                     	;# 
   187  0199                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  019A                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  028C                     	;# 
   232  028D                     	;# 
   233  028E                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0294                     	;# 
   239  0298                     	;# 
   240  0298                     	;# 
   241  0299                     	;# 
   242  029A                     	;# 
   243  029B                     	;# 
   244  029E                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  0393                     	;# 
   254  0394                     	;# 
   255  0395                     	;# 
   256  0396                     	;# 
   257  0397                     	;# 
   258  0398                     	;# 
   259  0399                     	;# 
   260  040E                     	;# 
   261  0413                     	;# 
   262  0413                     	;# 
   263  0414                     	;# 
   264  0414                     	;# 
   265  0415                     	;# 
   266  0416                     	;# 
   267  0417                     	;# 
   268  0418                     	;# 
   269  041A                     	;# 
   270  041A                     	;# 
   271  041B                     	;# 
   272  041B                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  041F                     	;# 
   277  0493                     	;# 
   278  0494                     	;# 
   279  0495                     	;# 
   280  0496                     	;# 
   281  049A                     	;# 
   282  049B                     	;# 
   283  049C                     	;# 
   284  049D                     	;# 
   285  058C                     	;# 
   286  058C                     	;# 
   287  058D                     	;# 
   288  058E                     	;# 
   289  058E                     	;# 
   290  058F                     	;# 
   291  0590                     	;# 
   292  0590                     	;# 
   293  0591                     	;# 
   294  0592                     	;# 
   295  0592                     	;# 
   296  0593                     	;# 
   297  0594                     	;# 
   298  0594                     	;# 
   299  0595                     	;# 
   300  0596                     	;# 
   301  0596                     	;# 
   302  0597                     	;# 
   303  0598                     	;# 
   304  0599                     	;# 
   305  059A                     	;# 
   306  059B                     	;# 
   307  059B                     	;# 
   308  059C                     	;# 
   309  059D                     	;# 
   310  060C                     	;# 
   311  060C                     	;# 
   312  060D                     	;# 
   313  060E                     	;# 
   314  060F                     	;# 
   315  060F                     	;# 
   316  0610                     	;# 
   317  0611                     	;# 
   318  0612                     	;# 
   319  0613                     	;# 
   320  0614                     	;# 
   321  0617                     	;# 
   322  0617                     	;# 
   323  0618                     	;# 
   324  0619                     	;# 
   325  061A                     	;# 
   326  061A                     	;# 
   327  061B                     	;# 
   328  061C                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  0695                     	;# 
   334  0696                     	;# 
   335  0697                     	;# 
   336  0699                     	;# 
   337  069A                     	;# 
   338  0711                     	;# 
   339  0712                     	;# 
   340  0713                     	;# 
   341  0714                     	;# 
   342  0715                     	;# 
   343  0718                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  071A                     	;# 
   347  071A                     	;# 
   348  071B                     	;# 
   349  071C                     	;# 
   350  071D                     	;# 
   351  0791                     	;# 
   352  0791                     	;# 
   353  0792                     	;# 
   354  0793                     	;# 
   355  0793                     	;# 
   356  0794                     	;# 
   357  0795                     	;# 
   358  0795                     	;# 
   359  0796                     	;# 
   360  0797                     	;# 
   361  0797                     	;# 
   362  0798                     	;# 
   363  0799                     	;# 
   364  079A                     	;# 
   365  080C                     	;# 
   366  080C                     	;# 
   367  080D                     	;# 
   368  080E                     	;# 
   369  080E                     	;# 
   370  080F                     	;# 
   371  0810                     	;# 
   372  0810                     	;# 
   373  0811                     	;# 
   374  0812                     	;# 
   375  0812                     	;# 
   376  0813                     	;# 
   377  0814                     	;# 
   378  0815                     	;# 
   379  0816                     	;# 
   380  0817                     	;# 
   381  0818                     	;# 
   382  0819                     	;# 
   383  081A                     	;# 
   384  081A                     	;# 
   385  081B                     	;# 
   386  081C                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  088C                     	;# 
   390  088D                     	;# 
   391  088E                     	;# 
   392  088F                     	;# 
   393  088F                     	;# 
   394  0890                     	;# 
   395  0891                     	;# 
   396  0892                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0894                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  0D8C                     	;# 
   407  0D8C                     	;# 
   408  0D8D                     	;# 
   409  0D8E                     	;# 
   410  0D8F                     	;# 
   411  0D8F                     	;# 
   412  0D90                     	;# 
   413  0D91                     	;# 
   414  0D92                     	;# 
   415  0D92                     	;# 
   416  0D93                     	;# 
   417  0D94                     	;# 
   418  0D95                     	;# 
   419  0D95                     	;# 
   420  0D96                     	;# 
   421  0D97                     	;# 
   422  0D98                     	;# 
   423  0D99                     	;# 
   424  0D9A                     	;# 
   425  0D9B                     	;# 
   426  0D9C                     	;# 
   427  0D9D                     	;# 
   428  0D9E                     	;# 
   429  0D9E                     	;# 
   430  0D9F                     	;# 
   431  0DA0                     	;# 
   432  0DA1                     	;# 
   433  0DA1                     	;# 
   434  0DA2                     	;# 
   435  0DA3                     	;# 
   436  0DA4                     	;# 
   437  0DA4                     	;# 
   438  0DA5                     	;# 
   439  0DA6                     	;# 
   440  0DA7                     	;# 
   441  0DA7                     	;# 
   442  0DA8                     	;# 
   443  0DA9                     	;# 
   444  0DAA                     	;# 
   445  0DAB                     	;# 
   446  0DAC                     	;# 
   447  0DAD                     	;# 
   448  0DAE                     	;# 
   449  0DAF                     	;# 
   450  0E0F                     	;# 
   451  0E10                     	;# 
   452  0E11                     	;# 
   453  0E12                     	;# 
   454  0E13                     	;# 
   455  0E14                     	;# 
   456  0E15                     	;# 
   457  0E16                     	;# 
   458  0E17                     	;# 
   459  0E18                     	;# 
   460  0E19                     	;# 
   461  0E1A                     	;# 
   462  0E1B                     	;# 
   463  0E1C                     	;# 
   464  0E1D                     	;# 
   465  0E1E                     	;# 
   466  0E1F                     	;# 
   467  0E20                     	;# 
   468  0E21                     	;# 
   469  0E22                     	;# 
   470  0E23                     	;# 
   471  0E24                     	;# 
   472  0E25                     	;# 
   473  0E26                     	;# 
   474  0E27                     	;# 
   475  0E28                     	;# 
   476  0E29                     	;# 
   477  0E2A                     	;# 
   478  0E2B                     	;# 
   479  0E2C                     	;# 
   480  0E2D                     	;# 
   481  0E2E                     	;# 
   482  0E90                     	;# 
   483  0E91                     	;# 
   484  0E92                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0E9F                     	;# 
   491  0EA0                     	;# 
   492  0EA1                     	;# 
   493  0EA2                     	;# 
   494  0EA3                     	;# 
   495  0EA4                     	;# 
   496  0EA5                     	;# 
   497  0EA6                     	;# 
   498  0EA7                     	;# 
   499  0F0F                     	;# 
   500  0F10                     	;# 
   501  0F11                     	;# 
   502  0F12                     	;# 
   503  0F13                     	;# 
   504  0F14                     	;# 
   505  0F15                     	;# 
   506  0F16                     	;# 
   507  0F17                     	;# 
   508  0F18                     	;# 
   509  0F19                     	;# 
   510  0F1A                     	;# 
   511  0F1B                     	;# 
   512  0F1C                     	;# 
   513  0F1D                     	;# 
   514  0F1E                     	;# 
   515  0F1F                     	;# 
   516  0F20                     	;# 
   517  0F21                     	;# 
   518  0F22                     	;# 
   519  0F23                     	;# 
   520  0F24                     	;# 
   521  0F25                     	;# 
   522  0F26                     	;# 
   523  0F27                     	;# 
   524  0F28                     	;# 
   525  0F29                     	;# 
   526  0F2A                     	;# 
   527  0F2B                     	;# 
   528  0F2C                     	;# 
   529  0F2D                     	;# 
   530  0F2E                     	;# 
   531  0F2F                     	;# 
   532  0F30                     	;# 
   533  0F31                     	;# 
   534  0F32                     	;# 
   535  0F33                     	;# 
   536  0F34                     	;# 
   537  0F35                     	;# 
   538  0F36                     	;# 
   539  0F37                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0016                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001D                     	;# 
   583  001E                     	;# 
   584  001F                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  009F                     	;# 
   604  010C                     	;# 
   605  010D                     	;# 
   606  010E                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0115                     	;# 
   612  0116                     	;# 
   613  0117                     	;# 
   614  0118                     	;# 
   615  0119                     	;# 
   616  011C                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  018E                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0197                     	;# 
   629  0199                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  019A                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019C                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  020C                     	;# 
   655  020D                     	;# 
   656  020E                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  028C                     	;# 
   674  028D                     	;# 
   675  028E                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0298                     	;# 
   682  0298                     	;# 
   683  0299                     	;# 
   684  029A                     	;# 
   685  029B                     	;# 
   686  029E                     	;# 
   687  030C                     	;# 
   688  030D                     	;# 
   689  030E                     	;# 
   690  038C                     	;# 
   691  038D                     	;# 
   692  038E                     	;# 
   693  0391                     	;# 
   694  0392                     	;# 
   695  0393                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  0397                     	;# 
   700  0398                     	;# 
   701  0399                     	;# 
   702  040E                     	;# 
   703  0413                     	;# 
   704  0413                     	;# 
   705  0414                     	;# 
   706  0414                     	;# 
   707  0415                     	;# 
   708  0416                     	;# 
   709  0417                     	;# 
   710  0418                     	;# 
   711  041A                     	;# 
   712  041A                     	;# 
   713  041B                     	;# 
   714  041B                     	;# 
   715  041C                     	;# 
   716  041D                     	;# 
   717  041E                     	;# 
   718  041F                     	;# 
   719  0493                     	;# 
   720  0494                     	;# 
   721  0495                     	;# 
   722  0496                     	;# 
   723  049A                     	;# 
   724  049B                     	;# 
   725  049C                     	;# 
   726  049D                     	;# 
   727  058C                     	;# 
   728  058C                     	;# 
   729  058D                     	;# 
   730  058E                     	;# 
   731  058E                     	;# 
   732  058F                     	;# 
   733  0590                     	;# 
   734  0590                     	;# 
   735  0591                     	;# 
   736  0592                     	;# 
   737  0592                     	;# 
   738  0593                     	;# 
   739  0594                     	;# 
   740  0594                     	;# 
   741  0595                     	;# 
   742  0596                     	;# 
   743  0596                     	;# 
   744  0597                     	;# 
   745  0598                     	;# 
   746  0599                     	;# 
   747  059A                     	;# 
   748  059B                     	;# 
   749  059B                     	;# 
   750  059C                     	;# 
   751  059D                     	;# 
   752  060C                     	;# 
   753  060C                     	;# 
   754  060D                     	;# 
   755  060E                     	;# 
   756  060F                     	;# 
   757  060F                     	;# 
   758  0610                     	;# 
   759  0611                     	;# 
   760  0612                     	;# 
   761  0613                     	;# 
   762  0614                     	;# 
   763  0617                     	;# 
   764  0617                     	;# 
   765  0618                     	;# 
   766  0619                     	;# 
   767  061A                     	;# 
   768  061A                     	;# 
   769  061B                     	;# 
   770  061C                     	;# 
   771  0691                     	;# 
   772  0692                     	;# 
   773  0693                     	;# 
   774  0694                     	;# 
   775  0695                     	;# 
   776  0696                     	;# 
   777  0697                     	;# 
   778  0699                     	;# 
   779  069A                     	;# 
   780  0711                     	;# 
   781  0712                     	;# 
   782  0713                     	;# 
   783  0714                     	;# 
   784  0715                     	;# 
   785  0718                     	;# 
   786  0718                     	;# 
   787  0719                     	;# 
   788  071A                     	;# 
   789  071A                     	;# 
   790  071B                     	;# 
   791  071C                     	;# 
   792  071D                     	;# 
   793  0791                     	;# 
   794  0791                     	;# 
   795  0792                     	;# 
   796  0793                     	;# 
   797  0793                     	;# 
   798  0794                     	;# 
   799  0795                     	;# 
   800  0795                     	;# 
   801  0796                     	;# 
   802  0797                     	;# 
   803  0797                     	;# 
   804  0798                     	;# 
   805  0799                     	;# 
   806  079A                     	;# 
   807  080C                     	;# 
   808  080C                     	;# 
   809  080D                     	;# 
   810  080E                     	;# 
   811  080E                     	;# 
   812  080F                     	;# 
   813  0810                     	;# 
   814  0810                     	;# 
   815  0811                     	;# 
   816  0812                     	;# 
   817  0812                     	;# 
   818  0813                     	;# 
   819  0814                     	;# 
   820  0815                     	;# 
   821  0816                     	;# 
   822  0817                     	;# 
   823  0818                     	;# 
   824  0819                     	;# 
   825  081A                     	;# 
   826  081A                     	;# 
   827  081B                     	;# 
   828  081C                     	;# 
   829  081C                     	;# 
   830  081D                     	;# 
   831  088C                     	;# 
   832  088D                     	;# 
   833  088E                     	;# 
   834  088F                     	;# 
   835  088F                     	;# 
   836  0890                     	;# 
   837  0891                     	;# 
   838  0892                     	;# 
   839  0893                     	;# 
   840  0893                     	;# 
   841  0894                     	;# 
   842  0895                     	;# 
   843  0896                     	;# 
   844  0897                     	;# 
   845  0897                     	;# 
   846  0898                     	;# 
   847  0899                     	;# 
   848  0D8C                     	;# 
   849  0D8C                     	;# 
   850  0D8D                     	;# 
   851  0D8E                     	;# 
   852  0D8F                     	;# 
   853  0D8F                     	;# 
   854  0D90                     	;# 
   855  0D91                     	;# 
   856  0D92                     	;# 
   857  0D92                     	;# 
   858  0D93                     	;# 
   859  0D94                     	;# 
   860  0D95                     	;# 
   861  0D95                     	;# 
   862  0D96                     	;# 
   863  0D97                     	;# 
   864  0D98                     	;# 
   865  0D99                     	;# 
   866  0D9A                     	;# 
   867  0D9B                     	;# 
   868  0D9C                     	;# 
   869  0D9D                     	;# 
   870  0D9E                     	;# 
   871  0D9E                     	;# 
   872  0D9F                     	;# 
   873  0DA0                     	;# 
   874  0DA1                     	;# 
   875  0DA1                     	;# 
   876  0DA2                     	;# 
   877  0DA3                     	;# 
   878  0DA4                     	;# 
   879  0DA4                     	;# 
   880  0DA5                     	;# 
   881  0DA6                     	;# 
   882  0DA7                     	;# 
   883  0DA7                     	;# 
   884  0DA8                     	;# 
   885  0DA9                     	;# 
   886  0DAA                     	;# 
   887  0DAB                     	;# 
   888  0DAC                     	;# 
   889  0DAD                     	;# 
   890  0DAE                     	;# 
   891  0DAF                     	;# 
   892  0E0F                     	;# 
   893  0E10                     	;# 
   894  0E11                     	;# 
   895  0E12                     	;# 
   896  0E13                     	;# 
   897  0E14                     	;# 
   898  0E15                     	;# 
   899  0E16                     	;# 
   900  0E17                     	;# 
   901  0E18                     	;# 
   902  0E19                     	;# 
   903  0E1A                     	;# 
   904  0E1B                     	;# 
   905  0E1C                     	;# 
   906  0E1D                     	;# 
   907  0E1E                     	;# 
   908  0E1F                     	;# 
   909  0E20                     	;# 
   910  0E21                     	;# 
   911  0E22                     	;# 
   912  0E23                     	;# 
   913  0E24                     	;# 
   914  0E25                     	;# 
   915  0E26                     	;# 
   916  0E27                     	;# 
   917  0E28                     	;# 
   918  0E29                     	;# 
   919  0E2A                     	;# 
   920  0E2B                     	;# 
   921  0E2C                     	;# 
   922  0E2D                     	;# 
   923  0E2E                     	;# 
   924  0E90                     	;# 
   925  0E91                     	;# 
   926  0E92                     	;# 
   927  0E94                     	;# 
   928  0E95                     	;# 
   929  0E9C                     	;# 
   930  0E9D                     	;# 
   931  0E9E                     	;# 
   932  0E9F                     	;# 
   933  0EA0                     	;# 
   934  0EA1                     	;# 
   935  0EA2                     	;# 
   936  0EA3                     	;# 
   937  0EA4                     	;# 
   938  0EA5                     	;# 
   939  0EA6                     	;# 
   940  0EA7                     	;# 
   941  0F0F                     	;# 
   942  0F10                     	;# 
   943  0F11                     	;# 
   944  0F12                     	;# 
   945  0F13                     	;# 
   946  0F14                     	;# 
   947  0F15                     	;# 
   948  0F16                     	;# 
   949  0F17                     	;# 
   950  0F18                     	;# 
   951  0F19                     	;# 
   952  0F1A                     	;# 
   953  0F1B                     	;# 
   954  0F1C                     	;# 
   955  0F1D                     	;# 
   956  0F1E                     	;# 
   957  0F1F                     	;# 
   958  0F20                     	;# 
   959  0F21                     	;# 
   960  0F22                     	;# 
   961  0F23                     	;# 
   962  0F24                     	;# 
   963  0F25                     	;# 
   964  0F26                     	;# 
   965  0F27                     	;# 
   966  0F28                     	;# 
   967  0F29                     	;# 
   968  0F2A                     	;# 
   969  0F2B                     	;# 
   970  0F2C                     	;# 
   971  0F2D                     	;# 
   972  0F2E                     	;# 
   973  0F2F                     	;# 
   974  0F30                     	;# 
   975  0F31                     	;# 
   976  0F32                     	;# 
   977  0F33                     	;# 
   978  0F34                     	;# 
   979  0F35                     	;# 
   980  0F36                     	;# 
   981  0F37                     	;# 
   982  0FE4                     	;# 
   983  0FE5                     	;# 
   984  0FE6                     	;# 
   985  0FE7                     	;# 
   986  0FE8                     	;# 
   987  0FE9                     	;# 
   988  0FEA                     	;# 
   989  0FEB                     	;# 
   990  0FED                     	;# 
   991  0FEE                     	;# 
   992  0FEF                     	;# 
   993  0000                     	;# 
   994  0001                     	;# 
   995  0002                     	;# 
   996  0003                     	;# 
   997  0004                     	;# 
   998  0005                     	;# 
   999  0006                     	;# 
  1000  0007                     	;# 
  1001  0008                     	;# 
  1002  0009                     	;# 
  1003  000A                     	;# 
  1004  000B                     	;# 
  1005  000C                     	;# 
  1006  000D                     	;# 
  1007  000E                     	;# 
  1008  0010                     	;# 
  1009  0011                     	;# 
  1010  0012                     	;# 
  1011  0013                     	;# 
  1012  0014                     	;# 
  1013  0015                     	;# 
  1014  0016                     	;# 
  1015  0016                     	;# 
  1016  0017                     	;# 
  1017  0018                     	;# 
  1018  0019                     	;# 
  1019  001A                     	;# 
  1020  001A                     	;# 
  1021  001B                     	;# 
  1022  001B                     	;# 
  1023  001C                     	;# 
  1024  001D                     	;# 
  1025  001E                     	;# 
  1026  001F                     	;# 
  1027  008C                     	;# 
  1028  008D                     	;# 
  1029  008E                     	;# 
  1030  0090                     	;# 
  1031  0091                     	;# 
  1032  0092                     	;# 
  1033  0093                     	;# 
  1034  0094                     	;# 
  1035  0095                     	;# 
  1036  0096                     	;# 
  1037  0098                     	;# 
  1038  0099                     	;# 
  1039  009A                     	;# 
  1040  009B                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  010C                     	;# 
  1047  010D                     	;# 
  1048  010E                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  011C                     	;# 
  1059  018C                     	;# 
  1060  018D                     	;# 
  1061  018E                     	;# 
  1062  0191                     	;# 
  1063  0191                     	;# 
  1064  0192                     	;# 
  1065  0193                     	;# 
  1066  0193                     	;# 
  1067  0194                     	;# 
  1068  0195                     	;# 
  1069  0196                     	;# 
  1070  0197                     	;# 
  1071  0199                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  019A                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019C                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019D                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019E                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  020C                     	;# 
  1097  020D                     	;# 
  1098  020E                     	;# 
  1099  0211                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0212                     	;# 
  1103  0213                     	;# 
  1104  0213                     	;# 
  1105  0214                     	;# 
  1106  0214                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0216                     	;# 
  1112  0216                     	;# 
  1113  0217                     	;# 
  1114  0217                     	;# 
  1115  028C                     	;# 
  1116  028D                     	;# 
  1117  028E                     	;# 
  1118  0291                     	;# 
  1119  0291                     	;# 
  1120  0292                     	;# 
  1121  0293                     	;# 
  1122  0294                     	;# 
  1123  0298                     	;# 
  1124  0298                     	;# 
  1125  0299                     	;# 
  1126  029A                     	;# 
  1127  029B                     	;# 
  1128  029E                     	;# 
  1129  030C                     	;# 
  1130  030D                     	;# 
  1131  030E                     	;# 
  1132  038C                     	;# 
  1133  038D                     	;# 
  1134  038E                     	;# 
  1135  0391                     	;# 
  1136  0392                     	;# 
  1137  0393                     	;# 
  1138  0394                     	;# 
  1139  0395                     	;# 
  1140  0396                     	;# 
  1141  0397                     	;# 
  1142  0398                     	;# 
  1143  0399                     	;# 
  1144  040E                     	;# 
  1145  0413                     	;# 
  1146  0413                     	;# 
  1147  0414                     	;# 
  1148  0414                     	;# 
  1149  0415                     	;# 
  1150  0416                     	;# 
  1151  0417                     	;# 
  1152  0418                     	;# 
  1153  041A                     	;# 
  1154  041A                     	;# 
  1155  041B                     	;# 
  1156  041B                     	;# 
  1157  041C                     	;# 
  1158  041D                     	;# 
  1159  041E                     	;# 
  1160  041F                     	;# 
  1161  0493                     	;# 
  1162  0494                     	;# 
  1163  0495                     	;# 
  1164  0496                     	;# 
  1165  049A                     	;# 
  1166  049B                     	;# 
  1167  049C                     	;# 
  1168  049D                     	;# 
  1169  058C                     	;# 
  1170  058C                     	;# 
  1171  058D                     	;# 
  1172  058E                     	;# 
  1173  058E                     	;# 
  1174  058F                     	;# 
  1175  0590                     	;# 
  1176  0590                     	;# 
  1177  0591                     	;# 
  1178  0592                     	;# 
  1179  0592                     	;# 
  1180  0593                     	;# 
  1181  0594                     	;# 
  1182  0594                     	;# 
  1183  0595                     	;# 
  1184  0596                     	;# 
  1185  0596                     	;# 
  1186  0597                     	;# 
  1187  0598                     	;# 
  1188  0599                     	;# 
  1189  059A                     	;# 
  1190  059B                     	;# 
  1191  059B                     	;# 
  1192  059C                     	;# 
  1193  059D                     	;# 
  1194  060C                     	;# 
  1195  060C                     	;# 
  1196  060D                     	;# 
  1197  060E                     	;# 
  1198  060F                     	;# 
  1199  060F                     	;# 
  1200  0610                     	;# 
  1201  0611                     	;# 
  1202  0612                     	;# 
  1203  0613                     	;# 
  1204  0614                     	;# 
  1205  0617                     	;# 
  1206  0617                     	;# 
  1207  0618                     	;# 
  1208  0619                     	;# 
  1209  061A                     	;# 
  1210  061A                     	;# 
  1211  061B                     	;# 
  1212  061C                     	;# 
  1213  0691                     	;# 
  1214  0692                     	;# 
  1215  0693                     	;# 
  1216  0694                     	;# 
  1217  0695                     	;# 
  1218  0696                     	;# 
  1219  0697                     	;# 
  1220  0699                     	;# 
  1221  069A                     	;# 
  1222  0711                     	;# 
  1223  0712                     	;# 
  1224  0713                     	;# 
  1225  0714                     	;# 
  1226  0715                     	;# 
  1227  0718                     	;# 
  1228  0718                     	;# 
  1229  0719                     	;# 
  1230  071A                     	;# 
  1231  071A                     	;# 
  1232  071B                     	;# 
  1233  071C                     	;# 
  1234  071D                     	;# 
  1235  0791                     	;# 
  1236  0791                     	;# 
  1237  0792                     	;# 
  1238  0793                     	;# 
  1239  0793                     	;# 
  1240  0794                     	;# 
  1241  0795                     	;# 
  1242  0795                     	;# 
  1243  0796                     	;# 
  1244  0797                     	;# 
  1245  0797                     	;# 
  1246  0798                     	;# 
  1247  0799                     	;# 
  1248  079A                     	;# 
  1249  080C                     	;# 
  1250  080C                     	;# 
  1251  080D                     	;# 
  1252  080E                     	;# 
  1253  080E                     	;# 
  1254  080F                     	;# 
  1255  0810                     	;# 
  1256  0810                     	;# 
  1257  0811                     	;# 
  1258  0812                     	;# 
  1259  0812                     	;# 
  1260  0813                     	;# 
  1261  0814                     	;# 
  1262  0815                     	;# 
  1263  0816                     	;# 
  1264  0817                     	;# 
  1265  0818                     	;# 
  1266  0819                     	;# 
  1267  081A                     	;# 
  1268  081A                     	;# 
  1269  081B                     	;# 
  1270  081C                     	;# 
  1271  081C                     	;# 
  1272  081D                     	;# 
  1273  088C                     	;# 
  1274  088D                     	;# 
  1275  088E                     	;# 
  1276  088F                     	;# 
  1277  088F                     	;# 
  1278  0890                     	;# 
  1279  0891                     	;# 
  1280  0892                     	;# 
  1281  0893                     	;# 
  1282  0893                     	;# 
  1283  0894                     	;# 
  1284  0895                     	;# 
  1285  0896                     	;# 
  1286  0897                     	;# 
  1287  0897                     	;# 
  1288  0898                     	;# 
  1289  0899                     	;# 
  1290  0D8C                     	;# 
  1291  0D8C                     	;# 
  1292  0D8D                     	;# 
  1293  0D8E                     	;# 
  1294  0D8F                     	;# 
  1295  0D8F                     	;# 
  1296  0D90                     	;# 
  1297  0D91                     	;# 
  1298  0D92                     	;# 
  1299  0D92                     	;# 
  1300  0D93                     	;# 
  1301  0D94                     	;# 
  1302  0D95                     	;# 
  1303  0D95                     	;# 
  1304  0D96                     	;# 
  1305  0D97                     	;# 
  1306  0D98                     	;# 
  1307  0D99                     	;# 
  1308  0D9A                     	;# 
  1309  0D9B                     	;# 
  1310  0D9C                     	;# 
  1311  0D9D                     	;# 
  1312  0D9E                     	;# 
  1313  0D9E                     	;# 
  1314  0D9F                     	;# 
  1315  0DA0                     	;# 
  1316  0DA1                     	;# 
  1317  0DA1                     	;# 
  1318  0DA2                     	;# 
  1319  0DA3                     	;# 
  1320  0DA4                     	;# 
  1321  0DA4                     	;# 
  1322  0DA5                     	;# 
  1323  0DA6                     	;# 
  1324  0DA7                     	;# 
  1325  0DA7                     	;# 
  1326  0DA8                     	;# 
  1327  0DA9                     	;# 
  1328  0DAA                     	;# 
  1329  0DAB                     	;# 
  1330  0DAC                     	;# 
  1331  0DAD                     	;# 
  1332  0DAE                     	;# 
  1333  0DAF                     	;# 
  1334  0E0F                     	;# 
  1335  0E10                     	;# 
  1336  0E11                     	;# 
  1337  0E12                     	;# 
  1338  0E13                     	;# 
  1339  0E14                     	;# 
  1340  0E15                     	;# 
  1341  0E16                     	;# 
  1342  0E17                     	;# 
  1343  0E18                     	;# 
  1344  0E19                     	;# 
  1345  0E1A                     	;# 
  1346  0E1B                     	;# 
  1347  0E1C                     	;# 
  1348  0E1D                     	;# 
  1349  0E1E                     	;# 
  1350  0E1F                     	;# 
  1351  0E20                     	;# 
  1352  0E21                     	;# 
  1353  0E22                     	;# 
  1354  0E23                     	;# 
  1355  0E24                     	;# 
  1356  0E25                     	;# 
  1357  0E26                     	;# 
  1358  0E27                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E90                     	;# 
  1367  0E91                     	;# 
  1368  0E92                     	;# 
  1369  0E94                     	;# 
  1370  0E95                     	;# 
  1371  0E9C                     	;# 
  1372  0E9D                     	;# 
  1373  0E9E                     	;# 
  1374  0E9F                     	;# 
  1375  0EA0                     	;# 
  1376  0EA1                     	;# 
  1377  0EA2                     	;# 
  1378  0EA3                     	;# 
  1379  0EA4                     	;# 
  1380  0EA5                     	;# 
  1381  0EA6                     	;# 
  1382  0EA7                     	;# 
  1383  0F0F                     	;# 
  1384  0F10                     	;# 
  1385  0F11                     	;# 
  1386  0F12                     	;# 
  1387  0F13                     	;# 
  1388  0F14                     	;# 
  1389  0F15                     	;# 
  1390  0F16                     	;# 
  1391  0F17                     	;# 
  1392  0F18                     	;# 
  1393  0F19                     	;# 
  1394  0F1A                     	;# 
  1395  0F1B                     	;# 
  1396  0F1C                     	;# 
  1397  0F1D                     	;# 
  1398  0F1E                     	;# 
  1399  0F1F                     	;# 
  1400  0F20                     	;# 
  1401  0F21                     	;# 
  1402  0F22                     	;# 
  1403  0F23                     	;# 
  1404  0F24                     	;# 
  1405  0F25                     	;# 
  1406  0F26                     	;# 
  1407  0F27                     	;# 
  1408  0F28                     	;# 
  1409  0F29                     	;# 
  1410  0F2A                     	;# 
  1411  0F2B                     	;# 
  1412  0F2C                     	;# 
  1413  0F2D                     	;# 
  1414  0F2E                     	;# 
  1415  0F2F                     	;# 
  1416  0F30                     	;# 
  1417  0F31                     	;# 
  1418  0F32                     	;# 
  1419  0F33                     	;# 
  1420  0F34                     	;# 
  1421  0F35                     	;# 
  1422  0F36                     	;# 
  1423  0F37                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0013                     	;# 
  1454  0014                     	;# 
  1455  0015                     	;# 
  1456  0016                     	;# 
  1457  0016                     	;# 
  1458  0017                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  001A                     	;# 
  1463  001B                     	;# 
  1464  001B                     	;# 
  1465  001C                     	;# 
  1466  001D                     	;# 
  1467  001E                     	;# 
  1468  001F                     	;# 
  1469  008C                     	;# 
  1470  008D                     	;# 
  1471  008E                     	;# 
  1472  0090                     	;# 
  1473  0091                     	;# 
  1474  0092                     	;# 
  1475  0093                     	;# 
  1476  0094                     	;# 
  1477  0095                     	;# 
  1478  0096                     	;# 
  1479  0098                     	;# 
  1480  0099                     	;# 
  1481  009A                     	;# 
  1482  009B                     	;# 
  1483  009B                     	;# 
  1484  009C                     	;# 
  1485  009D                     	;# 
  1486  009E                     	;# 
  1487  009F                     	;# 
  1488  010C                     	;# 
  1489  010D                     	;# 
  1490  010E                     	;# 
  1491  0111                     	;# 
  1492  0112                     	;# 
  1493  0113                     	;# 
  1494  0114                     	;# 
  1495  0115                     	;# 
  1496  0116                     	;# 
  1497  0117                     	;# 
  1498  0118                     	;# 
  1499  0119                     	;# 
  1500  011C                     	;# 
  1501  018C                     	;# 
  1502  018D                     	;# 
  1503  018E                     	;# 
  1504  0191                     	;# 
  1505  0191                     	;# 
  1506  0192                     	;# 
  1507  0193                     	;# 
  1508  0193                     	;# 
  1509  0194                     	;# 
  1510  0195                     	;# 
  1511  0196                     	;# 
  1512  0197                     	;# 
  1513  0199                     	;# 
  1514  0199                     	;# 
  1515  0199                     	;# 
  1516  019A                     	;# 
  1517  019A                     	;# 
  1518  019A                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019C                     	;# 
  1525  019C                     	;# 
  1526  019C                     	;# 
  1527  019D                     	;# 
  1528  019D                     	;# 
  1529  019D                     	;# 
  1530  019E                     	;# 
  1531  019E                     	;# 
  1532  019E                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  020C                     	;# 
  1539  020D                     	;# 
  1540  020E                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0216                     	;# 
  1554  0216                     	;# 
  1555  0217                     	;# 
  1556  0217                     	;# 
  1557  028C                     	;# 
  1558  028D                     	;# 
  1559  028E                     	;# 
  1560  0291                     	;# 
  1561  0291                     	;# 
  1562  0292                     	;# 
  1563  0293                     	;# 
  1564  0294                     	;# 
  1565  0298                     	;# 
  1566  0298                     	;# 
  1567  0299                     	;# 
  1568  029A                     	;# 
  1569  029B                     	;# 
  1570  029E                     	;# 
  1571  030C                     	;# 
  1572  030D                     	;# 
  1573  030E                     	;# 
  1574  038C                     	;# 
  1575  038D                     	;# 
  1576  038E                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  040E                     	;# 
  1587  0413                     	;# 
  1588  0413                     	;# 
  1589  0414                     	;# 
  1590  0414                     	;# 
  1591  0415                     	;# 
  1592  0416                     	;# 
  1593  0417                     	;# 
  1594  0418                     	;# 
  1595  041A                     	;# 
  1596  041A                     	;# 
  1597  041B                     	;# 
  1598  041B                     	;# 
  1599  041C                     	;# 
  1600  041D                     	;# 
  1601  041E                     	;# 
  1602  041F                     	;# 
  1603  0493                     	;# 
  1604  0494                     	;# 
  1605  0495                     	;# 
  1606  0496                     	;# 
  1607  049A                     	;# 
  1608  049B                     	;# 
  1609  049C                     	;# 
  1610  049D                     	;# 
  1611  058C                     	;# 
  1612  058C                     	;# 
  1613  058D                     	;# 
  1614  058E                     	;# 
  1615  058E                     	;# 
  1616  058F                     	;# 
  1617  0590                     	;# 
  1618  0590                     	;# 
  1619  0591                     	;# 
  1620  0592                     	;# 
  1621  0592                     	;# 
  1622  0593                     	;# 
  1623  0594                     	;# 
  1624  0594                     	;# 
  1625  0595                     	;# 
  1626  0596                     	;# 
  1627  0596                     	;# 
  1628  0597                     	;# 
  1629  0598                     	;# 
  1630  0599                     	;# 
  1631  059A                     	;# 
  1632  059B                     	;# 
  1633  059B                     	;# 
  1634  059C                     	;# 
  1635  059D                     	;# 
  1636  060C                     	;# 
  1637  060C                     	;# 
  1638  060D                     	;# 
  1639  060E                     	;# 
  1640  060F                     	;# 
  1641  060F                     	;# 
  1642  0610                     	;# 
  1643  0611                     	;# 
  1644  0612                     	;# 
  1645  0613                     	;# 
  1646  0614                     	;# 
  1647  0617                     	;# 
  1648  0617                     	;# 
  1649  0618                     	;# 
  1650  0619                     	;# 
  1651  061A                     	;# 
  1652  061A                     	;# 
  1653  061B                     	;# 
  1654  061C                     	;# 
  1655  0691                     	;# 
  1656  0692                     	;# 
  1657  0693                     	;# 
  1658  0694                     	;# 
  1659  0695                     	;# 
  1660  0696                     	;# 
  1661  0697                     	;# 
  1662  0699                     	;# 
  1663  069A                     	;# 
  1664  0711                     	;# 
  1665  0712                     	;# 
  1666  0713                     	;# 
  1667  0714                     	;# 
  1668  0715                     	;# 
  1669  0718                     	;# 
  1670  0718                     	;# 
  1671  0719                     	;# 
  1672  071A                     	;# 
  1673  071A                     	;# 
  1674  071B                     	;# 
  1675  071C                     	;# 
  1676  071D                     	;# 
  1677  0791                     	;# 
  1678  0791                     	;# 
  1679  0792                     	;# 
  1680  0793                     	;# 
  1681  0793                     	;# 
  1682  0794                     	;# 
  1683  0795                     	;# 
  1684  0795                     	;# 
  1685  0796                     	;# 
  1686  0797                     	;# 
  1687  0797                     	;# 
  1688  0798                     	;# 
  1689  0799                     	;# 
  1690  079A                     	;# 
  1691  080C                     	;# 
  1692  080C                     	;# 
  1693  080D                     	;# 
  1694  080E                     	;# 
  1695  080E                     	;# 
  1696  080F                     	;# 
  1697  0810                     	;# 
  1698  0810                     	;# 
  1699  0811                     	;# 
  1700  0812                     	;# 
  1701  0812                     	;# 
  1702  0813                     	;# 
  1703  0814                     	;# 
  1704  0815                     	;# 
  1705  0816                     	;# 
  1706  0817                     	;# 
  1707  0818                     	;# 
  1708  0819                     	;# 
  1709  081A                     	;# 
  1710  081A                     	;# 
  1711  081B                     	;# 
  1712  081C                     	;# 
  1713  081C                     	;# 
  1714  081D                     	;# 
  1715  088C                     	;# 
  1716  088D                     	;# 
  1717  088E                     	;# 
  1718  088F                     	;# 
  1719  088F                     	;# 
  1720  0890                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0894                     	;# 
  1726  0895                     	;# 
  1727  0896                     	;# 
  1728  0897                     	;# 
  1729  0897                     	;# 
  1730  0898                     	;# 
  1731  0899                     	;# 
  1732  0D8C                     	;# 
  1733  0D8C                     	;# 
  1734  0D8D                     	;# 
  1735  0D8E                     	;# 
  1736  0D8F                     	;# 
  1737  0D8F                     	;# 
  1738  0D90                     	;# 
  1739  0D91                     	;# 
  1740  0D92                     	;# 
  1741  0D92                     	;# 
  1742  0D93                     	;# 
  1743  0D94                     	;# 
  1744  0D95                     	;# 
  1745  0D95                     	;# 
  1746  0D96                     	;# 
  1747  0D97                     	;# 
  1748  0D98                     	;# 
  1749  0D99                     	;# 
  1750  0D9A                     	;# 
  1751  0D9B                     	;# 
  1752  0D9C                     	;# 
  1753  0D9D                     	;# 
  1754  0D9E                     	;# 
  1755  0D9E                     	;# 
  1756  0D9F                     	;# 
  1757  0DA0                     	;# 
  1758  0DA1                     	;# 
  1759  0DA1                     	;# 
  1760  0DA2                     	;# 
  1761  0DA3                     	;# 
  1762  0DA4                     	;# 
  1763  0DA4                     	;# 
  1764  0DA5                     	;# 
  1765  0DA6                     	;# 
  1766  0DA7                     	;# 
  1767  0DA7                     	;# 
  1768  0DA8                     	;# 
  1769  0DA9                     	;# 
  1770  0DAA                     	;# 
  1771  0DAB                     	;# 
  1772  0DAC                     	;# 
  1773  0DAD                     	;# 
  1774  0DAE                     	;# 
  1775  0DAF                     	;# 
  1776  0E0F                     	;# 
  1777  0E10                     	;# 
  1778  0E11                     	;# 
  1779  0E12                     	;# 
  1780  0E13                     	;# 
  1781  0E14                     	;# 
  1782  0E15                     	;# 
  1783  0E16                     	;# 
  1784  0E17                     	;# 
  1785  0E18                     	;# 
  1786  0E19                     	;# 
  1787  0E1A                     	;# 
  1788  0E1B                     	;# 
  1789  0E1C                     	;# 
  1790  0E1D                     	;# 
  1791  0E1E                     	;# 
  1792  0E1F                     	;# 
  1793  0E20                     	;# 
  1794  0E21                     	;# 
  1795  0E22                     	;# 
  1796  0E23                     	;# 
  1797  0E24                     	;# 
  1798  0E25                     	;# 
  1799  0E26                     	;# 
  1800  0E27                     	;# 
  1801  0E28                     	;# 
  1802  0E29                     	;# 
  1803  0E2A                     	;# 
  1804  0E2B                     	;# 
  1805  0E2C                     	;# 
  1806  0E2D                     	;# 
  1807  0E2E                     	;# 
  1808  0E90                     	;# 
  1809  0E91                     	;# 
  1810  0E92                     	;# 
  1811  0E94                     	;# 
  1812  0E95                     	;# 
  1813  0E9C                     	;# 
  1814  0E9D                     	;# 
  1815  0E9E                     	;# 
  1816  0E9F                     	;# 
  1817  0EA0                     	;# 
  1818  0EA1                     	;# 
  1819  0EA2                     	;# 
  1820  0EA3                     	;# 
  1821  0EA4                     	;# 
  1822  0EA5                     	;# 
  1823  0EA6                     	;# 
  1824  0EA7                     	;# 
  1825  0F0F                     	;# 
  1826  0F10                     	;# 
  1827  0F11                     	;# 
  1828  0F12                     	;# 
  1829  0F13                     	;# 
  1830  0F14                     	;# 
  1831  0F15                     	;# 
  1832  0F16                     	;# 
  1833  0F17                     	;# 
  1834  0F18                     	;# 
  1835  0F19                     	;# 
  1836  0F1A                     	;# 
  1837  0F1B                     	;# 
  1838  0F1C                     	;# 
  1839  0F1D                     	;# 
  1840  0F1E                     	;# 
  1841  0F1F                     	;# 
  1842  0F20                     	;# 
  1843  0F21                     	;# 
  1844  0F22                     	;# 
  1845  0F23                     	;# 
  1846  0F24                     	;# 
  1847  0F25                     	;# 
  1848  0F26                     	;# 
  1849  0F27                     	;# 
  1850  0F28                     	;# 
  1851  0F29                     	;# 
  1852  0F2A                     	;# 
  1853  0F2B                     	;# 
  1854  0F2C                     	;# 
  1855  0F2D                     	;# 
  1856  0F2E                     	;# 
  1857  0F2F                     	;# 
  1858  0F30                     	;# 
  1859  0F31                     	;# 
  1860  0F32                     	;# 
  1861  0F33                     	;# 
  1862  0F34                     	;# 
  1863  0F35                     	;# 
  1864  0F36                     	;# 
  1865  0F37                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0013                     	;# 
  1896  0014                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001A                     	;# 
  1905  001B                     	;# 
  1906  001B                     	;# 
  1907  001C                     	;# 
  1908  001D                     	;# 
  1909  001E                     	;# 
  1910  001F                     	;# 
  1911  008C                     	;# 
  1912  008D                     	;# 
  1913  008E                     	;# 
  1914  0090                     	;# 
  1915  0091                     	;# 
  1916  0092                     	;# 
  1917  0093                     	;# 
  1918  0094                     	;# 
  1919  0095                     	;# 
  1920  0096                     	;# 
  1921  0098                     	;# 
  1922  0099                     	;# 
  1923  009A                     	;# 
  1924  009B                     	;# 
  1925  009B                     	;# 
  1926  009C                     	;# 
  1927  009D                     	;# 
  1928  009E                     	;# 
  1929  009F                     	;# 
  1930  010C                     	;# 
  1931  010D                     	;# 
  1932  010E                     	;# 
  1933  0111                     	;# 
  1934  0112                     	;# 
  1935  0113                     	;# 
  1936  0114                     	;# 
  1937  0115                     	;# 
  1938  0116                     	;# 
  1939  0117                     	;# 
  1940  0118                     	;# 
  1941  0119                     	;# 
  1942  011C                     	;# 
  1943  018C                     	;# 
  1944  018D                     	;# 
  1945  018E                     	;# 
  1946  0191                     	;# 
  1947  0191                     	;# 
  1948  0192                     	;# 
  1949  0193                     	;# 
  1950  0193                     	;# 
  1951  0194                     	;# 
  1952  0195                     	;# 
  1953  0196                     	;# 
  1954  0197                     	;# 
  1955  0199                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  019A                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019C                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019D                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019E                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019F                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  020C                     	;# 
  1981  020D                     	;# 
  1982  020E                     	;# 
  1983  0211                     	;# 
  1984  0211                     	;# 
  1985  0212                     	;# 
  1986  0212                     	;# 
  1987  0213                     	;# 
  1988  0213                     	;# 
  1989  0214                     	;# 
  1990  0214                     	;# 
  1991  0215                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0216                     	;# 
  1996  0216                     	;# 
  1997  0217                     	;# 
  1998  0217                     	;# 
  1999  028C                     	;# 
  2000  028D                     	;# 
  2001  028E                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0294                     	;# 
  2007  0298                     	;# 
  2008  0298                     	;# 
  2009  0299                     	;# 
  2010  029A                     	;# 
  2011  029B                     	;# 
  2012  029E                     	;# 
  2013  030C                     	;# 
  2014  030D                     	;# 
  2015  030E                     	;# 
  2016  038C                     	;# 
  2017  038D                     	;# 
  2018  038E                     	;# 
  2019  0391                     	;# 
  2020  0392                     	;# 
  2021  0393                     	;# 
  2022  0394                     	;# 
  2023  0395                     	;# 
  2024  0396                     	;# 
  2025  0397                     	;# 
  2026  0398                     	;# 
  2027  0399                     	;# 
  2028  040E                     	;# 
  2029  0413                     	;# 
  2030  0413                     	;# 
  2031  0414                     	;# 
  2032  0414                     	;# 
  2033  0415                     	;# 
  2034  0416                     	;# 
  2035  0417                     	;# 
  2036  0418                     	;# 
  2037  041A                     	;# 
  2038  041A                     	;# 
  2039  041B                     	;# 
  2040  041B                     	;# 
  2041  041C                     	;# 
  2042  041D                     	;# 
  2043  041E                     	;# 
  2044  041F                     	;# 
  2045  0493                     	;# 
  2046  0494                     	;# 
  2047  0495                     	;# 
  2048  0496                     	;# 
  2049  049A                     	;# 
  2050  049B                     	;# 
  2051  049C                     	;# 
  2052  049D                     	;# 
  2053  058C                     	;# 
  2054  058C                     	;# 
  2055  058D                     	;# 
  2056  058E                     	;# 
  2057  058E                     	;# 
  2058  058F                     	;# 
  2059  0590                     	;# 
  2060  0590                     	;# 
  2061  0591                     	;# 
  2062  0592                     	;# 
  2063  0592                     	;# 
  2064  0593                     	;# 
  2065  0594                     	;# 
  2066  0594                     	;# 
  2067  0595                     	;# 
  2068  0596                     	;# 
  2069  0596                     	;# 
  2070  0597                     	;# 
  2071  0598                     	;# 
  2072  0599                     	;# 
  2073  059A                     	;# 
  2074  059B                     	;# 
  2075  059B                     	;# 
  2076  059C                     	;# 
  2077  059D                     	;# 
  2078  060C                     	;# 
  2079  060C                     	;# 
  2080  060D                     	;# 
  2081  060E                     	;# 
  2082  060F                     	;# 
  2083  060F                     	;# 
  2084  0610                     	;# 
  2085  0611                     	;# 
  2086  0612                     	;# 
  2087  0613                     	;# 
  2088  0614                     	;# 
  2089  0617                     	;# 
  2090  0617                     	;# 
  2091  0618                     	;# 
  2092  0619                     	;# 
  2093  061A                     	;# 
  2094  061A                     	;# 
  2095  061B                     	;# 
  2096  061C                     	;# 
  2097  0691                     	;# 
  2098  0692                     	;# 
  2099  0693                     	;# 
  2100  0694                     	;# 
  2101  0695                     	;# 
  2102  0696                     	;# 
  2103  0697                     	;# 
  2104  0699                     	;# 
  2105  069A                     	;# 
  2106  0711                     	;# 
  2107  0712                     	;# 
  2108  0713                     	;# 
  2109  0714                     	;# 
  2110  0715                     	;# 
  2111  0718                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071A                     	;# 
  2116  071B                     	;# 
  2117  071C                     	;# 
  2118  071D                     	;# 
  2119  0791                     	;# 
  2120  0791                     	;# 
  2121  0792                     	;# 
  2122  0793                     	;# 
  2123  0793                     	;# 
  2124  0794                     	;# 
  2125  0795                     	;# 
  2126  0795                     	;# 
  2127  0796                     	;# 
  2128  0797                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  080C                     	;# 
  2134  080C                     	;# 
  2135  080D                     	;# 
  2136  080E                     	;# 
  2137  080E                     	;# 
  2138  080F                     	;# 
  2139  0810                     	;# 
  2140  0810                     	;# 
  2141  0811                     	;# 
  2142  0812                     	;# 
  2143  0812                     	;# 
  2144  0813                     	;# 
  2145  0814                     	;# 
  2146  0815                     	;# 
  2147  0816                     	;# 
  2148  0817                     	;# 
  2149  0818                     	;# 
  2150  0819                     	;# 
  2151  081A                     	;# 
  2152  081A                     	;# 
  2153  081B                     	;# 
  2154  081C                     	;# 
  2155  081C                     	;# 
  2156  081D                     	;# 
  2157  088C                     	;# 
  2158  088D                     	;# 
  2159  088E                     	;# 
  2160  088F                     	;# 
  2161  088F                     	;# 
  2162  0890                     	;# 
  2163  0891                     	;# 
  2164  0892                     	;# 
  2165  0893                     	;# 
  2166  0893                     	;# 
  2167  0894                     	;# 
  2168  0895                     	;# 
  2169  0896                     	;# 
  2170  0897                     	;# 
  2171  0897                     	;# 
  2172  0898                     	;# 
  2173  0899                     	;# 
  2174  0D8C                     	;# 
  2175  0D8C                     	;# 
  2176  0D8D                     	;# 
  2177  0D8E                     	;# 
  2178  0D8F                     	;# 
  2179  0D8F                     	;# 
  2180  0D90                     	;# 
  2181  0D91                     	;# 
  2182  0D92                     	;# 
  2183  0D92                     	;# 
  2184  0D93                     	;# 
  2185  0D94                     	;# 
  2186  0D95                     	;# 
  2187  0D95                     	;# 
  2188  0D96                     	;# 
  2189  0D97                     	;# 
  2190  0D98                     	;# 
  2191  0D99                     	;# 
  2192  0D9A                     	;# 
  2193  0D9B                     	;# 
  2194  0D9C                     	;# 
  2195  0D9D                     	;# 
  2196  0D9E                     	;# 
  2197  0D9E                     	;# 
  2198  0D9F                     	;# 
  2199  0DA0                     	;# 
  2200  0DA1                     	;# 
  2201  0DA1                     	;# 
  2202  0DA2                     	;# 
  2203  0DA3                     	;# 
  2204  0DA4                     	;# 
  2205  0DA4                     	;# 
  2206  0DA5                     	;# 
  2207  0DA6                     	;# 
  2208  0DA7                     	;# 
  2209  0DA7                     	;# 
  2210  0DA8                     	;# 
  2211  0DA9                     	;# 
  2212  0DAA                     	;# 
  2213  0DAB                     	;# 
  2214  0DAC                     	;# 
  2215  0DAD                     	;# 
  2216  0DAE                     	;# 
  2217  0DAF                     	;# 
  2218  0E0F                     	;# 
  2219  0E10                     	;# 
  2220  0E11                     	;# 
  2221  0E12                     	;# 
  2222  0E13                     	;# 
  2223  0E14                     	;# 
  2224  0E15                     	;# 
  2225  0E16                     	;# 
  2226  0E17                     	;# 
  2227  0E18                     	;# 
  2228  0E19                     	;# 
  2229  0E1A                     	;# 
  2230  0E1B                     	;# 
  2231  0E1C                     	;# 
  2232  0E1D                     	;# 
  2233  0E1E                     	;# 
  2234  0E1F                     	;# 
  2235  0E20                     	;# 
  2236  0E21                     	;# 
  2237  0E22                     	;# 
  2238  0E23                     	;# 
  2239  0E24                     	;# 
  2240  0E25                     	;# 
  2241  0E26                     	;# 
  2242  0E27                     	;# 
  2243  0E28                     	;# 
  2244  0E29                     	;# 
  2245  0E2A                     	;# 
  2246  0E2B                     	;# 
  2247  0E2C                     	;# 
  2248  0E2D                     	;# 
  2249  0E2E                     	;# 
  2250  0E90                     	;# 
  2251  0E91                     	;# 
  2252  0E92                     	;# 
  2253  0E94                     	;# 
  2254  0E95                     	;# 
  2255  0E9C                     	;# 
  2256  0E9D                     	;# 
  2257  0E9E                     	;# 
  2258  0E9F                     	;# 
  2259  0EA0                     	;# 
  2260  0EA1                     	;# 
  2261  0EA2                     	;# 
  2262  0EA3                     	;# 
  2263  0EA4                     	;# 
  2264  0EA5                     	;# 
  2265  0EA6                     	;# 
  2266  0EA7                     	;# 
  2267  0F0F                     	;# 
  2268  0F10                     	;# 
  2269  0F11                     	;# 
  2270  0F12                     	;# 
  2271  0F13                     	;# 
  2272  0F14                     	;# 
  2273  0F15                     	;# 
  2274  0F16                     	;# 
  2275  0F17                     	;# 
  2276  0F18                     	;# 
  2277  0F19                     	;# 
  2278  0F1A                     	;# 
  2279  0F1B                     	;# 
  2280  0F1C                     	;# 
  2281  0F1D                     	;# 
  2282  0F1E                     	;# 
  2283  0F1F                     	;# 
  2284  0F20                     	;# 
  2285  0F21                     	;# 
  2286  0F22                     	;# 
  2287  0F23                     	;# 
  2288  0F24                     	;# 
  2289  0F25                     	;# 
  2290  0F26                     	;# 
  2291  0F27                     	;# 
  2292  0F28                     	;# 
  2293  0F29                     	;# 
  2294  0F2A                     	;# 
  2295  0F2B                     	;# 
  2296  0F2C                     	;# 
  2297  0F2D                     	;# 
  2298  0F2E                     	;# 
  2299  0F2F                     	;# 
  2300  0F30                     	;# 
  2301  0F31                     	;# 
  2302  0F32                     	;# 
  2303  0F33                     	;# 
  2304  0F34                     	;# 
  2305  0F35                     	;# 
  2306  0F36                     	;# 
  2307  0F37                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE9                     	;# 
  2314  0FEA                     	;# 
  2315  0FEB                     	;# 
  2316  0FED                     	;# 
  2317  0FEE                     	;# 
  2318  0FEF                     	;# 
  2319  0000                     	;# 
  2320  0001                     	;# 
  2321  0002                     	;# 
  2322  0003                     	;# 
  2323  0004                     	;# 
  2324  0005                     	;# 
  2325  0006                     	;# 
  2326  0007                     	;# 
  2327  0008                     	;# 
  2328  0009                     	;# 
  2329  000A                     	;# 
  2330  000B                     	;# 
  2331  000C                     	;# 
  2332  000D                     	;# 
  2333  000E                     	;# 
  2334  0010                     	;# 
  2335  0011                     	;# 
  2336  0012                     	;# 
  2337  0013                     	;# 
  2338  0014                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001A                     	;# 
  2347  001B                     	;# 
  2348  001B                     	;# 
  2349  001C                     	;# 
  2350  001D                     	;# 
  2351  001E                     	;# 
  2352  001F                     	;# 
  2353  008C                     	;# 
  2354  008D                     	;# 
  2355  008E                     	;# 
  2356  0090                     	;# 
  2357  0091                     	;# 
  2358  0092                     	;# 
  2359  0093                     	;# 
  2360  0094                     	;# 
  2361  0095                     	;# 
  2362  0096                     	;# 
  2363  0098                     	;# 
  2364  0099                     	;# 
  2365  009A                     	;# 
  2366  009B                     	;# 
  2367  009B                     	;# 
  2368  009C                     	;# 
  2369  009D                     	;# 
  2370  009E                     	;# 
  2371  009F                     	;# 
  2372  010C                     	;# 
  2373  010D                     	;# 
  2374  010E                     	;# 
  2375  0111                     	;# 
  2376  0112                     	;# 
  2377  0113                     	;# 
  2378  0114                     	;# 
  2379  0115                     	;# 
  2380  0116                     	;# 
  2381  0117                     	;# 
  2382  0118                     	;# 
  2383  0119                     	;# 
  2384  011C                     	;# 
  2385  018C                     	;# 
  2386  018D                     	;# 
  2387  018E                     	;# 
  2388  0191                     	;# 
  2389  0191                     	;# 
  2390  0192                     	;# 
  2391  0193                     	;# 
  2392  0193                     	;# 
  2393  0194                     	;# 
  2394  0195                     	;# 
  2395  0196                     	;# 
  2396  0197                     	;# 
  2397  0199                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  019A                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019B                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019C                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019D                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019E                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019F                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  020C                     	;# 
  2423  020D                     	;# 
  2424  020E                     	;# 
  2425  0211                     	;# 
  2426  0211                     	;# 
  2427  0212                     	;# 
  2428  0212                     	;# 
  2429  0213                     	;# 
  2430  0213                     	;# 
  2431  0214                     	;# 
  2432  0214                     	;# 
  2433  0215                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0216                     	;# 
  2438  0216                     	;# 
  2439  0217                     	;# 
  2440  0217                     	;# 
  2441  028C                     	;# 
  2442  028D                     	;# 
  2443  028E                     	;# 
  2444  0291                     	;# 
  2445  0291                     	;# 
  2446  0292                     	;# 
  2447  0293                     	;# 
  2448  0294                     	;# 
  2449  0298                     	;# 
  2450  0298                     	;# 
  2451  0299                     	;# 
  2452  029A                     	;# 
  2453  029B                     	;# 
  2454  029E                     	;# 
  2455  030C                     	;# 
  2456  030D                     	;# 
  2457  030E                     	;# 
  2458  038C                     	;# 
  2459  038D                     	;# 
  2460  038E                     	;# 
  2461  0391                     	;# 
  2462  0392                     	;# 
  2463  0393                     	;# 
  2464  0394                     	;# 
  2465  0395                     	;# 
  2466  0396                     	;# 
  2467  0397                     	;# 
  2468  0398                     	;# 
  2469  0399                     	;# 
  2470  040E                     	;# 
  2471  0413                     	;# 
  2472  0413                     	;# 
  2473  0414                     	;# 
  2474  0414                     	;# 
  2475  0415                     	;# 
  2476  0416                     	;# 
  2477  0417                     	;# 
  2478  0418                     	;# 
  2479  041A                     	;# 
  2480  041A                     	;# 
  2481  041B                     	;# 
  2482  041B                     	;# 
  2483  041C                     	;# 
  2484  041D                     	;# 
  2485  041E                     	;# 
  2486  041F                     	;# 
  2487  0493                     	;# 
  2488  0494                     	;# 
  2489  0495                     	;# 
  2490  0496                     	;# 
  2491  049A                     	;# 
  2492  049B                     	;# 
  2493  049C                     	;# 
  2494  049D                     	;# 
  2495  058C                     	;# 
  2496  058C                     	;# 
  2497  058D                     	;# 
  2498  058E                     	;# 
  2499  058E                     	;# 
  2500  058F                     	;# 
  2501  0590                     	;# 
  2502  0590                     	;# 
  2503  0591                     	;# 
  2504  0592                     	;# 
  2505  0592                     	;# 
  2506  0593                     	;# 
  2507  0594                     	;# 
  2508  0594                     	;# 
  2509  0595                     	;# 
  2510  0596                     	;# 
  2511  0596                     	;# 
  2512  0597                     	;# 
  2513  0598                     	;# 
  2514  0599                     	;# 
  2515  059A                     	;# 
  2516  059B                     	;# 
  2517  059B                     	;# 
  2518  059C                     	;# 
  2519  059D                     	;# 
  2520  060C                     	;# 
  2521  060C                     	;# 
  2522  060D                     	;# 
  2523  060E                     	;# 
  2524  060F                     	;# 
  2525  060F                     	;# 
  2526  0610                     	;# 
  2527  0611                     	;# 
  2528  0612                     	;# 
  2529  0613                     	;# 
  2530  0614                     	;# 
  2531  0617                     	;# 
  2532  0617                     	;# 
  2533  0618                     	;# 
  2534  0619                     	;# 
  2535  061A                     	;# 
  2536  061A                     	;# 
  2537  061B                     	;# 
  2538  061C                     	;# 
  2539  0691                     	;# 
  2540  0692                     	;# 
  2541  0693                     	;# 
  2542  0694                     	;# 
  2543  0695                     	;# 
  2544  0696                     	;# 
  2545  0697                     	;# 
  2546  0699                     	;# 
  2547  069A                     	;# 
  2548  0711                     	;# 
  2549  0712                     	;# 
  2550  0713                     	;# 
  2551  0714                     	;# 
  2552  0715                     	;# 
  2553  0718                     	;# 
  2554  0718                     	;# 
  2555  0719                     	;# 
  2556  071A                     	;# 
  2557  071A                     	;# 
  2558  071B                     	;# 
  2559  071C                     	;# 
  2560  071D                     	;# 
  2561  0791                     	;# 
  2562  0791                     	;# 
  2563  0792                     	;# 
  2564  0793                     	;# 
  2565  0793                     	;# 
  2566  0794                     	;# 
  2567  0795                     	;# 
  2568  0795                     	;# 
  2569  0796                     	;# 
  2570  0797                     	;# 
  2571  0797                     	;# 
  2572  0798                     	;# 
  2573  0799                     	;# 
  2574  079A                     	;# 
  2575  080C                     	;# 
  2576  080C                     	;# 
  2577  080D                     	;# 
  2578  080E                     	;# 
  2579  080E                     	;# 
  2580  080F                     	;# 
  2581  0810                     	;# 
  2582  0810                     	;# 
  2583  0811                     	;# 
  2584  0812                     	;# 
  2585  0812                     	;# 
  2586  0813                     	;# 
  2587  0814                     	;# 
  2588  0815                     	;# 
  2589  0816                     	;# 
  2590  0817                     	;# 
  2591  0818                     	;# 
  2592  0819                     	;# 
  2593  081A                     	;# 
  2594  081A                     	;# 
  2595  081B                     	;# 
  2596  081C                     	;# 
  2597  081C                     	;# 
  2598  081D                     	;# 
  2599  088C                     	;# 
  2600  088D                     	;# 
  2601  088E                     	;# 
  2602  088F                     	;# 
  2603  088F                     	;# 
  2604  0890                     	;# 
  2605  0891                     	;# 
  2606  0892                     	;# 
  2607  0893                     	;# 
  2608  0893                     	;# 
  2609  0894                     	;# 
  2610  0895                     	;# 
  2611  0896                     	;# 
  2612  0897                     	;# 
  2613  0897                     	;# 
  2614  0898                     	;# 
  2615  0899                     	;# 
  2616  0D8C                     	;# 
  2617  0D8C                     	;# 
  2618  0D8D                     	;# 
  2619  0D8E                     	;# 
  2620  0D8F                     	;# 
  2621  0D8F                     	;# 
  2622  0D90                     	;# 
  2623  0D91                     	;# 
  2624  0D92                     	;# 
  2625  0D92                     	;# 
  2626  0D93                     	;# 
  2627  0D94                     	;# 
  2628  0D95                     	;# 
  2629  0D95                     	;# 
  2630  0D96                     	;# 
  2631  0D97                     	;# 
  2632  0D98                     	;# 
  2633  0D99                     	;# 
  2634  0D9A                     	;# 
  2635  0D9B                     	;# 
  2636  0D9C                     	;# 
  2637  0D9D                     	;# 
  2638  0D9E                     	;# 
  2639  0D9E                     	;# 
  2640  0D9F                     	;# 
  2641  0DA0                     	;# 
  2642  0DA1                     	;# 
  2643  0DA1                     	;# 
  2644  0DA2                     	;# 
  2645  0DA3                     	;# 
  2646  0DA4                     	;# 
  2647  0DA4                     	;# 
  2648  0DA5                     	;# 
  2649  0DA6                     	;# 
  2650  0DA7                     	;# 
  2651  0DA7                     	;# 
  2652  0DA8                     	;# 
  2653  0DA9                     	;# 
  2654  0DAA                     	;# 
  2655  0DAB                     	;# 
  2656  0DAC                     	;# 
  2657  0DAD                     	;# 
  2658  0DAE                     	;# 
  2659  0DAF                     	;# 
  2660  0E0F                     	;# 
  2661  0E10                     	;# 
  2662  0E11                     	;# 
  2663  0E12                     	;# 
  2664  0E13                     	;# 
  2665  0E14                     	;# 
  2666  0E15                     	;# 
  2667  0E16                     	;# 
  2668  0E17                     	;# 
  2669  0E18                     	;# 
  2670  0E19                     	;# 
  2671  0E1A                     	;# 
  2672  0E1B                     	;# 
  2673  0E1C                     	;# 
  2674  0E1D                     	;# 
  2675  0E1E                     	;# 
  2676  0E1F                     	;# 
  2677  0E20                     	;# 
  2678  0E21                     	;# 
  2679  0E22                     	;# 
  2680  0E23                     	;# 
  2681  0E24                     	;# 
  2682  0E25                     	;# 
  2683  0E26                     	;# 
  2684  0E27                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E90                     	;# 
  2693  0E91                     	;# 
  2694  0E92                     	;# 
  2695  0E94                     	;# 
  2696  0E95                     	;# 
  2697  0E9C                     	;# 
  2698  0E9D                     	;# 
  2699  0E9E                     	;# 
  2700  0E9F                     	;# 
  2701  0EA0                     	;# 
  2702  0EA1                     	;# 
  2703  0EA2                     	;# 
  2704  0EA3                     	;# 
  2705  0EA4                     	;# 
  2706  0EA5                     	;# 
  2707  0EA6                     	;# 
  2708  0EA7                     	;# 
  2709  0F0F                     	;# 
  2710  0F10                     	;# 
  2711  0F11                     	;# 
  2712  0F12                     	;# 
  2713  0F13                     	;# 
  2714  0F14                     	;# 
  2715  0F15                     	;# 
  2716  0F16                     	;# 
  2717  0F17                     	;# 
  2718  0F18                     	;# 
  2719  0F19                     	;# 
  2720  0F1A                     	;# 
  2721  0F1B                     	;# 
  2722  0F1C                     	;# 
  2723  0F1D                     	;# 
  2724  0F1E                     	;# 
  2725  0F1F                     	;# 
  2726  0F20                     	;# 
  2727  0F21                     	;# 
  2728  0F22                     	;# 
  2729  0F23                     	;# 
  2730  0F24                     	;# 
  2731  0F25                     	;# 
  2732  0F26                     	;# 
  2733  0F27                     	;# 
  2734  0F28                     	;# 
  2735  0F29                     	;# 
  2736  0F2A                     	;# 
  2737  0F2B                     	;# 
  2738  0F2C                     	;# 
  2739  0F2D                     	;# 
  2740  0F2E                     	;# 
  2741  0F2F                     	;# 
  2742  0F30                     	;# 
  2743  0F31                     	;# 
  2744  0F32                     	;# 
  2745  0F33                     	;# 
  2746  0F34                     	;# 
  2747  0F35                     	;# 
  2748  0F36                     	;# 
  2749  0F37                     	;# 
  2750  0FE4                     	;# 
  2751  0FE5                     	;# 
  2752  0FE6                     	;# 
  2753  0FE7                     	;# 
  2754  0FE8                     	;# 
  2755  0FE9                     	;# 
  2756  0FEA                     	;# 
  2757  0FEB                     	;# 
  2758  0FED                     	;# 
  2759  0FEE                     	;# 
  2760  0FEF                     	;# 
  2761  0000                     	;# 
  2762  0001                     	;# 
  2763  0002                     	;# 
  2764  0003                     	;# 
  2765  0004                     	;# 
  2766  0005                     	;# 
  2767  0006                     	;# 
  2768  0007                     	;# 
  2769  0008                     	;# 
  2770  0009                     	;# 
  2771  000A                     	;# 
  2772  000B                     	;# 
  2773  000C                     	;# 
  2774  000D                     	;# 
  2775  000E                     	;# 
  2776  0010                     	;# 
  2777  0011                     	;# 
  2778  0012                     	;# 
  2779  0013                     	;# 
  2780  0014                     	;# 
  2781  0015                     	;# 
  2782  0016                     	;# 
  2783  0016                     	;# 
  2784  0017                     	;# 
  2785  0018                     	;# 
  2786  0019                     	;# 
  2787  001A                     	;# 
  2788  001A                     	;# 
  2789  001B                     	;# 
  2790  001B                     	;# 
  2791  001C                     	;# 
  2792  001D                     	;# 
  2793  001E                     	;# 
  2794  001F                     	;# 
  2795  008C                     	;# 
  2796  008D                     	;# 
  2797  008E                     	;# 
  2798  0090                     	;# 
  2799  0091                     	;# 
  2800  0092                     	;# 
  2801  0093                     	;# 
  2802  0094                     	;# 
  2803  0095                     	;# 
  2804  0096                     	;# 
  2805  0098                     	;# 
  2806  0099                     	;# 
  2807  009A                     	;# 
  2808  009B                     	;# 
  2809  009B                     	;# 
  2810  009C                     	;# 
  2811  009D                     	;# 
  2812  009E                     	;# 
  2813  009F                     	;# 
  2814  010C                     	;# 
  2815  010D                     	;# 
  2816  010E                     	;# 
  2817  0111                     	;# 
  2818  0112                     	;# 
  2819  0113                     	;# 
  2820  0114                     	;# 
  2821  0115                     	;# 
  2822  0116                     	;# 
  2823  0117                     	;# 
  2824  0118                     	;# 
  2825  0119                     	;# 
  2826  011C                     	;# 
  2827  018C                     	;# 
  2828  018D                     	;# 
  2829  018E                     	;# 
  2830  0191                     	;# 
  2831  0191                     	;# 
  2832  0192                     	;# 
  2833  0193                     	;# 
  2834  0193                     	;# 
  2835  0194                     	;# 
  2836  0195                     	;# 
  2837  0196                     	;# 
  2838  0197                     	;# 
  2839  0199                     	;# 
  2840  0199                     	;# 
  2841  0199                     	;# 
  2842  019A                     	;# 
  2843  019A                     	;# 
  2844  019A                     	;# 
  2845  019B                     	;# 
  2846  019B                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019C                     	;# 
  2851  019C                     	;# 
  2852  019C                     	;# 
  2853  019D                     	;# 
  2854  019D                     	;# 
  2855  019D                     	;# 
  2856  019E                     	;# 
  2857  019E                     	;# 
  2858  019E                     	;# 
  2859  019F                     	;# 
  2860  019F                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  020C                     	;# 
  2865  020D                     	;# 
  2866  020E                     	;# 
  2867  0211                     	;# 
  2868  0211                     	;# 
  2869  0212                     	;# 
  2870  0212                     	;# 
  2871  0213                     	;# 
  2872  0213                     	;# 
  2873  0214                     	;# 
  2874  0214                     	;# 
  2875  0215                     	;# 
  2876  0215                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0216                     	;# 
  2880  0216                     	;# 
  2881  0217                     	;# 
  2882  0217                     	;# 
  2883  028C                     	;# 
  2884  028D                     	;# 
  2885  028E                     	;# 
  2886  0291                     	;# 
  2887  0291                     	;# 
  2888  0292                     	;# 
  2889  0293                     	;# 
  2890  0294                     	;# 
  2891  0298                     	;# 
  2892  0298                     	;# 
  2893  0299                     	;# 
  2894  029A                     	;# 
  2895  029B                     	;# 
  2896  029E                     	;# 
  2897  030C                     	;# 
  2898  030D                     	;# 
  2899  030E                     	;# 
  2900  038C                     	;# 
  2901  038D                     	;# 
  2902  038E                     	;# 
  2903  0391                     	;# 
  2904  0392                     	;# 
  2905  0393                     	;# 
  2906  0394                     	;# 
  2907  0395                     	;# 
  2908  0396                     	;# 
  2909  0397                     	;# 
  2910  0398                     	;# 
  2911  0399                     	;# 
  2912  040E                     	;# 
  2913  0413                     	;# 
  2914  0413                     	;# 
  2915  0414                     	;# 
  2916  0414                     	;# 
  2917  0415                     	;# 
  2918  0416                     	;# 
  2919  0417                     	;# 
  2920  0418                     	;# 
  2921  041A                     	;# 
  2922  041A                     	;# 
  2923  041B                     	;# 
  2924  041B                     	;# 
  2925  041C                     	;# 
  2926  041D                     	;# 
  2927  041E                     	;# 
  2928  041F                     	;# 
  2929  0493                     	;# 
  2930  0494                     	;# 
  2931  0495                     	;# 
  2932  0496                     	;# 
  2933  049A                     	;# 
  2934  049B                     	;# 
  2935  049C                     	;# 
  2936  049D                     	;# 
  2937  058C                     	;# 
  2938  058C                     	;# 
  2939  058D                     	;# 
  2940  058E                     	;# 
  2941  058E                     	;# 
  2942  058F                     	;# 
  2943  0590                     	;# 
  2944  0590                     	;# 
  2945  0591                     	;# 
  2946  0592                     	;# 
  2947  0592                     	;# 
  2948  0593                     	;# 
  2949  0594                     	;# 
  2950  0594                     	;# 
  2951  0595                     	;# 
  2952  0596                     	;# 
  2953  0596                     	;# 
  2954  0597                     	;# 
  2955  0598                     	;# 
  2956  0599                     	;# 
  2957  059A                     	;# 
  2958  059B                     	;# 
  2959  059B                     	;# 
  2960  059C                     	;# 
  2961  059D                     	;# 
  2962  060C                     	;# 
  2963  060C                     	;# 
  2964  060D                     	;# 
  2965  060E                     	;# 
  2966  060F                     	;# 
  2967  060F                     	;# 
  2968  0610                     	;# 
  2969  0611                     	;# 
  2970  0612                     	;# 
  2971  0613                     	;# 
  2972  0614                     	;# 
  2973  0617                     	;# 
  2974  0617                     	;# 
  2975  0618                     	;# 
  2976  0619                     	;# 
  2977  061A                     	;# 
  2978  061A                     	;# 
  2979  061B                     	;# 
  2980  061C                     	;# 
  2981  0691                     	;# 
  2982  0692                     	;# 
  2983  0693                     	;# 
  2984  0694                     	;# 
  2985  0695                     	;# 
  2986  0696                     	;# 
  2987  0697                     	;# 
  2988  0699                     	;# 
  2989  069A                     	;# 
  2990  0711                     	;# 
  2991  0712                     	;# 
  2992  0713                     	;# 
  2993  0714                     	;# 
  2994  0715                     	;# 
  2995  0718                     	;# 
  2996  0718                     	;# 
  2997  0719                     	;# 
  2998  071A                     	;# 
  2999  071A                     	;# 
  3000  071B                     	;# 
  3001  071C                     	;# 
  3002  071D                     	;# 
  3003  0791                     	;# 
  3004  0791                     	;# 
  3005  0792                     	;# 
  3006  0793                     	;# 
  3007  0793                     	;# 
  3008  0794                     	;# 
  3009  0795                     	;# 
  3010  0795                     	;# 
  3011  0796                     	;# 
  3012  0797                     	;# 
  3013  0797                     	;# 
  3014  0798                     	;# 
  3015  0799                     	;# 
  3016  079A                     	;# 
  3017  080C                     	;# 
  3018  080C                     	;# 
  3019  080D                     	;# 
  3020  080E                     	;# 
  3021  080E                     	;# 
  3022  080F                     	;# 
  3023  0810                     	;# 
  3024  0810                     	;# 
  3025  0811                     	;# 
  3026  0812                     	;# 
  3027  0812                     	;# 
  3028  0813                     	;# 
  3029  0814                     	;# 
  3030  0815                     	;# 
  3031  0816                     	;# 
  3032  0817                     	;# 
  3033  0818                     	;# 
  3034  0819                     	;# 
  3035  081A                     	;# 
  3036  081A                     	;# 
  3037  081B                     	;# 
  3038  081C                     	;# 
  3039  081C                     	;# 
  3040  081D                     	;# 
  3041  088C                     	;# 
  3042  088D                     	;# 
  3043  088E                     	;# 
  3044  088F                     	;# 
  3045  088F                     	;# 
  3046  0890                     	;# 
  3047  0891                     	;# 
  3048  0892                     	;# 
  3049  0893                     	;# 
  3050  0893                     	;# 
  3051  0894                     	;# 
  3052  0895                     	;# 
  3053  0896                     	;# 
  3054  0897                     	;# 
  3055  0897                     	;# 
  3056  0898                     	;# 
  3057  0899                     	;# 
  3058  0D8C                     	;# 
  3059  0D8C                     	;# 
  3060  0D8D                     	;# 
  3061  0D8E                     	;# 
  3062  0D8F                     	;# 
  3063  0D8F                     	;# 
  3064  0D90                     	;# 
  3065  0D91                     	;# 
  3066  0D92                     	;# 
  3067  0D92                     	;# 
  3068  0D93                     	;# 
  3069  0D94                     	;# 
  3070  0D95                     	;# 
  3071  0D95                     	;# 
  3072  0D96                     	;# 
  3073  0D97                     	;# 
  3074  0D98                     	;# 
  3075  0D99                     	;# 
  3076  0D9A                     	;# 
  3077  0D9B                     	;# 
  3078  0D9C                     	;# 
  3079  0D9D                     	;# 
  3080  0D9E                     	;# 
  3081  0D9E                     	;# 
  3082  0D9F                     	;# 
  3083  0DA0                     	;# 
  3084  0DA1                     	;# 
  3085  0DA1                     	;# 
  3086  0DA2                     	;# 
  3087  0DA3                     	;# 
  3088  0DA4                     	;# 
  3089  0DA4                     	;# 
  3090  0DA5                     	;# 
  3091  0DA6                     	;# 
  3092  0DA7                     	;# 
  3093  0DA7                     	;# 
  3094  0DA8                     	;# 
  3095  0DA9                     	;# 
  3096  0DAA                     	;# 
  3097  0DAB                     	;# 
  3098  0DAC                     	;# 
  3099  0DAD                     	;# 
  3100  0DAE                     	;# 
  3101  0DAF                     	;# 
  3102  0E0F                     	;# 
  3103  0E10                     	;# 
  3104  0E11                     	;# 
  3105  0E12                     	;# 
  3106  0E13                     	;# 
  3107  0E14                     	;# 
  3108  0E15                     	;# 
  3109  0E16                     	;# 
  3110  0E17                     	;# 
  3111  0E18                     	;# 
  3112  0E19                     	;# 
  3113  0E1A                     	;# 
  3114  0E1B                     	;# 
  3115  0E1C                     	;# 
  3116  0E1D                     	;# 
  3117  0E1E                     	;# 
  3118  0E1F                     	;# 
  3119  0E20                     	;# 
  3120  0E21                     	;# 
  3121  0E22                     	;# 
  3122  0E23                     	;# 
  3123  0E24                     	;# 
  3124  0E25                     	;# 
  3125  0E26                     	;# 
  3126  0E27                     	;# 
  3127  0E28                     	;# 
  3128  0E29                     	;# 
  3129  0E2A                     	;# 
  3130  0E2B                     	;# 
  3131  0E2C                     	;# 
  3132  0E2D                     	;# 
  3133  0E2E                     	;# 
  3134  0E90                     	;# 
  3135  0E91                     	;# 
  3136  0E92                     	;# 
  3137  0E94                     	;# 
  3138  0E95                     	;# 
  3139  0E9C                     	;# 
  3140  0E9D                     	;# 
  3141  0E9E                     	;# 
  3142  0E9F                     	;# 
  3143  0EA0                     	;# 
  3144  0EA1                     	;# 
  3145  0EA2                     	;# 
  3146  0EA3                     	;# 
  3147  0EA4                     	;# 
  3148  0EA5                     	;# 
  3149  0EA6                     	;# 
  3150  0EA7                     	;# 
  3151  0F0F                     	;# 
  3152  0F10                     	;# 
  3153  0F11                     	;# 
  3154  0F12                     	;# 
  3155  0F13                     	;# 
  3156  0F14                     	;# 
  3157  0F15                     	;# 
  3158  0F16                     	;# 
  3159  0F17                     	;# 
  3160  0F18                     	;# 
  3161  0F19                     	;# 
  3162  0F1A                     	;# 
  3163  0F1B                     	;# 
  3164  0F1C                     	;# 
  3165  0F1D                     	;# 
  3166  0F1E                     	;# 
  3167  0F1F                     	;# 
  3168  0F20                     	;# 
  3169  0F21                     	;# 
  3170  0F22                     	;# 
  3171  0F23                     	;# 
  3172  0F24                     	;# 
  3173  0F25                     	;# 
  3174  0F26                     	;# 
  3175  0F27                     	;# 
  3176  0F28                     	;# 
  3177  0F29                     	;# 
  3178  0F2A                     	;# 
  3179  0F2B                     	;# 
  3180  0F2C                     	;# 
  3181  0F2D                     	;# 
  3182  0F2E                     	;# 
  3183  0F2F                     	;# 
  3184  0F30                     	;# 
  3185  0F31                     	;# 
  3186  0F32                     	;# 
  3187  0F33                     	;# 
  3188  0F34                     	;# 
  3189  0F35                     	;# 
  3190  0F36                     	;# 
  3191  0F37                     	;# 
  3192  0FE4                     	;# 
  3193  0FE5                     	;# 
  3194  0FE6                     	;# 
  3195  0FE7                     	;# 
  3196  0FE8                     	;# 
  3197  0FE9                     	;# 
  3198  0FEA                     	;# 
  3199  0FEB                     	;# 
  3200  0FED                     	;# 
  3201  0FEE                     	;# 
  3202  0FEF                     	;# 
  3203  0000                     	;# 
  3204  0001                     	;# 
  3205  0002                     	;# 
  3206  0003                     	;# 
  3207  0004                     	;# 
  3208  0005                     	;# 
  3209  0006                     	;# 
  3210  0007                     	;# 
  3211  0008                     	;# 
  3212  0009                     	;# 
  3213  000A                     	;# 
  3214  000B                     	;# 
  3215  000C                     	;# 
  3216  000D                     	;# 
  3217  000E                     	;# 
  3218  0010                     	;# 
  3219  0011                     	;# 
  3220  0012                     	;# 
  3221  0013                     	;# 
  3222  0014                     	;# 
  3223  0015                     	;# 
  3224  0016                     	;# 
  3225  0016                     	;# 
  3226  0017                     	;# 
  3227  0018                     	;# 
  3228  0019                     	;# 
  3229  001A                     	;# 
  3230  001A                     	;# 
  3231  001B                     	;# 
  3232  001B                     	;# 
  3233  001C                     	;# 
  3234  001D                     	;# 
  3235  001E                     	;# 
  3236  001F                     	;# 
  3237  008C                     	;# 
  3238  008D                     	;# 
  3239  008E                     	;# 
  3240  0090                     	;# 
  3241  0091                     	;# 
  3242  0092                     	;# 
  3243  0093                     	;# 
  3244  0094                     	;# 
  3245  0095                     	;# 
  3246  0096                     	;# 
  3247  0098                     	;# 
  3248  0099                     	;# 
  3249  009A                     	;# 
  3250  009B                     	;# 
  3251  009B                     	;# 
  3252  009C                     	;# 
  3253  009D                     	;# 
  3254  009E                     	;# 
  3255  009F                     	;# 
  3256  010C                     	;# 
  3257  010D                     	;# 
  3258  010E                     	;# 
  3259  0111                     	;# 
  3260  0112                     	;# 
  3261  0113                     	;# 
  3262  0114                     	;# 
  3263  0115                     	;# 
  3264  0116                     	;# 
  3265  0117                     	;# 
  3266  0118                     	;# 
  3267  0119                     	;# 
  3268  011C                     	;# 
  3269  018C                     	;# 
  3270  018D                     	;# 
  3271  018E                     	;# 
  3272  0191                     	;# 
  3273  0191                     	;# 
  3274  0192                     	;# 
  3275  0193                     	;# 
  3276  0193                     	;# 
  3277  0194                     	;# 
  3278  0195                     	;# 
  3279  0196                     	;# 
  3280  0197                     	;# 
  3281  0199                     	;# 
  3282  0199                     	;# 
  3283  0199                     	;# 
  3284  019A                     	;# 
  3285  019A                     	;# 
  3286  019A                     	;# 
  3287  019B                     	;# 
  3288  019B                     	;# 
  3289  019B                     	;# 
  3290  019B                     	;# 
  3291  019B                     	;# 
  3292  019C                     	;# 
  3293  019C                     	;# 
  3294  019C                     	;# 
  3295  019D                     	;# 
  3296  019D                     	;# 
  3297  019D                     	;# 
  3298  019E                     	;# 
  3299  019E                     	;# 
  3300  019E                     	;# 
  3301  019F                     	;# 
  3302  019F                     	;# 
  3303  019F                     	;# 
  3304  019F                     	;# 
  3305  019F                     	;# 
  3306  020C                     	;# 
  3307  020D                     	;# 
  3308  020E                     	;# 
  3309  0211                     	;# 
  3310  0211                     	;# 
  3311  0212                     	;# 
  3312  0212                     	;# 
  3313  0213                     	;# 
  3314  0213                     	;# 
  3315  0214                     	;# 
  3316  0214                     	;# 
  3317  0215                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0216                     	;# 
  3322  0216                     	;# 
  3323  0217                     	;# 
  3324  0217                     	;# 
  3325  028C                     	;# 
  3326  028D                     	;# 
  3327  028E                     	;# 
  3328  0291                     	;# 
  3329  0291                     	;# 
  3330  0292                     	;# 
  3331  0293                     	;# 
  3332  0294                     	;# 
  3333  0298                     	;# 
  3334  0298                     	;# 
  3335  0299                     	;# 
  3336  029A                     	;# 
  3337  029B                     	;# 
  3338  029E                     	;# 
  3339  030C                     	;# 
  3340  030D                     	;# 
  3341  030E                     	;# 
  3342  038C                     	;# 
  3343  038D                     	;# 
  3344  038E                     	;# 
  3345  0391                     	;# 
  3346  0392                     	;# 
  3347  0393                     	;# 
  3348  0394                     	;# 
  3349  0395                     	;# 
  3350  0396                     	;# 
  3351  0397                     	;# 
  3352  0398                     	;# 
  3353  0399                     	;# 
  3354  040E                     	;# 
  3355  0413                     	;# 
  3356  0413                     	;# 
  3357  0414                     	;# 
  3358  0414                     	;# 
  3359  0415                     	;# 
  3360  0416                     	;# 
  3361  0417                     	;# 
  3362  0418                     	;# 
  3363  041A                     	;# 
  3364  041A                     	;# 
  3365  041B                     	;# 
  3366  041B                     	;# 
  3367  041C                     	;# 
  3368  041D                     	;# 
  3369  041E                     	;# 
  3370  041F                     	;# 
  3371  0493                     	;# 
  3372  0494                     	;# 
  3373  0495                     	;# 
  3374  0496                     	;# 
  3375  049A                     	;# 
  3376  049B                     	;# 
  3377  049C                     	;# 
  3378  049D                     	;# 
  3379  058C                     	;# 
  3380  058C                     	;# 
  3381  058D                     	;# 
  3382  058E                     	;# 
  3383  058E                     	;# 
  3384  058F                     	;# 
  3385  0590                     	;# 
  3386  0590                     	;# 
  3387  0591                     	;# 
  3388  0592                     	;# 
  3389  0592                     	;# 
  3390  0593                     	;# 
  3391  0594                     	;# 
  3392  0594                     	;# 
  3393  0595                     	;# 
  3394  0596                     	;# 
  3395  0596                     	;# 
  3396  0597                     	;# 
  3397  0598                     	;# 
  3398  0599                     	;# 
  3399  059A                     	;# 
  3400  059B                     	;# 
  3401  059B                     	;# 
  3402  059C                     	;# 
  3403  059D                     	;# 
  3404  060C                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0617                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061A                     	;# 
  3421  061B                     	;# 
  3422  061C                     	;# 
  3423  0691                     	;# 
  3424  0692                     	;# 
  3425  0693                     	;# 
  3426  0694                     	;# 
  3427  0695                     	;# 
  3428  0696                     	;# 
  3429  0697                     	;# 
  3430  0699                     	;# 
  3431  069A                     	;# 
  3432  0711                     	;# 
  3433  0712                     	;# 
  3434  0713                     	;# 
  3435  0714                     	;# 
  3436  0715                     	;# 
  3437  0718                     	;# 
  3438  0718                     	;# 
  3439  0719                     	;# 
  3440  071A                     	;# 
  3441  071A                     	;# 
  3442  071B                     	;# 
  3443  071C                     	;# 
  3444  071D                     	;# 
  3445  0791                     	;# 
  3446  0791                     	;# 
  3447  0792                     	;# 
  3448  0793                     	;# 
  3449  0793                     	;# 
  3450  0794                     	;# 
  3451  0795                     	;# 
  3452  0795                     	;# 
  3453  0796                     	;# 
  3454  0797                     	;# 
  3455  0797                     	;# 
  3456  0798                     	;# 
  3457  0799                     	;# 
  3458  079A                     	;# 
  3459  080C                     	;# 
  3460  080C                     	;# 
  3461  080D                     	;# 
  3462  080E                     	;# 
  3463  080E                     	;# 
  3464  080F                     	;# 
  3465  0810                     	;# 
  3466  0810                     	;# 
  3467  0811                     	;# 
  3468  0812                     	;# 
  3469  0812                     	;# 
  3470  0813                     	;# 
  3471  0814                     	;# 
  3472  0815                     	;# 
  3473  0816                     	;# 
  3474  0817                     	;# 
  3475  0818                     	;# 
  3476  0819                     	;# 
  3477  081A                     	;# 
  3478  081A                     	;# 
  3479  081B                     	;# 
  3480  081C                     	;# 
  3481  081C                     	;# 
  3482  081D                     	;# 
  3483  088C                     	;# 
  3484  088D                     	;# 
  3485  088E                     	;# 
  3486  088F                     	;# 
  3487  088F                     	;# 
  3488  0890                     	;# 
  3489  0891                     	;# 
  3490  0892                     	;# 
  3491  0893                     	;# 
  3492  0893                     	;# 
  3493  0894                     	;# 
  3494  0895                     	;# 
  3495  0896                     	;# 
  3496  0897                     	;# 
  3497  0897                     	;# 
  3498  0898                     	;# 
  3499  0899                     	;# 
  3500  0D8C                     	;# 
  3501  0D8C                     	;# 
  3502  0D8D                     	;# 
  3503  0D8E                     	;# 
  3504  0D8F                     	;# 
  3505  0D8F                     	;# 
  3506  0D90                     	;# 
  3507  0D91                     	;# 
  3508  0D92                     	;# 
  3509  0D92                     	;# 
  3510  0D93                     	;# 
  3511  0D94                     	;# 
  3512  0D95                     	;# 
  3513  0D95                     	;# 
  3514  0D96                     	;# 
  3515  0D97                     	;# 
  3516  0D98                     	;# 
  3517  0D99                     	;# 
  3518  0D9A                     	;# 
  3519  0D9B                     	;# 
  3520  0D9C                     	;# 
  3521  0D9D                     	;# 
  3522  0D9E                     	;# 
  3523  0D9E                     	;# 
  3524  0D9F                     	;# 
  3525  0DA0                     	;# 
  3526  0DA1                     	;# 
  3527  0DA1                     	;# 
  3528  0DA2                     	;# 
  3529  0DA3                     	;# 
  3530  0DA4                     	;# 
  3531  0DA4                     	;# 
  3532  0DA5                     	;# 
  3533  0DA6                     	;# 
  3534  0DA7                     	;# 
  3535  0DA7                     	;# 
  3536  0DA8                     	;# 
  3537  0DA9                     	;# 
  3538  0DAA                     	;# 
  3539  0DAB                     	;# 
  3540  0DAC                     	;# 
  3541  0DAD                     	;# 
  3542  0DAE                     	;# 
  3543  0DAF                     	;# 
  3544  0E0F                     	;# 
  3545  0E10                     	;# 
  3546  0E11                     	;# 
  3547  0E12                     	;# 
  3548  0E13                     	;# 
  3549  0E14                     	;# 
  3550  0E15                     	;# 
  3551  0E16                     	;# 
  3552  0E17                     	;# 
  3553  0E18                     	;# 
  3554  0E19                     	;# 
  3555  0E1A                     	;# 
  3556  0E1B                     	;# 
  3557  0E1C                     	;# 
  3558  0E1D                     	;# 
  3559  0E1E                     	;# 
  3560  0E1F                     	;# 
  3561  0E20                     	;# 
  3562  0E21                     	;# 
  3563  0E22                     	;# 
  3564  0E23                     	;# 
  3565  0E24                     	;# 
  3566  0E25                     	;# 
  3567  0E26                     	;# 
  3568  0E27                     	;# 
  3569  0E28                     	;# 
  3570  0E29                     	;# 
  3571  0E2A                     	;# 
  3572  0E2B                     	;# 
  3573  0E2C                     	;# 
  3574  0E2D                     	;# 
  3575  0E2E                     	;# 
  3576  0E90                     	;# 
  3577  0E91                     	;# 
  3578  0E92                     	;# 
  3579  0E94                     	;# 
  3580  0E95                     	;# 
  3581  0E9C                     	;# 
  3582  0E9D                     	;# 
  3583  0E9E                     	;# 
  3584  0E9F                     	;# 
  3585  0EA0                     	;# 
  3586  0EA1                     	;# 
  3587  0EA2                     	;# 
  3588  0EA3                     	;# 
  3589  0EA4                     	;# 
  3590  0EA5                     	;# 
  3591  0EA6                     	;# 
  3592  0EA7                     	;# 
  3593  0F0F                     	;# 
  3594  0F10                     	;# 
  3595  0F11                     	;# 
  3596  0F12                     	;# 
  3597  0F13                     	;# 
  3598  0F14                     	;# 
  3599  0F15                     	;# 
  3600  0F16                     	;# 
  3601  0F17                     	;# 
  3602  0F18                     	;# 
  3603  0F19                     	;# 
  3604  0F1A                     	;# 
  3605  0F1B                     	;# 
  3606  0F1C                     	;# 
  3607  0F1D                     	;# 
  3608  0F1E                     	;# 
  3609  0F1F                     	;# 
  3610  0F20                     	;# 
  3611  0F21                     	;# 
  3612  0F22                     	;# 
  3613  0F23                     	;# 
  3614  0F24                     	;# 
  3615  0F25                     	;# 
  3616  0F26                     	;# 
  3617  0F27                     	;# 
  3618  0F28                     	;# 
  3619  0F29                     	;# 
  3620  0F2A                     	;# 
  3621  0F2B                     	;# 
  3622  0F2C                     	;# 
  3623  0F2D                     	;# 
  3624  0F2E                     	;# 
  3625  0F2F                     	;# 
  3626  0F30                     	;# 
  3627  0F31                     	;# 
  3628  0F32                     	;# 
  3629  0F33                     	;# 
  3630  0F34                     	;# 
  3631  0F35                     	;# 
  3632  0F36                     	;# 
  3633  0F37                     	;# 
  3634  0FE4                     	;# 
  3635  0FE5                     	;# 
  3636  0FE6                     	;# 
  3637  0FE7                     	;# 
  3638  0FE8                     	;# 
  3639  0FE9                     	;# 
  3640  0FEA                     	;# 
  3641  0FEB                     	;# 
  3642  0FED                     	;# 
  3643  0FEE                     	;# 
  3644  0FEF                     	;# 
  3645                           
  3646 ;; Function _MASTER0_open is unused but had its address taken
  3647  0000                     
  3648 ;; Function _EUSART_is_tx_ready is unused but had its address taken
  3649  0000                     
  3650 ;; Function _EUSART_is_rx_ready is unused but had its address taken
  3651  0000                     
  3652 ;; Function _EUSART_is_tx_done is unused but had its address taken
  3653  0000                     
  3654 ;; Function _EUSART_Read is unused but had its address taken
  3655  0000                     
  3656 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3657  0000                     
  3658 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3659  0000                     
  3660 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3661  0000                     
  3662 ;; Function _spi_close is unused but had its address taken
  3663  0000                     
  3664 ;; Function _spi_exchangeBlock is unused but had its address taken
  3665  0000                     
  3666 ;; Function _spi_writeBlock is unused but had its address taken
  3667  0000                     
  3668 ;; Function _spi_readBlock is unused but had its address taken
  3669  0000                     
  3670 ;; Function _spi_writeByte is unused but had its address taken
  3671  0000                     
  3672 ;; Function _spi_readByte is unused but had its address taken
  3673  0000                     
  3674 ;; Function _spi_isr is unused but had its address taken
  3675  0000                     
  3676 ;; Function _spi_setSpiISR is unused but had its address taken
  3677  0000                     
  3678                           	psect	idataBANK1
  3679  1D6F                     __pidataBANK1:	
  3680                           
  3681                           ;initializer for _SCALE
  3682  1D6F  3400               	retlw	0
  3683  1D70  3400               	retlw	0
  3684  1D71  3480               	retlw	128
  3685  1D72  343F               	retlw	63
  3686                           
  3687                           ;initializer for _GAIN
  3688  1D73  3403               	retlw	3
  3689                           
  3690                           	psect	stringtext1
  3691  1800                     __pstringtext1:	
  3692  1800                     __powers_:	
  3693  1800  3400               	retlw	0
  3694  1801  3400               	retlw	0
  3695  1802  3480               	retlw	128
  3696  1803  343F               	retlw	63
  3697  1804  3400               	retlw	0
  3698  1805  3400               	retlw	0
  3699  1806  3420               	retlw	32
  3700  1807  3441               	retlw	65
  3701  1808  3400               	retlw	0
  3702  1809  3400               	retlw	0
  3703  180A  34C8               	retlw	200
  3704  180B  3442               	retlw	66
  3705  180C  3400               	retlw	0
  3706  180D  3400               	retlw	0
  3707  180E  347A               	retlw	122
  3708  180F  3444               	retlw	68
  3709  1810  3400               	retlw	0
  3710  1811  3440               	retlw	64
  3711  1812  341C               	retlw	28
  3712  1813  3446               	retlw	70
  3713  1814  3400               	retlw	0
  3714  1815  3450               	retlw	80
  3715  1816  34C3               	retlw	195
  3716  1817  3447               	retlw	71
  3717  1818  3400               	retlw	0
  3718  1819  3424               	retlw	36
  3719  181A  3474               	retlw	116
  3720  181B  3449               	retlw	73
  3721  181C  3480               	retlw	128
  3722  181D  3496               	retlw	150
  3723  181E  3418               	retlw	24
  3724  181F  344B               	retlw	75
  3725  1820  3420               	retlw	32
  3726  1821  34BC               	retlw	188
  3727  1822  34BE               	retlw	190
  3728  1823  344C               	retlw	76
  3729  1824  3428               	retlw	40
  3730  1825  346B               	retlw	107
  3731  1826  346E               	retlw	110
  3732  1827  344E               	retlw	78
  3733  1828  34F9               	retlw	249
  3734  1829  3402               	retlw	2
  3735  182A  3415               	retlw	21
  3736  182B  3450               	retlw	80
  3737  182C  34EC               	retlw	236
  3738  182D  3478               	retlw	120
  3739  182E  34AD               	retlw	173
  3740  182F  3460               	retlw	96
  3741  1830  34CA               	retlw	202
  3742  1831  34F2               	retlw	242
  3743  1832  3449               	retlw	73
  3744  1833  3471               	retlw	113
  3745  1834                     __end_of__powers_:	
  3746                           
  3747                           	psect	stringtext2
  3748  1834                     __pstringtext2:	
  3749  1834                     __npowers_:	
  3750  1834  3400               	retlw	0
  3751  1835  3400               	retlw	0
  3752  1836  3480               	retlw	128
  3753  1837  343F               	retlw	63
  3754  1838  34CD               	retlw	205
  3755  1839  34CC               	retlw	204
  3756  183A  34CC               	retlw	204
  3757  183B  343D               	retlw	61
  3758  183C  340A               	retlw	10
  3759  183D  34D7               	retlw	215
  3760  183E  3423               	retlw	35
  3761  183F  343C               	retlw	60
  3762  1840  346F               	retlw	111
  3763  1841  3412               	retlw	18
  3764  1842  3483               	retlw	131
  3765  1843  343A               	retlw	58
  3766  1844  3417               	retlw	23
  3767  1845  34B7               	retlw	183
  3768  1846  34D1               	retlw	209
  3769  1847  3438               	retlw	56
  3770  1848  34AC               	retlw	172
  3771  1849  34C5               	retlw	197
  3772  184A  3427               	retlw	39
  3773  184B  3437               	retlw	55
  3774  184C  34BD               	retlw	189
  3775  184D  3437               	retlw	55
  3776  184E  3486               	retlw	134
  3777  184F  3435               	retlw	53
  3778  1850  3495               	retlw	149
  3779  1851  34BF               	retlw	191
  3780  1852  34D6               	retlw	214
  3781  1853  3433               	retlw	51
  3782  1854  3477               	retlw	119
  3783  1855  34CC               	retlw	204
  3784  1856  342B               	retlw	43
  3785  1857  3432               	retlw	50
  3786  1858  345F               	retlw	95
  3787  1859  3470               	retlw	112
  3788  185A  3489               	retlw	137
  3789  185B  3430               	retlw	48
  3790  185C  34FF               	retlw	255
  3791  185D  34E6               	retlw	230
  3792  185E  34DB               	retlw	219
  3793  185F  342E               	retlw	46
  3794  1860  3408               	retlw	8
  3795  1861  34E5               	retlw	229
  3796  1862  343C               	retlw	60
  3797  1863  341E               	retlw	30
  3798  1864  3460               	retlw	96
  3799  1865  3442               	retlw	66
  3800  1866  34A2               	retlw	162
  3801  1867  340D               	retlw	13
  3802  1868                     __end_of__npowers_:	
  3803                           
  3804                           	psect	stringtext3
  3805  1890                     __pstringtext3:	
  3806  1890                     _spiMaster:	
  3807  1890  3400               	retlw	0
  3808  1891  3400               	retlw	0
  3809  1892  3400               	retlw	0
  3810  1893  3400               	retlw	0
  3811  1894  34AE               	retlw	low _spi_exchangeByte
  3812  1895  341D               	retlw	high _spi_exchangeByte
  3813  1896  3400               	retlw	0
  3814  1897  3400               	retlw	0
  3815  1898  3400               	retlw	0
  3816  1899  3400               	retlw	0
  3817  189A  3400               	retlw	0
  3818  189B  3400               	retlw	0
  3819  189C  3400               	retlw	0
  3820  189D  3400               	retlw	0
  3821  189E  3400               	retlw	0
  3822  189F  3400               	retlw	0
  3823  18A0  3400               	retlw	0
  3824  18A1  3400               	retlw	0
  3825  18A2  3400               	retlw	0
  3826  18A3  3400               	retlw	0
  3827  18A4                     __end_of_spiMaster:	
  3828                           
  3829                           	psect	stringtext4
  3830  18D8                     __pstringtext4:	
  3831  18D8                     _uart:	
  3832  18D8  3400               	retlw	0
  3833  18D9  3400               	retlw	0
  3834  18DA  3428               	retlw	low _EUSART_Initialize
  3835  18DB  341E               	retlw	high _EUSART_Initialize
  3836  18DC  3400               	retlw	0
  3837  18DD  3400               	retlw	0
  3838  18DE  3400               	retlw	0
  3839  18DF  3400               	retlw	0
  3840  18E0  3400               	retlw	0
  3841  18E1  3400               	retlw	0
  3842  18E2  348E               	retlw	low _EUSART_Write
  3843  18E3  341D               	retlw	high _EUSART_Write
  3844  18E4                     __end_of_uart:	
  3845                           
  3846                           	psect	stringtext5
  3847  18E4                     __pstringtext5:	
  3848  18E4                     _spi_configuration:	
  3849  18E4  340A               	retlw	10
  3850  18E5  3440               	retlw	64
  3851  18E6  3401               	retlw	1
  3852  18E7  3400               	retlw	0
  3853  18E8  340A               	retlw	10
  3854  18E9  3400               	retlw	0
  3855  18EA  3401               	retlw	1
  3856  18EB  3400               	retlw	0
  3857  18EC                     __end_of_spi_configuration:	
  3858                           
  3859                           	psect	stringtext6
  3860  1868                     __pstringtext6:	
  3861  1868                     _dpowers:	
  3862  1868  3401               	retlw	1
  3863  1869  3400               	retlw	0
  3864  186A  3400               	retlw	0
  3865  186B  3400               	retlw	0
  3866  186C  340A               	retlw	10
  3867  186D  3400               	retlw	0
  3868  186E  3400               	retlw	0
  3869  186F  3400               	retlw	0
  3870  1870  3464               	retlw	100
  3871  1871  3400               	retlw	0
  3872  1872  3400               	retlw	0
  3873  1873  3400               	retlw	0
  3874  1874  34E8               	retlw	232
  3875  1875  3403               	retlw	3
  3876  1876  3400               	retlw	0
  3877  1877  3400               	retlw	0
  3878  1878  3410               	retlw	16
  3879  1879  3427               	retlw	39
  3880  187A  3400               	retlw	0
  3881  187B  3400               	retlw	0
  3882  187C  34A0               	retlw	160
  3883  187D  3486               	retlw	134
  3884  187E  3401               	retlw	1
  3885  187F  3400               	retlw	0
  3886  1880  3440               	retlw	64
  3887  1881  3442               	retlw	66
  3888  1882  340F               	retlw	15
  3889  1883  3400               	retlw	0
  3890  1884  3480               	retlw	128
  3891  1885  3496               	retlw	150
  3892  1886  3498               	retlw	152
  3893  1887  3400               	retlw	0
  3894  1888  3400               	retlw	0
  3895  1889  34E1               	retlw	225
  3896  188A  34F5               	retlw	245
  3897  188B  3405               	retlw	5
  3898  188C  3400               	retlw	0
  3899  188D  34CA               	retlw	202
  3900  188E  349A               	retlw	154
  3901  188F  343B               	retlw	59
  3902  1890                     __end_of_dpowers:	
  3903                           
  3904                           	psect	nvBANK1
  3905  00EC                     __pnvBANK1:	
  3906  00EC                     _EUSART_OverrunErrorHandler:	
  3907  00EC                     	ds	2
  3908  00EE                     _EUSART_FramingErrorHandler:	
  3909  00EE                     	ds	2
  3910                           
  3911                           	psect	nvBANK2
  3912  015A                     __pnvBANK2:	
  3913  015A                     _EUSART_ErrorHandler:	
  3914  015A                     	ds	2
  3915  000D                     _PORTBbits	set	13
  3916  0010                     _PIR1bits	set	16
  3917  0095                     _OPTION_REGbits	set	149
  3918  008E                     _TRISC	set	142
  3919  008D                     _TRISB	set	141
  3920  008C                     _TRISA	set	140
  3921  0098                     _OSCTUNE	set	152
  3922  0099                     _OSCCON	set	153
  3923  008D                     _TRISBbits	set	141
  3924  010D                     _LATBbits	set	269
  3925  010E                     _LATC	set	270
  3926  010D                     _LATB	set	269
  3927  010C                     _LATA	set	268
  3928  0116                     _BORCON	set	278
  3929  018C                     _ANSELA	set	396
  3930  018D                     _ANSELB	set	397
  3931  018E                     _ANSELC	set	398
  3932  019A                     _TX1REG	set	410
  3933  0199                     _RC1REG	set	409
  3934  019D                     _RC1STAbits	set	413
  3935  019E                     _TX1STAbits	set	414
  3936  019C                     _SPBRGH	set	412
  3937  019B                     _SPBRGL	set	411
  3938  019E                     _TX1STA	set	414
  3939  019D                     _RC1STA	set	413
  3940  019F                     _BAUD1CON	set	415
  3941  0214                     _SSP1STATbits	set	532
  3942  020E                     _WPUC	set	526
  3943  020C                     _WPUA	set	524
  3944  020D                     _WPUB	set	525
  3945  0211                     _SSP1BUF	set	529
  3946  0212                     _SSP1ADD	set	530
  3947  0216                     _SSP1CON2	set	534
  3948  0215                     _SSP1CON1	set	533
  3949  0214                     _SSP1STAT	set	532
  3950  0215                     _SSP1CON1bits	set	533
  3951  028E                     _ODCONC	set	654
  3952  028D                     _ODCONB	set	653
  3953  028C                     _ODCONA	set	652
  3954  030E                     _SLRCONC	set	782
  3955  030D                     _SLRCONB	set	781
  3956  030C                     _SLRCONA	set	780
  3957  0E24                     _RXPPS	set	3620
  3958  0E21                     _SSPDATPPS	set	3617
  3959  0E20                     _SSPCLKPPS	set	3616
  3960  0E92                     _RA2PPS	set	3730
  3961  0E9E                     _RB6PPS	set	3742
  3962                           
  3963                           	psect	stringtext7
  3964  18A4                     __pstringtext7:	
  3965  18A4                     STR_4:	
  3966  18A4  3448               	retlw	72	;'H'
  3967  18A5  3458               	retlw	88	;'X'
  3968  18A6  3437               	retlw	55	;'7'
  3969  18A7  3431               	retlw	49	;'1'
  3970  18A8  3431               	retlw	49	;'1'
  3971  18A9  3420               	retlw	32	;' '
  3972  18AA  346E               	retlw	110	;'n'
  3973  18AB  346F               	retlw	111	;'o'
  3974  18AC  3474               	retlw	116	;'t'
  3975  18AD  3420               	retlw	32	;' '
  3976  18AE  3466               	retlw	102	;'f'
  3977  18AF  346F               	retlw	111	;'o'
  3978  18B0  3475               	retlw	117	;'u'
  3979  18B1  346E               	retlw	110	;'n'
  3980  18B2  3464               	retlw	100	;'d'
  3981  18B3  342E               	retlw	46	;'.'
  3982  18B4  340A               	retlw	10
  3983  18B5  3400               	retlw	0
  3984                           
  3985                           	psect	stringtext8
  3986  18B6                     __pstringtext8:	
  3987  18B6                     STR_1:	
  3988  18B6  3450               	retlw	80	;'P'
  3989  18B7  3472               	retlw	114	;'r'
  3990  18B8  3465               	retlw	101	;'e'
  3991  18B9  3470               	retlw	112	;'p'
  3992  18BA  3461               	retlw	97	;'a'
  3993  18BB  3472               	retlw	114	;'r'
  3994  18BC  3469               	retlw	105	;'i'
  3995  18BD  346E               	retlw	110	;'n'
  3996  18BE  3467               	retlw	103	;'g'
  3997  18BF  3420               	retlw	32	;' '
  3998  18C0  3448               	retlw	72	;'H'
  3999  18C1  3458               	retlw	88	;'X'
  4000  18C2  3437               	retlw	55	;'7'
  4001  18C3  3431               	retlw	49	;'1'
  4002  18C4  3431               	retlw	49	;'1'
  4003  18C5  343A               	retlw	58	;':'
  4004  18C6  3420               	retlw	32	;' '
  4005  18C7  3400               	retlw	0
  4006                           
  4007                           	psect	stringtext9
  4008  18C8                     __pstringtext9:	
  4009  18C8                     STR_2:	
  4010  18C8  3448               	retlw	72	;'H'
  4011  18C9  3458               	retlw	88	;'X'
  4012  18CA  3437               	retlw	55	;'7'
  4013  18CB  3431               	retlw	49	;'1'
  4014  18CC  3431               	retlw	49	;'1'
  4015  18CD  3420               	retlw	32	;' '
  4016  18CE  3472               	retlw	114	;'r'
  4017  18CF  3465               	retlw	101	;'e'
  4018  18D0  3461               	retlw	97	;'a'
  4019  18D1  3464               	retlw	100	;'d'
  4020  18D2  3469               	retlw	105	;'i'
  4021  18D3  346E               	retlw	110	;'n'
  4022  18D4  3467               	retlw	103	;'g'
  4023  18D5  343A               	retlw	58	;':'
  4024  18D6  3420               	retlw	32	;' '
  4025  18D7  3400               	retlw	0
  4026                           
  4027                           	psect	stringtext10
  4028  18EC                     __pstringtext10:	
  4029  18EC                     STR_7:	
  4030  18EC  3425               	retlw	37	;'%'
  4031  18ED  3430               	retlw	48	;'0'
  4032  18EE  3433               	retlw	51	;'3'
  4033  18EF  3469               	retlw	105	;'i'
  4034  18F0  3420               	retlw	32	;' '
  4035  18F1  3420               	retlw	32	;' '
  4036  18F2  340A               	retlw	10
  4037  18F3  3400               	retlw	0
  4038                           
  4039                           	psect	stringtext11
  4040  18F4                     __pstringtext11:	
  4041  18F4                     STR_5:	
  4042  18F4  3425               	retlw	37	;'%'
  4043  18F5  3430               	retlw	48	;'0'
  4044  18F6  3433               	retlw	51	;'3'
  4045  18F7  3469               	retlw	105	;'i'
  4046  18F8  3420               	retlw	32	;' '
  4047  18F9  3420               	retlw	32	;' '
  4048  18FA  3400               	retlw	0
  4049                           
  4050                           	psect	stringtext12
  4051  18FB                     __pstringtext12:	
  4052  18FB                     STR_3:	
  4053  18FB  3425               	retlw	37	;'%'
  4054  18FC  3466               	retlw	102	;'f'
  4055  18FD  3420               	retlw	32	;' '
  4056  18FE  340A               	retlw	10
  4057  18FF  3400               	retlw	0
  4058                           
  4059                           	psect	stringtext13
  4060  0000                     __pstringtext13:	
  4061  18F4                     
  4062                           ; #config settings
  4063  0000                     
  4064                           	psect	cinit
  4065  07E4                     start_initialization:	
  4066  07E4                     __initialization:	
  4067                           
  4068                           ; Initialize objects allocated to BANK1
  4069  07E4  306F               	movlw	low __pidataBANK1
  4070  07E5  0084               	movwf	4
  4071  07E6  309D               	movlw	(high __pidataBANK1)| (0+128)
  4072  07E7  0085               	movwf	5
  4073  07E8  0021               	movlb	1	; select bank1
  4074  07E9  0012               	moviw fsr0++
  4075  07EA  00E7               	movwf	__pdataBANK1& (0+127)
  4076  07EB  0012               	moviw fsr0++
  4077  07EC  00E8               	movwf	(__pdataBANK1+1)& (0+127)
  4078  07ED  0012               	moviw fsr0++
  4079  07EE  00E9               	movwf	(__pdataBANK1+2)& (0+127)
  4080  07EF  0012               	moviw fsr0++
  4081  07F0  00EA               	movwf	(__pdataBANK1+3)& (0+127)
  4082  07F1  0012               	moviw fsr0++
  4083  07F2  00EB               	movwf	(__pdataBANK1+4)& (0+127)
  4084                           
  4085                           ; Clear objects allocated to BANK1
  4086  07F3  01DD               	clrf	__pbssBANK1& (0+127)
  4087  07F4  01DE               	clrf	(__pbssBANK1+1)& (0+127)
  4088  07F5  01DF               	clrf	(__pbssBANK1+2)& (0+127)
  4089  07F6  01E0               	clrf	(__pbssBANK1+3)& (0+127)
  4090  07F7  01E1               	clrf	(__pbssBANK1+4)& (0+127)
  4091  07F8  01E2               	clrf	(__pbssBANK1+5)& (0+127)
  4092  07F9  01E3               	clrf	(__pbssBANK1+6)& (0+127)
  4093  07FA  01E4               	clrf	(__pbssBANK1+7)& (0+127)
  4094  07FB  01E5               	clrf	(__pbssBANK1+8)& (0+127)
  4095  07FC  01E6               	clrf	(__pbssBANK1+9)& (0+127)
  4096  07FD                     end_of_initialization:	
  4097                           ;End of C runtime variable initialization code
  4098                           
  4099  07FD                     __end_of__initialization:	
  4100  07FD  0020               	movlb	0
  4101  07FE  3188  280E         	ljmp	_main	;jump to C main() function
  4102                           
  4103                           	psect	bssBANK1
  4104  00DD                     __pbssBANK1:	
  4105  00DD                     _OFFSET:	
  4106  00DD                     	ds	4
  4107  00E1                     HX711_read_new@F9624:	
  4108  00E1                     	ds	3
  4109  00E4                     _spi_interruptHandler:	
  4110  00E4                     	ds	2
  4111  00E6                     _eusartRxLastError:	
  4112  00E6                     	ds	1
  4113                           
  4114                           	psect	dataBANK1
  4115  00E7                     __pdataBANK1:	
  4116  00E7                     _SCALE:	
  4117  00E7                     	ds	4
  4118  00EB                     _GAIN:	
  4119  00EB                     	ds	1
  4120                           
  4121                           	psect	cstackBANK2
  4122  0120                     __pcstackBANK2:	
  4123  0120                     main@aux:	
  4124                           
  4125                           ; 50 bytes @ 0x0
  4126  0120                     	ds	54
  4127  0156                     main@reading:	
  4128                           
  4129                           ; 4 bytes @ 0x36
  4130  0156                     	ds	4
  4131                           
  4132                           	psect	cstackBANK1
  4133  00A0                     __pcstackBANK1:	
  4134  00A0                     HX711_read_average@i:	
  4135                           
  4136                           ; 1 bytes @ 0x0
  4137  00A0                     	ds	1
  4138  00A1                     HX711_read_average@times:	
  4139                           
  4140                           ; 1 bytes @ 0x1
  4141  00A1                     	ds	1
  4142  00A2                     HX711_read_average@sum:	
  4143                           
  4144                           ; 4 bytes @ 0x2
  4145  00A2                     	ds	4
  4146  00A6                     ?___flsub:	
  4147  00A6                     HX711_tare@sum:	
  4148                           ; 4 bytes @ 0x6
  4149                           
  4150  00A6                     ___flsub@a:	
  4151                           ; 4 bytes @ 0x6
  4152                           
  4153                           
  4154                           ; 4 bytes @ 0x6
  4155  00A6                     	ds	4
  4156  00AA                     HX711_tare@times:	
  4157  00AA                     ___flsub@b:	
  4158                           ; 1 bytes @ 0xA
  4159                           
  4160                           
  4161                           ; 4 bytes @ 0xA
  4162  00AA                     	ds	4
  4163  00AE                     ??__doprnt:	
  4164  00AE                     ?_HX711_get_value:	
  4165                           ; 1 bytes @ 0xE
  4166                           
  4167                           
  4168                           ; 4 bytes @ 0xE
  4169  00AE                     	ds	5
  4170  00B3                     ?_HX711_get_units:	
  4171                           
  4172                           ; 4 bytes @ 0x13
  4173  00B3                     	ds	1
  4174  00B4                     __doprnt$1425:	
  4175                           
  4176                           ; 4 bytes @ 0x14
  4177  00B4                     	ds	4
  4178  00B8                     __doprnt@cp:	
  4179  00B8                     _HX711_get_units$1421:	
  4180                           ; 1 bytes @ 0x18
  4181                           
  4182                           
  4183                           ; 4 bytes @ 0x18
  4184  00B8                     	ds	1
  4185  00B9                     __doprnt@len:	
  4186                           
  4187                           ; 2 bytes @ 0x19
  4188  00B9                     	ds	2
  4189  00BB                     __doprnt@prec:	
  4190                           
  4191                           ; 2 bytes @ 0x1B
  4192  00BB                     	ds	1
  4193  00BC                     HX711_get_units@times:	
  4194                           
  4195                           ; 1 bytes @ 0x1C
  4196  00BC                     	ds	1
  4197  00BD                     __doprnt@flag:	
  4198                           
  4199                           ; 2 bytes @ 0x1D
  4200  00BD                     	ds	2
  4201  00BF                     __doprnt@val:	
  4202                           
  4203                           ; 4 bytes @ 0x1F
  4204  00BF                     	ds	4
  4205  00C3                     __doprnt@eexp:	
  4206                           
  4207                           ; 2 bytes @ 0x23
  4208  00C3                     	ds	2
  4209  00C5                     __doprnt@tmpval:	
  4210                           
  4211                           ; 4 bytes @ 0x25
  4212  00C5                     	ds	4
  4213  00C9                     __doprnt@fval:	
  4214                           
  4215                           ; 4 bytes @ 0x29
  4216  00C9                     	ds	4
  4217  00CD                     __doprnt@width:	
  4218                           
  4219                           ; 2 bytes @ 0x2D
  4220  00CD                     	ds	2
  4221  00CF                     __doprnt@c:	
  4222                           
  4223                           ; 1 bytes @ 0x2F
  4224  00CF                     	ds	1
  4225  00D0                     __doprnt@pb:	
  4226                           
  4227                           ; 1 bytes @ 0x30
  4228  00D0                     	ds	1
  4229  00D1                     ?_printf:	
  4230  00D1                     ?_sprintf:	
  4231                           ; 2 bytes @ 0x31
  4232                           
  4233  00D1                     printf@f:	
  4234                           ; 2 bytes @ 0x31
  4235                           
  4236  00D1                     sprintf@f:	
  4237                           ; 2 bytes @ 0x31
  4238                           
  4239                           
  4240                           ; 2 bytes @ 0x31
  4241  00D1                     	ds	4
  4242  00D5                     ??_printf:	
  4243                           
  4244                           ; 1 bytes @ 0x35
  4245  00D5                     	ds	1
  4246  00D6                     printf@ap:	
  4247                           
  4248                           ; 1 bytes @ 0x36
  4249  00D6                     	ds	1
  4250  00D7                     ??_sprintf:	
  4251  00D7                     printf@pb:	
  4252                           ; 1 bytes @ 0x37
  4253                           
  4254                           
  4255                           ; 3 bytes @ 0x37
  4256  00D7                     	ds	1
  4257  00D8                     sprintf@wh:	
  4258                           
  4259                           ; 1 bytes @ 0x38
  4260  00D8                     	ds	1
  4261  00D9                     sprintf@ap:	
  4262                           
  4263                           ; 1 bytes @ 0x39
  4264  00D9                     	ds	1
  4265  00DA                     sprintf@pb:	
  4266                           
  4267                           ; 3 bytes @ 0x3A
  4268  00DA                     	ds	3
  4269                           
  4270                           	psect	cstackCOMMON
  4271  0070                     __pcstackCOMMON:	
  4272  0070                     ?_isdigit:	
  4273  0070                     ?___fleq:	
  4274                           ; 1 bit 
  4275                           
  4276  0070                     ?___flge:	
  4277                           ; 1 bit 
  4278                           
  4279  0070                     ?_spi_exchangeByte:	
  4280                           ; 1 bit 
  4281                           
  4282  0070                     ?_spi_open:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ??_spi_open:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_EUSART_Initialize:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_EUSART_Write:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_EUSART_SetFramingErrorHandler:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ?_EUSART_SetOverrunErrorHandler:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_EUSART_SetErrorHandler:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_PIN_MANAGER_Initialize:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ??_PIN_MANAGER_Initialize:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_OSCILLATOR_Initialize:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ??_OSCILLATOR_Initialize:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_HX711_set_scale:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_HX711_tare:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_HX711_is_ready:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ??_HX711_is_ready:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ??_isdigit:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_SYSTEM_Initialize:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_main:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?__Umul8_16:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?___wmul:	
  4340                           ; 2 bytes @ 0x0
  4341                           
  4342  0070                     ?___awmod:	
  4343                           ; 2 bytes @ 0x0
  4344                           
  4345  0070                     ?___lwmod:	
  4346                           ; 2 bytes @ 0x0
  4347                           
  4348  0070                     ?__tdiv_to_l_:	
  4349                           ; 2 bytes @ 0x0
  4350                           
  4351  0070                     ?__div_to_l_:	
  4352                           ; 4 bytes @ 0x0
  4353                           
  4354  0070                     ?___lldiv:	
  4355                           ; 4 bytes @ 0x0
  4356                           
  4357  0070                     ?___flneg:	
  4358                           ; 4 bytes @ 0x0
  4359                           
  4360  0070                     EUSART_Write@txData:	
  4361                           ; 4 bytes @ 0x0
  4362                           
  4363  0070                     spi_exchangeByte@b:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     _isdigit$1187:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     __Umul8_16@multiplicand:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4376                           ; 2 bytes @ 0x0
  4377                           
  4378  0070                     EUSART_SetErrorHandler@interruptHandler:	
  4379                           ; 2 bytes @ 0x0
  4380                           
  4381  0070                     ___wmul@multiplier:	
  4382                           ; 2 bytes @ 0x0
  4383                           
  4384  0070                     ___awmod@divisor:	
  4385                           ; 2 bytes @ 0x0
  4386                           
  4387  0070                     ___lwmod@divisor:	
  4388                           ; 2 bytes @ 0x0
  4389                           
  4390  0070                     HX711_set_scale@scale:	
  4391                           ; 2 bytes @ 0x0
  4392                           
  4393  0070                     ___lldiv@divisor:	
  4394                           ; 4 bytes @ 0x0
  4395                           
  4396  0070                     __div_to_l_@f1:	
  4397                           ; 4 bytes @ 0x0
  4398                           
  4399  0070                     ___fleq@ff1:	
  4400                           ; 4 bytes @ 0x0
  4401                           
  4402  0070                     ___flge@ff1:	
  4403                           ; 4 bytes @ 0x0
  4404                           
  4405  0070                     ___flneg@f1:	
  4406                           ; 4 bytes @ 0x0
  4407                           
  4408  0070                     __tdiv_to_l_@f1:	
  4409                           ; 4 bytes @ 0x0
  4410                           
  4411                           
  4412                           ; 4 bytes @ 0x0
  4413  0070                     	ds	1
  4414  0071                     ??_spi_exchangeByte:	
  4415  0071                     ??_EUSART_Write:	
  4416                           ; 1 bytes @ 0x1
  4417                           
  4418  0071                     ?_putch:	
  4419                           ; 1 bytes @ 0x1
  4420                           
  4421  0071                     ?_HX711_read:	
  4422                           ; 1 bytes @ 0x1
  4423                           
  4424  0071                     putch@txData:	
  4425                           ; 4 bytes @ 0x1
  4426                           
  4427  0071                     isdigit@c:	
  4428                           ; 1 bytes @ 0x1
  4429                           
  4430                           
  4431                           ; 1 bytes @ 0x1
  4432  0071                     	ds	1
  4433  0072                     ??_EUSART_Initialize:	
  4434  0072                     ??_EUSART_SetFramingErrorHandler:	
  4435                           ; 1 bytes @ 0x2
  4436                           
  4437  0072                     ??_EUSART_SetOverrunErrorHandler:	
  4438                           ; 1 bytes @ 0x2
  4439                           
  4440  0072                     ??_EUSART_SetErrorHandler:	
  4441                           ; 1 bytes @ 0x2
  4442                           
  4443  0072                     ??__Umul8_16:	
  4444                           ; 1 bytes @ 0x2
  4445                           
  4446  0072                     ??_putch:	
  4447                           ; 1 bytes @ 0x2
  4448                           
  4449  0072                     ??_SYSTEM_Initialize:	
  4450                           ; 1 bytes @ 0x2
  4451                           
  4452  0072                     ___wmul@multiplicand:	
  4453                           ; 1 bytes @ 0x2
  4454                           
  4455  0072                     ___awmod@dividend:	
  4456                           ; 2 bytes @ 0x2
  4457                           
  4458  0072                     ___lwmod@dividend:	
  4459                           ; 2 bytes @ 0x2
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x2
  4463  0072                     	ds	1
  4464  0073                     spi_open@spiUniqueConfiguration:	
  4465                           
  4466                           ; 1 bytes @ 0x3
  4467  0073                     	ds	1
  4468  0074                     ??_HX711_set_scale:	
  4469  0074                     ??___wmul:	
  4470                           ; 1 bytes @ 0x4
  4471                           
  4472  0074                     ??___awmod:	
  4473                           ; 1 bytes @ 0x4
  4474                           
  4475  0074                     ??___flneg:	
  4476                           ; 1 bytes @ 0x4
  4477                           
  4478  0074                     ??___lwmod:	
  4479                           ; 1 bytes @ 0x4
  4480                           
  4481  0074                     ___wmul@product:	
  4482                           ; 1 bytes @ 0x4
  4483                           
  4484  0074                     __Umul8_16@product:	
  4485                           ; 2 bytes @ 0x4
  4486                           
  4487  0074                     ___lldiv@dividend:	
  4488                           ; 2 bytes @ 0x4
  4489                           
  4490  0074                     __div_to_l_@f2:	
  4491                           ; 4 bytes @ 0x4
  4492                           
  4493  0074                     ___fleq@ff2:	
  4494                           ; 4 bytes @ 0x4
  4495                           
  4496  0074                     ___flge@ff2:	
  4497                           ; 4 bytes @ 0x4
  4498                           
  4499  0074                     __tdiv_to_l_@f2:	
  4500                           ; 4 bytes @ 0x4
  4501                           
  4502                           
  4503                           ; 4 bytes @ 0x4
  4504  0074                     	ds	1
  4505  0075                     ??_HX711_read:	
  4506  0075                     ___awmod@counter:	
  4507                           ; 1 bytes @ 0x5
  4508                           
  4509  0075                     ___lwmod@counter:	
  4510                           ; 1 bytes @ 0x5
  4511                           
  4512                           
  4513                           ; 1 bytes @ 0x5
  4514  0075                     	ds	1
  4515  0076                     ?___lwdiv:	
  4516  0076                     ___awmod@sign:	
  4517                           ; 2 bytes @ 0x6
  4518                           
  4519  0076                     ___lwdiv@divisor:	
  4520                           ; 1 bytes @ 0x6
  4521                           
  4522  0076                     __Umul8_16@word_mpld:	
  4523                           ; 2 bytes @ 0x6
  4524                           
  4525                           
  4526                           ; 2 bytes @ 0x6
  4527  0076                     	ds	1
  4528  0077                     ?___awdiv:	
  4529  0077                     ?___xxtofl:	
  4530                           ; 2 bytes @ 0x7
  4531                           
  4532  0077                     ___awdiv@divisor:	
  4533                           ; 4 bytes @ 0x7
  4534                           
  4535  0077                     ___xxtofl@val:	
  4536                           ; 2 bytes @ 0x7
  4537                           
  4538                           
  4539                           ; 4 bytes @ 0x7
  4540  0077                     	ds	1
  4541  0078                     ??__tdiv_to_l_:	
  4542  0078                     ??__div_to_l_:	
  4543                           ; 1 bytes @ 0x8
  4544                           
  4545  0078                     ??___lldiv:	
  4546                           ; 1 bytes @ 0x8
  4547                           
  4548  0078                     ??___fleq:	
  4549                           ; 1 bytes @ 0x8
  4550                           
  4551  0078                     ??___flge:	
  4552                           ; 1 bytes @ 0x8
  4553                           
  4554  0078                     __Umul8_16@multiplier:	
  4555                           ; 1 bytes @ 0x8
  4556                           
  4557  0078                     ___lwdiv@dividend:	
  4558                           ; 1 bytes @ 0x8
  4559                           
  4560                           
  4561                           ; 2 bytes @ 0x8
  4562  0078                     	ds	1
  4563  0079                     ___awdiv@dividend:	
  4564  0079                     ___lldiv@quotient:	
  4565                           ; 2 bytes @ 0x9
  4566                           
  4567                           
  4568                           ; 4 bytes @ 0x9
  4569  0079                     	ds	1
  4570  007A                     ??___lwdiv:	
  4571                           
  4572                           ; 1 bytes @ 0xA
  4573  007A                     	ds	1
  4574  007B                     ??___awdiv:	
  4575  007B                     ___lwdiv@quotient:	
  4576                           ; 1 bytes @ 0xB
  4577                           
  4578                           
  4579                           ; 2 bytes @ 0xB
  4580  007B                     	ds	2
  4581  007D                     ___lldiv@counter:	
  4582  007D                     ___lwdiv@counter:	
  4583                           ; 1 bytes @ 0xD
  4584                           
  4585                           
  4586                           ; 1 bytes @ 0xD
  4587  007D                     	ds	1
  4588  007E                     ??_HX711_tare:	
  4589  007E                     ??_HX711_get_units:	
  4590                           ; 1 bytes @ 0xE
  4591                           
  4592  007E                     ??_HX711_set_offset:	
  4593                           ; 1 bytes @ 0xE
  4594                           
  4595  007E                     ??_main:	
  4596                           ; 1 bytes @ 0xE
  4597                           
  4598  007E                     ??_HX711_get_value:	
  4599                           ; 1 bytes @ 0xE
  4600                           
  4601  007E                     ??___flsub:	
  4602                           ; 1 bytes @ 0xE
  4603                           
  4604                           
  4605                           	psect	cstackBANK0
  4606  0020                     __pcstackBANK0:	
  4607                           ; 1 bytes @ 0xE
  4608                           
  4609  0020                     ?___llmod:	
  4610  0020                     ___awdiv@counter:	
  4611                           ; 4 bytes @ 0x0
  4612                           
  4613  0020                     HX711_read@value_32aux:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0020                     __div_to_l_@quot:	
  4617                           ; 4 bytes @ 0x0
  4618                           
  4619  0020                     __tdiv_to_l_@quot:	
  4620                           ; 4 bytes @ 0x0
  4621                           
  4622  0020                     ___llmod@divisor:	
  4623                           ; 4 bytes @ 0x0
  4624                           
  4625                           
  4626                           ; 4 bytes @ 0x0
  4627  0020                     	ds	1
  4628  0021                     ___awdiv@sign:	
  4629                           
  4630                           ; 1 bytes @ 0x1
  4631  0021                     	ds	1
  4632  0022                     ___awdiv@quotient:	
  4633                           
  4634                           ; 2 bytes @ 0x2
  4635  0022                     	ds	2
  4636  0024                     ?___flmul:	
  4637  0024                     __div_to_l_@cntr:	
  4638                           ; 4 bytes @ 0x4
  4639                           
  4640  0024                     __tdiv_to_l_@cntr:	
  4641                           ; 1 bytes @ 0x4
  4642                           
  4643  0024                     HX711_read@i:	
  4644                           ; 1 bytes @ 0x4
  4645                           
  4646  0024                     ___llmod@dividend:	
  4647                           ; 2 bytes @ 0x4
  4648                           
  4649  0024                     ___flmul@b:	
  4650                           ; 4 bytes @ 0x4
  4651                           
  4652                           
  4653                           ; 4 bytes @ 0x4
  4654  0024                     	ds	1
  4655  0025                     __div_to_l_@exp1:	
  4656  0025                     __tdiv_to_l_@exp1:	
  4657                           ; 1 bytes @ 0x5
  4658                           
  4659                           
  4660                           ; 1 bytes @ 0x5
  4661  0025                     	ds	1
  4662  0026                     HX711_read@value:	
  4663                           
  4664                           ; 4 bytes @ 0x6
  4665  0026                     	ds	2
  4666  0028                     ??___llmod:	
  4667  0028                     ___flmul@a:	
  4668                           ; 1 bytes @ 0x8
  4669                           
  4670                           
  4671                           ; 4 bytes @ 0x8
  4672  0028                     	ds	1
  4673  0029                     ___llmod@counter:	
  4674                           
  4675                           ; 1 bytes @ 0x9
  4676  0029                     	ds	1
  4677  002A                     ??___xxtofl:	
  4678                           
  4679                           ; 1 bytes @ 0xA
  4680  002A                     	ds	2
  4681  002C                     ??___flmul:	
  4682                           
  4683                           ; 1 bytes @ 0xC
  4684  002C                     	ds	2
  4685  002E                     ___xxtofl@sign:	
  4686                           
  4687                           ; 1 bytes @ 0xE
  4688  002E                     	ds	1
  4689  002F                     ___xxtofl@exp:	
  4690                           
  4691                           ; 1 bytes @ 0xF
  4692  002F                     	ds	1
  4693  0030                     ___xxtofl@arg:	
  4694                           
  4695                           ; 4 bytes @ 0x10
  4696  0030                     	ds	1
  4697  0031                     ___flmul@sign:	
  4698                           
  4699                           ; 1 bytes @ 0x11
  4700  0031                     	ds	1
  4701  0032                     ___flmul@grs:	
  4702                           
  4703                           ; 4 bytes @ 0x12
  4704  0032                     	ds	2
  4705  0034                     ?___fldiv:	
  4706  0034                     ___fldiv@a:	
  4707                           ; 4 bytes @ 0x14
  4708                           
  4709                           
  4710                           ; 4 bytes @ 0x14
  4711  0034                     	ds	2
  4712  0036                     ___flmul@aexp:	
  4713                           
  4714                           ; 1 bytes @ 0x16
  4715  0036                     	ds	1
  4716  0037                     ___flmul@bexp:	
  4717                           
  4718                           ; 1 bytes @ 0x17
  4719  0037                     	ds	1
  4720  0038                     ___fldiv@b:	
  4721  0038                     ___flmul@prod:	
  4722                           ; 4 bytes @ 0x18
  4723                           
  4724                           
  4725                           ; 4 bytes @ 0x18
  4726  0038                     	ds	4
  4727  003C                     ??___fldiv:	
  4728  003C                     ___flmul@temp:	
  4729                           ; 1 bytes @ 0x1C
  4730                           
  4731                           
  4732                           ; 2 bytes @ 0x1C
  4733  003C                     	ds	2
  4734  003E                     ?_fround:	
  4735  003E                     ?_scale:	
  4736                           ; 4 bytes @ 0x1E
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0x1E
  4740  003E                     	ds	3
  4741  0041                     ___fldiv@rem:	
  4742                           
  4743                           ; 4 bytes @ 0x21
  4744  0041                     	ds	1
  4745  0042                     ??_fround:	
  4746  0042                     ??_scale:	
  4747                           ; 1 bytes @ 0x22
  4748                           
  4749                           
  4750                           ; 1 bytes @ 0x22
  4751  0042                     	ds	3
  4752  0045                     ___fldiv@sign:	
  4753                           
  4754                           ; 1 bytes @ 0x25
  4755  0045                     	ds	1
  4756  0046                     ___fldiv@new_exp:	
  4757                           
  4758                           ; 2 bytes @ 0x26
  4759  0046                     	ds	2
  4760  0048                     ___fldiv@grs:	
  4761  0048                     _fround$1423:	
  4762                           ; 4 bytes @ 0x28
  4763                           
  4764                           
  4765                           ; 4 bytes @ 0x28
  4766  0048                     	ds	4
  4767  004C                     ___fldiv@bexp:	
  4768  004C                     _fround$1422:	
  4769                           ; 1 bytes @ 0x2C
  4770                           
  4771                           
  4772                           ; 4 bytes @ 0x2C
  4773  004C                     	ds	1
  4774  004D                     ___fldiv@aexp:	
  4775                           
  4776                           ; 1 bytes @ 0x2D
  4777  004D                     	ds	1
  4778  004E                     _scale$1424:	
  4779                           
  4780                           ; 4 bytes @ 0x2E
  4781  004E                     	ds	2
  4782  0050                     fround@prec:	
  4783                           
  4784                           ; 1 bytes @ 0x30
  4785  0050                     	ds	1
  4786  0051                     ?___fladd:	
  4787  0051                     ___fladd@b:	
  4788                           ; 4 bytes @ 0x31
  4789                           
  4790                           
  4791                           ; 4 bytes @ 0x31
  4792  0051                     	ds	1
  4793  0052                     scale@scl:	
  4794                           
  4795                           ; 1 bytes @ 0x32
  4796  0052                     	ds	1
  4797  0053                     ?___fltol:	
  4798  0053                     ___fltol@f1:	
  4799                           ; 4 bytes @ 0x33
  4800                           
  4801                           
  4802                           ; 4 bytes @ 0x33
  4803  0053                     	ds	2
  4804  0055                     ___fladd@a:	
  4805                           
  4806                           ; 4 bytes @ 0x35
  4807  0055                     	ds	2
  4808  0057                     ??___fltol:	
  4809                           
  4810                           ; 1 bytes @ 0x37
  4811  0057                     	ds	2
  4812  0059                     ??___fladd:	
  4813                           
  4814                           ; 1 bytes @ 0x39
  4815  0059                     	ds	3
  4816  005C                     ___fltol@sign1:	
  4817                           
  4818                           ; 1 bytes @ 0x3C
  4819  005C                     	ds	1
  4820  005D                     ___fltol@exp1:	
  4821                           
  4822                           ; 1 bytes @ 0x3D
  4823  005D                     	ds	1
  4824  005E                     ?_HX711_set_offset:	
  4825  005E                     HX711_set_offset@offset:	
  4826                           ; 1 bytes @ 0x3E
  4827                           
  4828                           
  4829                           ; 4 bytes @ 0x3E
  4830  005E                     	ds	3
  4831  0061                     ___fladd@signs:	
  4832                           
  4833                           ; 1 bytes @ 0x41
  4834  0061                     	ds	1
  4835  0062                     ___fladd@aexp:	
  4836                           
  4837                           ; 1 bytes @ 0x42
  4838  0062                     	ds	1
  4839  0063                     ___fladd@bexp:	
  4840                           
  4841                           ; 1 bytes @ 0x43
  4842  0063                     	ds	1
  4843  0064                     ___fladd@grs:	
  4844                           
  4845                           ; 1 bytes @ 0x44
  4846  0064                     	ds	1
  4847  0065                     ?_HX711_read_average:	
  4848                           
  4849                           ; 4 bytes @ 0x45
  4850  0065                     	ds	4
  4851  0069                     ??_HX711_read_average:	
  4852                           
  4853                           ; 1 bytes @ 0x49
  4854  0069                     	ds	4
  4855  006D                     ?__doprnt:	
  4856  006D                     HX711_get_value@times:	
  4857                           ; 2 bytes @ 0x4D
  4858                           
  4859  006D                     __doprnt@f:	
  4860                           ; 1 bytes @ 0x4D
  4861                           
  4862                           
  4863                           ; 2 bytes @ 0x4D
  4864  006D                     	ds	2
  4865  006F                     __doprnt@ap:	
  4866                           
  4867                           ; 1 bytes @ 0x4F
  4868  006F                     	ds	1
  4869                           
  4870                           	psect	maintext
  4871  080E                     __pmaintext:	
  4872 ;;
  4873 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4874 ;;
  4875 ;; *************** function _main *****************
  4876 ;; Defined at:
  4877 ;;		line 56 in file "main.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  reading         4   54[BANK2 ] float 
  4882 ;;  aux            50    0[BANK2 ] unsigned char [50]
  4883 ;;  valor           4    0        float 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : B1F/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Locals:         0       0       0      58       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Totals:         0       0       0      58       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;Total ram usage:       58 bytes
  4898 ;; Hardware stack levels required when called:    5
  4899 ;; This function calls:
  4900 ;;		_HX711_get_units
  4901 ;;		_HX711_is_ready
  4902 ;;		_HX711_set_scale
  4903 ;;		_HX711_tare
  4904 ;;		_SYSTEM_Initialize
  4905 ;;		_printf
  4906 ;;		_spi_open
  4907 ;;		_sprintf
  4908 ;; This function is called by:
  4909 ;;		Startup code after reset
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _main
  4915  080E                     _main:	
  4916                           
  4917                           ;main.c: 63: SYSTEM_Initialize();
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4921  080E  319D  259C  3188   	fcall	_SYSTEM_Initialize
  4922                           
  4923                           ;main.c: 64: spi_open(SPI_DEFAULT);
  4924  0811  3001               	movlw	1
  4925  0812  3191  2112  3188   	fcall	_spi_open
  4926                           
  4927                           ;main.c: 82: printf("Preparing HX711: ");
  4928  0815  30B6               	movlw	low (STR_1| (0+32768))
  4929  0816  0021               	movlb	1	; select bank1
  4930  0817  00D1               	movwf	printf@f^(0+128)
  4931  0818  3098               	movlw	high (STR_1| (0+32768))
  4932  0819  00D2               	movwf	(printf@f^(0+128)+1)
  4933  081A  319D  25EE  3188   	fcall	_printf
  4934                           
  4935                           ;main.c: 83: HX711_set_scale(-7050.0);
  4936  081D  30C5               	movlw	197
  4937  081E  00F3               	movwf	HX711_set_scale@scale+3
  4938  081F  30DC               	movlw	220
  4939  0820  00F2               	movwf	HX711_set_scale@scale+2
  4940  0821  3050               	movlw	80
  4941  0822  00F1               	movwf	HX711_set_scale@scale+1
  4942  0823  3000               	movlw	0
  4943  0824  00F0               	movwf	HX711_set_scale@scale
  4944  0825  319D  25B8  3188   	fcall	_HX711_set_scale
  4945                           
  4946                           ;main.c: 84: HX711_tare(1000);
  4947  0828  30E8               	movlw	232
  4948  0829  319E  26A6  3188   	fcall	_HX711_tare
  4949  082C  286A               	goto	l4668
  4950  082D                     l4670:	
  4951                           
  4952                           ;main.c: 89: {;main.c: 90: float reading = HX711_get_units(10);
  4953  082D  300A               	movlw	10
  4954  082E  319F  277C  3188   	fcall	_HX711_get_units
  4955  0831  0021               	movlb	1	; select bank1
  4956  0832  0836               	movf	(?_HX711_get_units+3)^(0+128),w
  4957  0833  0022               	movlb	2	; select bank2
  4958  0834  00D9               	movwf	(main@reading+3)^(0+256)
  4959  0835  0021               	movlb	1	; select bank1
  4960  0836  0835               	movf	(?_HX711_get_units+2)^(0+128),w
  4961  0837  0022               	movlb	2	; select bank2
  4962  0838  00D8               	movwf	(main@reading+2)^(0+256)
  4963  0839  0021               	movlb	1	; select bank1
  4964  083A  0834               	movf	(?_HX711_get_units+1)^(0+128),w
  4965  083B  0022               	movlb	2	; select bank2
  4966  083C  00D7               	movwf	(main@reading+1)^(0+256)
  4967  083D  0021               	movlb	1	; select bank1
  4968  083E  0833               	movf	?_HX711_get_units^(0+128),w
  4969  083F  0022               	movlb	2	; select bank2
  4970  0840  00D6               	movwf	main@reading^(0+256)
  4971                           
  4972                           ;main.c: 91: printf("HX711 reading: ");
  4973  0841  30C8               	movlw	low (STR_2| (0+32768))
  4974  0842  0021               	movlb	1	; select bank1
  4975  0843  00D1               	movwf	printf@f^(0+128)
  4976  0844  3098               	movlw	high (STR_2| (0+32768))
  4977  0845  00D2               	movwf	(printf@f^(0+128)+1)
  4978  0846  319D  25EE  3188   	fcall	_printf
  4979                           
  4980                           ;main.c: 92: sprintf(aux, "%f \n", reading);
  4981  0849  30FB               	movlw	low (STR_3| (0+32768))
  4982  084A  0021               	movlb	1	; select bank1
  4983  084B  00D1               	movwf	sprintf@f^(0+128)
  4984  084C  3098               	movlw	high (STR_3| (0+32768))
  4985  084D  00D2               	movwf	(sprintf@f^(0+128)+1)
  4986  084E  0022               	movlb	2	; select bank2
  4987  084F  0859               	movf	(main@reading+3)^(0+256),w
  4988  0850  0021               	movlb	1	; select bank1
  4989  0851  00D6               	movwf	((?_sprintf+3)^(0+128)+2)
  4990  0852  0022               	movlb	2	; select bank2
  4991  0853  0858               	movf	(main@reading+2)^(0+256),w
  4992  0854  0021               	movlb	1	; select bank1
  4993  0855  00D5               	movwf	((?_sprintf+2)^(0+128)+2)
  4994  0856  0022               	movlb	2	; select bank2
  4995  0857  0857               	movf	(main@reading+1)^(0+256),w
  4996  0858  0021               	movlb	1	; select bank1
  4997  0859  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  4998  085A  0022               	movlb	2	; select bank2
  4999  085B  0856               	movf	main@reading^(0+256),w
  5000  085C  0021               	movlb	1	; select bank1
  5001  085D  00D3               	movwf	(?_sprintf^(0+128)+2)
  5002  085E  3020               	movlw	(low (main@aux| (0+256)))& (0+255)
  5003  085F  3190  2006  3188   	fcall	_sprintf
  5004                           
  5005                           ;main.c: 93: printf(aux);
  5006  0862  3020               	movlw	low main@aux
  5007  0863  0021               	movlb	1	; select bank1
  5008  0864  00D1               	movwf	printf@f^(0+128)
  5009  0865  3001               	movlw	high main@aux
  5010  0866  00D2               	movwf	(printf@f+1)^(0+128)
  5011  0867                     L1:	
  5012  0867  319D  25EE  3188   	fcall	_printf
  5013  086A                     l4668:	
  5014                           ;main.c: 94: }
  5015                           
  5016                           
  5017                           ;main.c: 87: {;main.c: 88: if(HX711_is_ready())
  5018  086A  319D  2580  3188   	fcall	_HX711_is_ready
  5019  086D  3A00               	xorlw	0
  5020  086E  1D03               	btfss	3,2
  5021  086F  282D               	goto	l4670
  5022                           
  5023                           ;main.c: 95: else;main.c: 96: {;main.c: 97: printf("HX711 not found.\n");
  5024  0870  30A4               	movlw	low (STR_4| (0+32768))
  5025  0871  0021               	movlb	1	; select bank1
  5026  0872  00D1               	movwf	printf@f^(0+128)
  5027  0873  3098               	movlw	high (STR_4| (0+32768))
  5028  0874  00D2               	movwf	(printf@f^(0+128)+1)
  5029  0875  2867               	goto	L1
  5030  0876                     __end_of_main:	
  5031                           
  5032                           	psect	text1
  5033  1006                     __ptext1:	
  5034 ;; *************** function _sprintf *****************
  5035 ;; Defined at:
  5036 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  wh              1    wreg     PTR unsigned char 
  5039 ;;		 -> main@aux(50), 
  5040 ;;  f               2   49[BANK1 ] PTR const unsigned char 
  5041 ;;		 -> STR_3(5), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  wh              1   56[BANK1 ] PTR unsigned char 
  5044 ;;		 -> main@aux(50), 
  5045 ;;  pb              3   58[BANK1 ] struct __prbuf
  5046 ;;  ap              1   57[BANK1 ] PTR void [1]
  5047 ;;		 -> ?_sprintf(2), ?_printf(2), 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2   49[BANK1 ] int 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5057 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;Total ram usage:       12 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    4
  5064 ;; This function calls:
  5065 ;;		__doprnt
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _sprintf
  5073  1006                     _sprintf:	
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5077                           ;sprintf@wh stored from wreg
  5078  1006  0021               	movlb	1	; select bank1
  5079  1007  00D8               	movwf	sprintf@wh^(0+128)
  5080  1008  0858               	movf	sprintf@wh^(0+128),w
  5081  1009  00D7               	movwf	??_sprintf^(0+128)
  5082  100A  0857               	movf	??_sprintf^(0+128),w
  5083  100B  00DA               	movwf	sprintf@pb^(0+128)
  5084  100C  01DB               	clrf	(low ((sprintf@pb| 0+1)))^(0+128)
  5085  100D  01DC               	clrf	((low ((sprintf@pb| 0+1))+1))^(0+128)
  5086  100E  30D3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5087  100F  00D7               	movwf	??_sprintf^(0+128)
  5088  1010  0857               	movf	??_sprintf^(0+128),w
  5089  1011  00D9               	movwf	sprintf@ap^(0+128)
  5090  1012  0852               	movf	(sprintf@f+1)^(0+128),w
  5091  1013  0020               	movlb	0	; select bank0
  5092  1014  00EE               	movwf	__doprnt@f+1
  5093  1015  0021               	movlb	1	; select bank1
  5094  1016  0851               	movf	sprintf@f^(0+128),w
  5095  1017  0020               	movlb	0	; select bank0
  5096  1018  00ED               	movwf	__doprnt@f
  5097  1019  30D9               	movlw	(low (sprintf@ap| 0))& (0+255)
  5098  101A  0021               	movlb	1	; select bank1
  5099  101B  00D7               	movwf	??_sprintf^(0+128)
  5100  101C  0857               	movf	??_sprintf^(0+128),w
  5101  101D  0020               	movlb	0	; select bank0
  5102  101E  00EF               	movwf	__doprnt@ap
  5103  101F  30DA               	movlw	(low (sprintf@pb| 0))& (0+255)
  5104  1020  3182  22BB         	fcall	__doprnt
  5105  1022  0021               	movlb	1	; select bank1
  5106  1023  085A               	movf	sprintf@pb^(0+128),w
  5107  1024  0086               	movwf	6
  5108  1025  3001               	movlw	1	; select bank2/3
  5109  1026  0087               	movwf	7
  5110  1027  0181               	clrf	1
  5111  1028  0008               	return
  5112  1029                     __end_of_sprintf:	
  5113                           
  5114                           	psect	text2
  5115  1112                     __ptext2:	
  5116 ;; *************** function _spi_open *****************
  5117 ;; Defined at:
  5118 ;;		line 46 in file "mcc_generated_files/spi_driver.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  spiUniqueCon    1    wreg     enum E9549
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  spiUniqueCon    1    3[COMMON] enum E9549
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      unsigned char 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;Total ram usage:        4 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;;		_MASTER0_open
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _spi_open
  5148  1112                     _spi_open:	
  5149                           
  5150                           ;incstack = 0
  5151                           ; Regs used in _spi_open: [wreg-fsr0h+status,2+status,0+pclath]
  5152                           ;spi_open@spiUniqueConfiguration stored from wreg
  5153  1112  00F3               	movwf	spi_open@spiUniqueConfiguration
  5154                           
  5155                           ;spi_driver.c: 48: if(!SSP1CON1bits.SSPEN)
  5156  1113  0024               	movlb	4	; select bank4
  5157  1114  1A95               	btfsc	21,5	;volatile
  5158  1115  2968               	goto	l4564
  5159                           
  5160                           ;spi_driver.c: 49: {;spi_driver.c: 51: SSPCLKPPS = 14;
  5161  1116  300E               	movlw	14
  5162  1117  003C               	movlb	28	; select bank28
  5163  1118  00A0               	movwf	32	;volatile
  5164                           
  5165                           ;spi_driver.c: 52: SSPDATPPS = 13;
  5166  1119  300D               	movlw	13
  5167  111A  00A1               	movwf	33	;volatile
  5168                           
  5169                           ;spi_driver.c: 53: RB6PPS = 16;
  5170  111B  3010               	movlw	16
  5171  111C  003D               	movlb	29	; select bank29
  5172  111D  009E               	movwf	30	;volatile
  5173                           
  5174                           ;spi_driver.c: 56: SSP1STAT = spi_configuration[spiUniqueConfiguration].stat;
  5175  111E  0873               	movf	spi_open@spiUniqueConfiguration,w
  5176  111F  00F0               	movwf	??_spi_open
  5177  1120  01F1               	clrf	??_spi_open+1
  5178  1121  35F0               	lslf	??_spi_open,f
  5179  1122  0DF1               	rlf	??_spi_open+1,f
  5180  1123  35F0               	lslf	??_spi_open,f
  5181  1124  0DF1               	rlf	??_spi_open+1,f
  5182  1125  30E5               	movlw	low ((_spi_configuration+1)| (0+32768))
  5183  1126  0770               	addwf	??_spi_open,w
  5184  1127  0084               	movwf	4
  5185  1128  3098               	movlw	high ((_spi_configuration+1)| (0+32768))
  5186  1129  3D71               	addwfc	??_spi_open+1,w
  5187  112A  0085               	movwf	5
  5188  112B  0800               	movf	0,w	;code access
  5189  112C  0024               	movlb	4	; select bank4
  5190  112D  0094               	movwf	20	;volatile
  5191                           
  5192                           ;spi_driver.c: 57: SSP1CON1 = (uint8_t)(spi_configuration[spiUniqueConfiguration].con1 |
      +                           0x20);
  5193  112E  0873               	movf	spi_open@spiUniqueConfiguration,w
  5194  112F  00F0               	movwf	??_spi_open
  5195  1130  01F1               	clrf	??_spi_open+1
  5196  1131  35F0               	lslf	??_spi_open,f
  5197  1132  0DF1               	rlf	??_spi_open+1,f
  5198  1133  35F0               	lslf	??_spi_open,f
  5199  1134  0DF1               	rlf	??_spi_open+1,f
  5200  1135  30E4               	movlw	low (_spi_configuration| (0+32768))
  5201  1136  0770               	addwf	??_spi_open,w
  5202  1137  0084               	movwf	4
  5203  1138  3098               	movlw	high (_spi_configuration| (0+32768))
  5204  1139  3D71               	addwfc	??_spi_open+1,w
  5205  113A  0085               	movwf	5
  5206  113B  0800               	movf	0,w	;code access
  5207  113C  3820               	iorlw	32
  5208  113D  0095               	movwf	21	;volatile
  5209                           
  5210                           ;spi_driver.c: 58: SSP1CON2 = 0x00;
  5211  113E  0196               	clrf	22	;volatile
  5212                           
  5213                           ;spi_driver.c: 59: SSP1ADD = (uint8_t)(spi_configuration[spiUniqueConfiguration].add);
  5214  113F  0873               	movf	spi_open@spiUniqueConfiguration,w
  5215  1140  00F0               	movwf	??_spi_open
  5216  1141  01F1               	clrf	??_spi_open+1
  5217  1142  35F0               	lslf	??_spi_open,f
  5218  1143  0DF1               	rlf	??_spi_open+1,f
  5219  1144  35F0               	lslf	??_spi_open,f
  5220  1145  0DF1               	rlf	??_spi_open+1,f
  5221  1146  30E6               	movlw	low ((_spi_configuration+2)| (0+32768))
  5222  1147  0770               	addwf	??_spi_open,w
  5223  1148  0084               	movwf	4
  5224  1149  3098               	movlw	high ((_spi_configuration+2)| (0+32768))
  5225  114A  3D71               	addwfc	??_spi_open+1,w
  5226  114B  0085               	movwf	5
  5227  114C  0800               	movf	0,w	;code access
  5228  114D  0092               	movwf	18	;volatile
  5229                           
  5230                           ;spi_driver.c: 61: TRISBbits.TRISB6 = (uint8_t)(spi_configuration[spiUniqueConfiguration
      +                          ].operation);
  5231  114E  0873               	movf	spi_open@spiUniqueConfiguration,w
  5232  114F  00F0               	movwf	??_spi_open
  5233  1150  01F1               	clrf	??_spi_open+1
  5234  1151  35F0               	lslf	??_spi_open,f
  5235  1152  0DF1               	rlf	??_spi_open+1,f
  5236  1153  35F0               	lslf	??_spi_open,f
  5237  1154  0DF1               	rlf	??_spi_open+1,f
  5238  1155  30E7               	movlw	low ((_spi_configuration+3)| (0+32768))
  5239  1156  0770               	addwf	??_spi_open,w
  5240  1157  0084               	movwf	4
  5241  1158  3098               	movlw	high ((_spi_configuration+3)| (0+32768))
  5242  1159  3D71               	addwfc	??_spi_open+1,w
  5243  115A  0085               	movwf	5
  5244  115B  0800               	movf	0,w	;code access
  5245  115C  00F2               	movwf	??_spi_open+2
  5246  115D  0EF2               	swapf	??_spi_open+2,f
  5247  115E  0DF2               	rlf	??_spi_open+2,f
  5248  115F  0DF2               	rlf	??_spi_open+2,f
  5249  1160  0021               	movlb	1	; select bank1
  5250  1161  080D               	movf	13,w	;volatile
  5251  1162  0672               	xorwf	??_spi_open+2,w
  5252  1163  39BF               	andlw	-65
  5253  1164  0672               	xorwf	??_spi_open+2,w
  5254  1165  008D               	movwf	13	;volatile
  5255                           
  5256                           ;spi_driver.c: 62: return 1;
  5257  1166  3001               	movlw	1
  5258  1167  0008               	return
  5259  1168                     l4564:	
  5260                           
  5261                           ;spi_driver.c: 63: };spi_driver.c: 64: return 0;
  5262  1168  3000               	movlw	0
  5263  1169  0008               	return
  5264  116A                     __end_of_spi_open:	
  5265                           
  5266                           	psect	text3
  5267  1DEE                     __ptext3:	
  5268 ;; *************** function _printf *****************
  5269 ;; Defined at:
  5270 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  f               2   49[BANK1 ] PTR const unsigned char 
  5273 ;;		 -> STR_7(8), STR_6(7), STR_5(7), STR_4(18), 
  5274 ;;		 -> main@aux(50), STR_2(16), STR_1(18), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  pb              3   55[BANK1 ] struct __prbuf
  5277 ;;  ap              1   54[BANK1 ] PTR void [1]
  5278 ;;		 -> ?_sprintf(2), ?_printf(2), 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  2   49[BANK1 ] int 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5288 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;Total ram usage:        9 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    4
  5295 ;; This function calls:
  5296 ;;		__doprnt
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;;		_HX711_read_new
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function _printf
  5305  1DEE                     _printf:	
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5309  1DEE  0021               	movlb	1	; select bank1
  5310  1DEF  01D7               	clrf	printf@pb^(0+128)
  5311  1DF0  3095               	movlw	low _putch
  5312  1DF1  00D8               	movwf	(low ((printf@pb| 0+1)))^(0+128)
  5313  1DF2  301D               	movlw	high _putch
  5314  1DF3  00D9               	movwf	((low ((printf@pb| 0+1)))^(0+128)+1)
  5315  1DF4  30D3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5316  1DF5  00D5               	movwf	??_printf^(0+128)
  5317  1DF6  0855               	movf	??_printf^(0+128),w
  5318  1DF7  00D6               	movwf	printf@ap^(0+128)
  5319                           
  5320                           ;	Return value of _printf is never used
  5321  1DF8  0852               	movf	(printf@f+1)^(0+128),w
  5322  1DF9  0020               	movlb	0	; select bank0
  5323  1DFA  00EE               	movwf	__doprnt@f+1
  5324  1DFB  0021               	movlb	1	; select bank1
  5325  1DFC  0851               	movf	printf@f^(0+128),w
  5326  1DFD  0020               	movlb	0	; select bank0
  5327  1DFE  00ED               	movwf	__doprnt@f
  5328  1DFF  30D6               	movlw	(low (printf@ap| 0))& (0+255)
  5329  1E00  0021               	movlb	1	; select bank1
  5330  1E01  00D5               	movwf	??_printf^(0+128)
  5331  1E02  0855               	movf	??_printf^(0+128),w
  5332  1E03  0020               	movlb	0	; select bank0
  5333  1E04  00EF               	movwf	__doprnt@ap
  5334  1E05  30D7               	movlw	(low (printf@pb| 0))& (0+255)
  5335  1E06  3182  22BB         	fcall	__doprnt
  5336  1E08  0008               	return
  5337  1E09                     __end_of_printf:	
  5338                           
  5339                           	psect	text4
  5340  02BB                     __ptext4:	
  5341 ;; *************** function __doprnt *****************
  5342 ;; Defined at:
  5343 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  pb              1    wreg     PTR struct __prbuf
  5346 ;;		 -> sprintf@pb(3), printf@pb(3), 
  5347 ;;  f               2   77[BANK0 ] PTR const unsigned char 
  5348 ;;		 -> STR_7(8), STR_6(7), STR_5(7), STR_4(18), 
  5349 ;;		 -> STR_3(5), main@aux(50), STR_2(16), STR_1(18), 
  5350 ;;  ap              1   79[BANK0 ] PTR PTR void 
  5351 ;;		 -> sprintf@ap(1), printf@ap(1), 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  pb              1   48[BANK1 ] PTR struct __prbuf
  5354 ;;		 -> sprintf@pb(3), printf@pb(3), 
  5355 ;;  fval            4   41[BANK1 ] PTR struct __prbuf
  5356 ;;  tmpval          4   37[BANK1 ] struct .
  5357 ;;  val             4   31[BANK1 ] unsigned long 
  5358 ;;  width           2   45[BANK1 ] int 
  5359 ;;  eexp            2   35[BANK1 ] int 
  5360 ;;  flag            2   29[BANK1 ] unsigned short 
  5361 ;;  prec            2   27[BANK1 ] int 
  5362 ;;  len             2   25[BANK1 ] unsigned int 
  5363 ;;  c               1   47[BANK1 ] unsigned char 
  5364 ;;  cp              1   24[BANK1 ] PTR const unsigned char 
  5365 ;;		 -> _doprnt@c(1), 
  5366 ;;  d               1    0        unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   77[BANK0 ] int 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Totals:         0       3      35       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;Total ram usage:       38 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    3
  5383 ;; This function calls:
  5384 ;;		Absolute function
  5385 ;;		___awdiv
  5386 ;;		___fladd
  5387 ;;		___fleq
  5388 ;;		___flge
  5389 ;;		___flmul
  5390 ;;		___flneg
  5391 ;;		___flsub
  5392 ;;		___fltol
  5393 ;;		___lldiv
  5394 ;;		___llmod
  5395 ;;		___wmul
  5396 ;;		___xxtofl
  5397 ;;		__div_to_l_
  5398 ;;		__tdiv_to_l_
  5399 ;;		_fround
  5400 ;;		_isdigit
  5401 ;;		_putch
  5402 ;;		_scale
  5403 ;; This function is called by:
  5404 ;;		_printf
  5405 ;;		_sprintf
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function __doprnt
  5411  02BB                     __doprnt:	
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5415                           ;__doprnt@pb stored from wreg
  5416  02BB  0021               	movlb	1	; select bank1
  5417  02BC  00D0               	movwf	__doprnt@pb^(0+128)
  5418  02BD                     l4536:	
  5419                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
  5420                           
  5421  02BD  0020               	movlb	0	; select bank0
  5422  02BE  086E               	movf	__doprnt@f+1,w
  5423  02BF  0021               	movlb	1	; select bank1
  5424  02C0  00AF               	movwf	(??__doprnt^(0+128)+1)
  5425  02C1  0020               	movlb	0	; select bank0
  5426  02C2  086D               	movf	__doprnt@f,w
  5427  02C3  0021               	movlb	1	; select bank1
  5428  02C4  00AE               	movwf	??__doprnt^(0+128)
  5429  02C5  0020               	movlb	0	; select bank0
  5430  02C6  0AED               	incf	__doprnt@f,f
  5431  02C7  1903               	skipnz
  5432  02C8  0AEE               	incf	__doprnt@f+1,f
  5433  02C9  0021               	movlb	1	; select bank1
  5434  02CA  082E               	movf	??__doprnt^(0+128),w
  5435  02CB  0084               	movwf	4
  5436  02CC  082F               	movf	(??__doprnt+1)^(0+128),w
  5437  02CD  0085               	movwf	5
  5438  02CE  0800               	movf	0,w	;code access
  5439  02CF  00B0               	movwf	(??__doprnt+2)^(0+128)
  5440  02D0  0830               	movf	(??__doprnt+2)^(0+128),w
  5441  02D1  00CF               	movwf	__doprnt@c^(0+128)
  5442  02D2  084F               	movf	__doprnt@c^(0+128),w
  5443  02D3  1903               	btfsc	3,2
  5444  02D4  2FE2               	goto	L12
  5445                           
  5446                           ;doprnt.c: 550: if(c != '%')
  5447  02D5  3025               	movlw	37
  5448  02D6  064F               	xorwf	__doprnt@c^(0+128),w
  5449  02D7  1903               	btfsc	3,2
  5450  02D8  2B01               	goto	l4188
  5451  02D9  0A50               	incf	__doprnt@pb^(0+128),w
  5452  02DA  0086               	movwf	6
  5453  02DB  0187               	clrf	7
  5454  02DC  0016               	moviw fsr1++
  5455  02DD  0401               	iorwf	1,w
  5456  02DE  1903               	btfsc	3,2
  5457  02DF  2AEE               	goto	l4184
  5458  02E0  084F               	movf	__doprnt@c^(0+128),w
  5459  02E1  00AE               	movwf	??__doprnt^(0+128)
  5460  02E2  082E               	movf	??__doprnt^(0+128),w
  5461  02E3  00F1               	movwf	putch@txData
  5462  02E4  0A50               	incf	__doprnt@pb^(0+128),w
  5463  02E5  0086               	movwf	6
  5464  02E6  0187               	clrf	7
  5465  02E7  3F41               	moviw [1]fsr1
  5466  02E8  008A               	movwf	10
  5467  02E9  3F40               	moviw [0]fsr1
  5468  02EA  000A               	callw
  5469  02EB  3182               	pagesel	$
  5470  02EC  0021               	movlb	1	; select bank1
  5471  02ED  2ABD               	goto	l4536
  5472  02EE                     l4184:	
  5473  02EE  084F               	movf	__doprnt@c^(0+128),w
  5474  02EF  00AE               	movwf	??__doprnt^(0+128)
  5475  02F0  0850               	movf	__doprnt@pb^(0+128),w
  5476  02F1  0086               	movwf	6
  5477  02F2  0187               	clrf	7
  5478  02F3  0801               	movf	1,w
  5479  02F4  0086               	movwf	6
  5480  02F5  3001               	movlw	1	; select bank2/3
  5481  02F6  0087               	movwf	7
  5482  02F7  082E               	movf	??__doprnt^(0+128),w
  5483  02F8  0081               	movwf	1
  5484  02F9  3001               	movlw	1
  5485  02FA  00AE               	movwf	??__doprnt^(0+128)
  5486  02FB  0850               	movf	__doprnt@pb^(0+128),w
  5487  02FC  0086               	movwf	6
  5488  02FD  0187               	clrf	7
  5489  02FE  082E               	movf	??__doprnt^(0+128),w
  5490  02FF  0781               	addwf	1,f
  5491  0300  2ABD               	goto	l4536
  5492  0301                     l4188:	
  5493                           
  5494                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  5495  0301  01CD               	clrf	__doprnt@width^(0+128)
  5496  0302  01CE               	clrf	(__doprnt@width+1)^(0+128)
  5497                           
  5498                           ;doprnt.c: 560: flag = 0;
  5499  0303  01BD               	clrf	__doprnt@flag^(0+128)
  5500  0304  01BE               	clrf	(__doprnt@flag+1)^(0+128)
  5501  0305  2B0D               	goto	l4194
  5502  0306                     l586:	
  5503                           ;doprnt.c: 591: case '0':
  5504                           
  5505                           
  5506                           ;doprnt.c: 592: flag |= 0x04;
  5507  0306  0021               	movlb	1	; select bank1
  5508  0307  153D               	bsf	__doprnt@flag^(0+128),2
  5509                           
  5510                           ;doprnt.c: 593: f++;
  5511  0308  3001               	movlw	1
  5512  0309  0020               	movlb	0	; select bank0
  5513  030A  07ED               	addwf	__doprnt@f,f
  5514  030B  3000               	movlw	0
  5515  030C  3DEE               	addwfc	__doprnt@f+1,f
  5516  030D                     l4194:	
  5517                           ;doprnt.c: 594: continue;
  5518                           
  5519  030D  0020               	movlb	0	; select bank0
  5520  030E  086D               	movf	__doprnt@f,w
  5521  030F  0084               	movwf	4
  5522  0310  086E               	movf	__doprnt@f+1,w
  5523  0311  0085               	movwf	5
  5524  0312  0800               	movf	0,w	;code access
  5525                           
  5526                           ; Switch size 1, requested type "simple"
  5527                           ; Number of cases is 1, Range of values is 48 to 48
  5528                           ; switch strategies available:
  5529                           ; Name         Instructions Cycles
  5530                           ; simple_byte            4     3 (average)
  5531                           ; direct_byte           11     9 (fixed)
  5532                           ; jumptable            263     9 (fixed)
  5533                           ;	Chosen strategy is simple_byte
  5534  0313  3A30               	xorlw	48	; case 48
  5535  0314  1903               	skipnz
  5536  0315  2B06               	goto	l586
  5537  0316  2B17               	goto	l4196
  5538  0317                     l4196:	
  5539                           
  5540                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  5541  0317  086D               	movf	__doprnt@f,w
  5542  0318  0084               	movwf	4
  5543  0319  086E               	movf	__doprnt@f+1,w
  5544  031A  0085               	movwf	5
  5545  031B  0800               	movf	0,w	;code access
  5546  031C  3188  2000  3182   	fcall	_isdigit
  5547  031F  1C03               	btfss	3,0
  5548  0320  2BE1               	goto	l4242
  5549                           
  5550                           ;doprnt.c: 610: width = 0;
  5551  0321  0021               	movlb	1	; select bank1
  5552  0322  01CD               	clrf	__doprnt@width^(0+128)
  5553  0323  01CE               	clrf	(__doprnt@width+1)^(0+128)
  5554  0324                     l4200:	
  5555                           
  5556                           ;doprnt.c: 612: width *= 10;
  5557  0324  300A               	movlw	10
  5558  0325  00F0               	movwf	___wmul@multiplier
  5559  0326  3000               	movlw	0
  5560  0327  00F1               	movwf	___wmul@multiplier+1
  5561  0328  0021               	movlb	1	; select bank1
  5562  0329  084E               	movf	(__doprnt@width+1)^(0+128),w
  5563  032A  00F3               	movwf	___wmul@multiplicand+1
  5564  032B  084D               	movf	__doprnt@width^(0+128),w
  5565  032C  00F2               	movwf	___wmul@multiplicand
  5566  032D  319D  25D3  3182   	fcall	___wmul
  5567  0330  0871               	movf	?___wmul+1,w
  5568  0331  0021               	movlb	1	; select bank1
  5569  0332  00CE               	movwf	(__doprnt@width+1)^(0+128)
  5570  0333  0870               	movf	?___wmul,w
  5571  0334  00CD               	movwf	__doprnt@width^(0+128)
  5572                           
  5573                           ;doprnt.c: 613: width += *f++ - '0';
  5574  0335  0020               	movlb	0	; select bank0
  5575  0336  086D               	movf	__doprnt@f,w
  5576  0337  0084               	movwf	4
  5577  0338  086E               	movf	__doprnt@f+1,w
  5578  0339  0085               	movwf	5
  5579  033A  0800               	movf	0,w	;code access
  5580  033B  3ED0               	addlw	208
  5581  033C  0021               	movlb	1	; select bank1
  5582  033D  00AE               	movwf	??__doprnt^(0+128)
  5583  033E  30FF               	movlw	255
  5584  033F  1803               	skipnc
  5585  0340  3000               	movlw	0
  5586  0341  00AF               	movwf	(??__doprnt^(0+128)+1)
  5587  0342  082E               	movf	??__doprnt^(0+128),w
  5588  0343  07CD               	addwf	__doprnt@width^(0+128),f
  5589  0344  082F               	movf	(??__doprnt+1)^(0+128),w
  5590  0345  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  5591  0346  3001               	movlw	1
  5592  0347  0020               	movlb	0	; select bank0
  5593  0348  07ED               	addwf	__doprnt@f,f
  5594  0349  3000               	movlw	0
  5595  034A  3DEE               	addwfc	__doprnt@f+1,f
  5596                           
  5597                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  5598  034B  086D               	movf	__doprnt@f,w
  5599  034C  0084               	movwf	4
  5600  034D  086E               	movf	__doprnt@f+1,w
  5601  034E  0085               	movwf	5
  5602  034F  0800               	movf	0,w	;code access
  5603  0350  3188  2000  3182   	fcall	_isdigit
  5604  0353  1C03               	btfss	3,0
  5605  0354  2BE1               	goto	l4242
  5606  0355  2B24               	goto	l4200
  5607  0356                     l596:	
  5608                           ;doprnt.c: 681: case 'f':
  5609                           
  5610                           
  5611                           ;doprnt.c: 682: flag |= 0x400;
  5612  0356  153E               	bsf	(__doprnt@flag^(0+128)+1),2
  5613                           
  5614                           ;doprnt.c: 683: break;
  5615  0357  2C01               	goto	l4244
  5616  0358                     l4208:	
  5617                           
  5618                           ;doprnt.c: 776: if(width > len)
  5619  0358  084E               	movf	(__doprnt@width+1)^(0+128),w
  5620  0359  023A               	subwf	(__doprnt@len+1)^(0+128),w
  5621  035A  1D03               	skipz
  5622  035B  2B5E               	goto	u5475
  5623  035C  084D               	movf	__doprnt@width^(0+128),w
  5624  035D  0239               	subwf	__doprnt@len^(0+128),w
  5625  035E                     u5475:	
  5626  035E  1803               	skipnc
  5627  035F  2B65               	goto	l4212
  5628                           
  5629                           ;doprnt.c: 777: width -= len;
  5630  0360  0839               	movf	__doprnt@len^(0+128),w
  5631  0361  02CD               	subwf	__doprnt@width^(0+128),f
  5632  0362  083A               	movf	(__doprnt@len+1)^(0+128),w
  5633  0363  3BCE               	subwfb	(__doprnt@width+1)^(0+128),f
  5634  0364  2B67               	goto	l4222
  5635  0365                     l4212:	
  5636                           
  5637                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
  5638  0365  01CD               	clrf	__doprnt@width^(0+128)
  5639  0366  01CE               	clrf	(__doprnt@width+1)^(0+128)
  5640  0367                     l4222:	
  5641  0367  30FF               	movlw	255
  5642  0368  0021               	movlb	1	; select bank1
  5643  0369  07CD               	addwf	__doprnt@width^(0+128),f
  5644  036A  30FF               	movlw	255
  5645  036B  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  5646  036C  0A4D               	incf	__doprnt@width^(0+128),w
  5647  036D  1903               	btfsc	3,2
  5648  036E  0A4E               	incf	(__doprnt@width+1)^(0+128),w
  5649  036F  1903               	btfsc	3,2
  5650  0370  2BCD               	goto	l4236
  5651  0371  0A50               	incf	__doprnt@pb^(0+128),w
  5652  0372  0086               	movwf	6
  5653  0373  0187               	clrf	7
  5654  0374  0016               	moviw fsr1++
  5655  0375  0401               	iorwf	1,w
  5656  0376  1903               	btfsc	3,2
  5657  0377  2B85               	goto	l4218
  5658  0378  3020               	movlw	32
  5659  0379  00AE               	movwf	??__doprnt^(0+128)
  5660  037A  082E               	movf	??__doprnt^(0+128),w
  5661  037B  00F1               	movwf	putch@txData
  5662  037C  0A50               	incf	__doprnt@pb^(0+128),w
  5663  037D  0086               	movwf	6
  5664  037E  0187               	clrf	7
  5665  037F  3F41               	moviw [1]fsr1
  5666  0380  008A               	movwf	10
  5667  0381  3F40               	moviw [0]fsr1
  5668  0382  000A               	callw
  5669  0383  3182               	pagesel	$
  5670  0384  2B67               	goto	l4222
  5671  0385                     l4218:	
  5672  0385  3020               	movlw	32
  5673  0386  00AE               	movwf	??__doprnt^(0+128)
  5674  0387  0850               	movf	__doprnt@pb^(0+128),w
  5675  0388  0086               	movwf	6
  5676  0389  0187               	clrf	7
  5677  038A  0801               	movf	1,w
  5678  038B  0086               	movwf	6
  5679  038C  3001               	movlw	1	; select bank2/3
  5680  038D  0087               	movwf	7
  5681  038E  082E               	movf	??__doprnt^(0+128),w
  5682  038F  0081               	movwf	1
  5683  0390  3001               	movlw	1
  5684  0391  00AE               	movwf	??__doprnt^(0+128)
  5685  0392  0850               	movf	__doprnt@pb^(0+128),w
  5686  0393  0086               	movwf	6
  5687  0394  0187               	clrf	7
  5688  0395  082E               	movf	??__doprnt^(0+128),w
  5689  0396  0781               	addwf	1,f
  5690  0397  2B67               	goto	l4222
  5691  0398                     l4224:	
  5692  0398  0A50               	incf	__doprnt@pb^(0+128),w
  5693  0399  0086               	movwf	6
  5694  039A  0187               	clrf	7
  5695  039B  0016               	moviw fsr1++
  5696  039C  0401               	iorwf	1,w
  5697  039D  1903               	btfsc	3,2
  5698  039E  2BB4               	goto	l4230
  5699  039F  0838               	movf	__doprnt@cp^(0+128),w
  5700  03A0  0086               	movwf	6
  5701  03A1  0187               	clrf	7
  5702  03A2  0801               	movf	1,w
  5703  03A3  00AE               	movwf	??__doprnt^(0+128)
  5704  03A4  082E               	movf	??__doprnt^(0+128),w
  5705  03A5  00F1               	movwf	putch@txData
  5706  03A6  0A50               	incf	__doprnt@pb^(0+128),w
  5707  03A7  0086               	movwf	6
  5708  03A8  0187               	clrf	7
  5709  03A9  3F41               	moviw [1]fsr1
  5710  03AA  008A               	movwf	10
  5711  03AB  3F40               	moviw [0]fsr1
  5712  03AC  000A               	callw
  5713  03AD  3182               	pagesel	$
  5714  03AE  3001               	movlw	1
  5715  03AF  0021               	movlb	1	; select bank1
  5716  03B0  00AE               	movwf	??__doprnt^(0+128)
  5717  03B1  082E               	movf	??__doprnt^(0+128),w
  5718  03B2  07B8               	addwf	__doprnt@cp^(0+128),f
  5719  03B3  2BCD               	goto	l4236
  5720  03B4                     l4230:	
  5721  03B4  0838               	movf	__doprnt@cp^(0+128),w
  5722  03B5  0086               	movwf	6
  5723  03B6  0187               	clrf	7
  5724  03B7  0801               	movf	1,w
  5725  03B8  00AE               	movwf	??__doprnt^(0+128)
  5726  03B9  0850               	movf	__doprnt@pb^(0+128),w
  5727  03BA  0086               	movwf	6
  5728  03BB  0187               	clrf	7
  5729  03BC  0801               	movf	1,w
  5730  03BD  0086               	movwf	6
  5731  03BE  3001               	movlw	1	; select bank2/3
  5732  03BF  0087               	movwf	7
  5733  03C0  082E               	movf	??__doprnt^(0+128),w
  5734  03C1  0081               	movwf	1
  5735  03C2  3001               	movlw	1
  5736  03C3  00AE               	movwf	??__doprnt^(0+128)
  5737  03C4  082E               	movf	??__doprnt^(0+128),w
  5738  03C5  07B8               	addwf	__doprnt@cp^(0+128),f
  5739  03C6  3001               	movlw	1
  5740  03C7  00AE               	movwf	??__doprnt^(0+128)
  5741  03C8  0850               	movf	__doprnt@pb^(0+128),w
  5742  03C9  0086               	movwf	6
  5743  03CA  0187               	clrf	7
  5744  03CB  082E               	movf	??__doprnt^(0+128),w
  5745  03CC  0781               	addwf	1,f
  5746  03CD                     l4236:	
  5747  03CD  3001               	movlw	1
  5748  03CE  02B9               	subwf	__doprnt@len^(0+128),f
  5749  03CF  3000               	movlw	0
  5750  03D0  3BBA               	subwfb	(__doprnt@len+1)^(0+128),f
  5751  03D1  0A39               	incf	__doprnt@len^(0+128),w
  5752  03D2  1D03               	skipz
  5753  03D3  2B98               	goto	l4224
  5754  03D4  0A3A               	incf	(__doprnt@len+1)^(0+128),w
  5755  03D5  1903               	btfsc	3,2
  5756  03D6  2ABD               	goto	l4536
  5757  03D7  2B98               	goto	l4224
  5758  03D8                     l4238:	
  5759                           
  5760                           ;doprnt.c: 824: cp = (char *)&c;
  5761  03D8  30CF               	movlw	(low (__doprnt@c| 0))& (0+255)
  5762  03D9  00AE               	movwf	??__doprnt^(0+128)
  5763  03DA  082E               	movf	??__doprnt^(0+128),w
  5764  03DB  00B8               	movwf	__doprnt@cp^(0+128)
  5765                           
  5766                           ;doprnt.c: 825: len = 1;
  5767  03DC  3001               	movlw	1
  5768  03DD  00B9               	movwf	__doprnt@len^(0+128)
  5769  03DE  3000               	movlw	0
  5770  03DF  00BA               	movwf	(__doprnt@len^(0+128)+1)
  5771                           
  5772                           ;doprnt.c: 826: goto dostring;
  5773  03E0  2B58               	goto	l4208
  5774  03E1                     l4242:	
  5775  03E1  0020               	movlb	0	; select bank0
  5776  03E2  086E               	movf	__doprnt@f+1,w
  5777  03E3  0021               	movlb	1	; select bank1
  5778  03E4  00AF               	movwf	(??__doprnt^(0+128)+1)
  5779  03E5  0020               	movlb	0	; select bank0
  5780  03E6  086D               	movf	__doprnt@f,w
  5781  03E7  0021               	movlb	1	; select bank1
  5782  03E8  00AE               	movwf	??__doprnt^(0+128)
  5783  03E9  0020               	movlb	0	; select bank0
  5784  03EA  0AED               	incf	__doprnt@f,f
  5785  03EB  1903               	skipnz
  5786  03EC  0AEE               	incf	__doprnt@f+1,f
  5787  03ED  0021               	movlb	1	; select bank1
  5788  03EE  082E               	movf	??__doprnt^(0+128),w
  5789  03EF  0084               	movwf	4
  5790  03F0  082F               	movf	(??__doprnt+1)^(0+128),w
  5791  03F1  0085               	movwf	5
  5792  03F2  0800               	movf	0,w	;code access
  5793  03F3  00CF               	movwf	__doprnt@c^(0+128)
  5794                           
  5795                           ; Switch size 1, requested type "simple"
  5796                           ; Number of cases is 4, Range of values is 0 to 105
  5797                           ; switch strategies available:
  5798                           ; Name         Instructions Cycles
  5799                           ; simple_byte           13     7 (average)
  5800                           ; direct_byte          218     6 (fixed)
  5801                           ; jumptable            260     6 (fixed)
  5802                           ;	Chosen strategy is simple_byte
  5803  03F4  3A00               	xorlw	0	; case 0
  5804  03F5  1903               	skipnz
  5805  03F6  2FE2               	goto	L12
  5806  03F7  3A64               	xorlw	100	; case 100
  5807  03F8  1903               	skipnz
  5808  03F9  2C01               	goto	l4244
  5809  03FA  3A02               	xorlw	2	; case 102
  5810  03FB  1903               	skipnz
  5811  03FC  2B56               	goto	l596
  5812  03FD  3A0F               	xorlw	15	; case 105
  5813  03FE  1903               	skipnz
  5814  03FF  2C01               	goto	l4244
  5815  0400  2BD8               	goto	l4238
  5816  0401                     l4244:	
  5817                           
  5818                           ;doprnt.c: 844: if(flag & (0x700)) {
  5819  0401  3000               	movlw	0
  5820  0402  053D               	andwf	__doprnt@flag^(0+128),w
  5821  0403  00AE               	movwf	??__doprnt^(0+128)
  5822  0404  3007               	movlw	7
  5823  0405  053E               	andwf	(__doprnt@flag+1)^(0+128),w
  5824  0406  00AF               	movwf	(??__doprnt+1)^(0+128)
  5825  0407  082E               	movf	??__doprnt^(0+128),w
  5826  0408  042F               	iorwf	(??__doprnt^(0+128)+1),w
  5827  0409  318E  1903         	btfsc	3,2
  5828  040B  2E3D               	goto	l4446
  5829                           
  5830                           ;doprnt.c: 848: prec = 6;
  5831  040C  3006               	movlw	6
  5832  040D  00BB               	movwf	__doprnt@prec^(0+128)
  5833  040E  3000               	movlw	0
  5834  040F  00BC               	movwf	(__doprnt@prec^(0+128)+1)
  5835                           
  5836                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5837  0410  0020               	movlb	0	; select bank0
  5838  0411  086F               	movf	__doprnt@ap,w
  5839  0412  0086               	movwf	6
  5840  0413  0187               	clrf	7
  5841  0414  0801               	movf	1,w
  5842  0415  0084               	movwf	4
  5843  0416  0185               	clrf	5
  5844  0417  3004               	movlw	4
  5845  0418  0781               	addwf	1,f
  5846  0419  3F00               	moviw [0]fsr0
  5847  041A  0021               	movlb	1	; select bank1
  5848  041B  00C9               	movwf	__doprnt@fval^(0+128)
  5849  041C  3F01               	moviw [1]fsr0
  5850  041D  00CA               	movwf	(__doprnt@fval+1)^(0+128)
  5851  041E  3F02               	moviw [2]fsr0
  5852  041F  00CB               	movwf	(__doprnt@fval+2)^(0+128)
  5853  0420  3F03               	moviw [3]fsr0
  5854  0421  00CC               	movwf	(__doprnt@fval+3)^(0+128)
  5855                           
  5856                           ;doprnt.c: 850: if(fval < 0.0) {
  5857  0422  084C               	movf	(__doprnt@fval+3)^(0+128),w
  5858  0423  00F3               	movwf	___flge@ff1+3
  5859  0424  084B               	movf	(__doprnt@fval+2)^(0+128),w
  5860  0425  00F2               	movwf	___flge@ff1+2
  5861  0426  084A               	movf	(__doprnt@fval+1)^(0+128),w
  5862  0427  00F1               	movwf	___flge@ff1+1
  5863  0428  0849               	movf	__doprnt@fval^(0+128),w
  5864  0429  00F0               	movwf	___flge@ff1
  5865  042A  3000               	movlw	0
  5866  042B  00F7               	movwf	___flge@ff2+3
  5867  042C  3000               	movlw	0
  5868  042D  00F6               	movwf	___flge@ff2+2
  5869  042E  3000               	movlw	0
  5870  042F  00F5               	movwf	___flge@ff2+1
  5871  0430  3000               	movlw	0
  5872  0431  00F4               	movwf	___flge@ff2
  5873  0432  3192  222D  3182   	fcall	___flge
  5874  0435  1803               	btfsc	3,0
  5875  0436  2C50               	goto	l4256
  5876                           
  5877                           ;doprnt.c: 851: fval = -fval;
  5878  0437  0021               	movlb	1	; select bank1
  5879  0438  084C               	movf	(__doprnt@fval+3)^(0+128),w
  5880  0439  00F3               	movwf	___flneg@f1+3
  5881  043A  084B               	movf	(__doprnt@fval+2)^(0+128),w
  5882  043B  00F2               	movwf	___flneg@f1+2
  5883  043C  084A               	movf	(__doprnt@fval+1)^(0+128),w
  5884  043D  00F1               	movwf	___flneg@f1+1
  5885  043E  0849               	movf	__doprnt@fval^(0+128),w
  5886  043F  00F0               	movwf	___flneg@f1
  5887  0440  319D  25A5  3182   	fcall	___flneg
  5888  0443  0873               	movf	?___flneg+3,w
  5889  0444  0021               	movlb	1	; select bank1
  5890  0445  00CC               	movwf	(__doprnt@fval+3)^(0+128)
  5891  0446  0872               	movf	?___flneg+2,w
  5892  0447  00CB               	movwf	(__doprnt@fval+2)^(0+128)
  5893  0448  0871               	movf	?___flneg+1,w
  5894  0449  00CA               	movwf	(__doprnt@fval+1)^(0+128)
  5895  044A  0870               	movf	?___flneg,w
  5896  044B  00C9               	movwf	__doprnt@fval^(0+128)
  5897                           
  5898                           ;doprnt.c: 852: flag |= 0x03;
  5899  044C  3003               	movlw	3
  5900  044D  04BD               	iorwf	__doprnt@flag^(0+128),f
  5901  044E  3000               	movlw	0
  5902  044F  04BE               	iorwf	(__doprnt@flag+1)^(0+128),f
  5903  0450                     l4256:	
  5904                           
  5905                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  5906  0450  0021               	movlb	1	; select bank1
  5907  0451  01C3               	clrf	__doprnt@eexp^(0+128)
  5908  0452  01C4               	clrf	(__doprnt@eexp+1)^(0+128)
  5909                           
  5910                           ;doprnt.c: 855: if( fval!=0) {
  5911  0453  084C               	movf	(__doprnt@fval+3)^(0+128),w
  5912  0454  00F3               	movwf	___fleq@ff1+3
  5913  0455  084B               	movf	(__doprnt@fval+2)^(0+128),w
  5914  0456  00F2               	movwf	___fleq@ff1+2
  5915  0457  084A               	movf	(__doprnt@fval+1)^(0+128),w
  5916  0458  00F1               	movwf	___fleq@ff1+1
  5917  0459  0849               	movf	__doprnt@fval^(0+128),w
  5918  045A  00F0               	movwf	___fleq@ff1
  5919  045B  3000               	movlw	0
  5920  045C  00F7               	movwf	___fleq@ff2+3
  5921  045D  3000               	movlw	0
  5922  045E  00F6               	movwf	___fleq@ff2+2
  5923  045F  3000               	movlw	0
  5924  0460  00F5               	movwf	___fleq@ff2+1
  5925  0461  3000               	movlw	0
  5926  0462  00F4               	movwf	___fleq@ff2
  5927  0463  3180  2005  3182   	fcall	___fleq
  5928  0466  1803               	btfsc	3,0
  5929  0467  2D18               	goto	l620
  5930                           
  5931                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  5932  0468  1003               	clrc
  5933  0469  0021               	movlb	1	; select bank1
  5934  046A  0D4B               	rlf	(__doprnt@fval+2)^(0+128),w
  5935  046B  0D4C               	rlf	(__doprnt@fval+3)^(0+128),w
  5936  046C  3E82               	addlw	130
  5937  046D  00C3               	movwf	__doprnt@eexp^(0+128)
  5938  046E  30FF               	movlw	255
  5939  046F  1803               	skipnc
  5940  0470  3000               	movlw	0
  5941  0471  00C4               	movwf	(__doprnt@eexp^(0+128)+1)
  5942                           
  5943                           ;doprnt.c: 857: eexp--;
  5944  0472  30FF               	movlw	255
  5945  0473  07C3               	addwf	__doprnt@eexp^(0+128),f
  5946  0474  30FF               	movlw	255
  5947  0475  3DC4               	addwfc	(__doprnt@eexp+1)^(0+128),f
  5948                           
  5949                           ;doprnt.c: 858: eexp *= 3;
  5950  0476  3003               	movlw	3
  5951  0477  00F0               	movwf	___wmul@multiplier
  5952  0478  3000               	movlw	0
  5953  0479  00F1               	movwf	___wmul@multiplier+1
  5954  047A  0844               	movf	(__doprnt@eexp+1)^(0+128),w
  5955  047B  00F3               	movwf	___wmul@multiplicand+1
  5956  047C  0843               	movf	__doprnt@eexp^(0+128),w
  5957  047D  00F2               	movwf	___wmul@multiplicand
  5958  047E  319D  25D3  3182   	fcall	___wmul
  5959  0481  0871               	movf	?___wmul+1,w
  5960  0482  0021               	movlb	1	; select bank1
  5961  0483  00C4               	movwf	(__doprnt@eexp+1)^(0+128)
  5962  0484  0870               	movf	?___wmul,w
  5963  0485  00C3               	movwf	__doprnt@eexp^(0+128)
  5964                           
  5965                           ;doprnt.c: 859: eexp /= 10;
  5966  0486  300A               	movlw	10
  5967  0487  00F7               	movwf	___awdiv@divisor
  5968  0488  3000               	movlw	0
  5969  0489  00F8               	movwf	___awdiv@divisor+1
  5970  048A  0844               	movf	(__doprnt@eexp+1)^(0+128),w
  5971  048B  00FA               	movwf	___awdiv@dividend+1
  5972  048C  0843               	movf	__doprnt@eexp^(0+128),w
  5973  048D  00F9               	movwf	___awdiv@dividend
  5974  048E  3190  20C0  3182   	fcall	___awdiv
  5975  0491  0878               	movf	?___awdiv+1,w
  5976  0492  0021               	movlb	1	; select bank1
  5977  0493  00C4               	movwf	(__doprnt@eexp+1)^(0+128)
  5978  0494  0877               	movf	?___awdiv,w
  5979  0495  00C3               	movwf	__doprnt@eexp^(0+128)
  5980                           
  5981                           ;doprnt.c: 860: if(eexp < 0)
  5982  0496  1FC4               	btfss	(__doprnt@eexp+1)^(0+128),7
  5983  0497  2C9C               	goto	l4272
  5984                           
  5985                           ;doprnt.c: 861: eexp--;
  5986  0498  30FF               	movlw	255
  5987  0499  07C3               	addwf	__doprnt@eexp^(0+128),f
  5988  049A  30FF               	movlw	255
  5989  049B  3DC4               	addwfc	(__doprnt@eexp+1)^(0+128),f
  5990  049C                     l4272:	
  5991                           
  5992                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  5993  049C  0343               	decf	__doprnt@eexp^(0+128),w
  5994  049D  3AFF               	xorlw	255
  5995  049E  3180  204D  3182   	fcall	_scale
  5996  04A1  0020               	movlb	0	; select bank0
  5997  04A2  0841               	movf	?_scale+3,w
  5998  04A3  0021               	movlb	1	; select bank1
  5999  04A4  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
  6000  04A5  0020               	movlb	0	; select bank0
  6001  04A6  0840               	movf	?_scale+2,w
  6002  04A7  0021               	movlb	1	; select bank1
  6003  04A8  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
  6004  04A9  0020               	movlb	0	; select bank0
  6005  04AA  083F               	movf	?_scale+1,w
  6006  04AB  0021               	movlb	1	; select bank1
  6007  04AC  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
  6008  04AD  0020               	movlb	0	; select bank0
  6009  04AE  083E               	movf	?_scale,w
  6010  04AF  0021               	movlb	1	; select bank1
  6011  04B0  00C5               	movwf	__doprnt@tmpval^(0+128)
  6012                           
  6013                           ;doprnt.c: 866: tmpval.integ *= fval;
  6014  04B1  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6015  04B2  0020               	movlb	0	; select bank0
  6016  04B3  00A7               	movwf	___flmul@b+3
  6017  04B4  0021               	movlb	1	; select bank1
  6018  04B5  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6019  04B6  0020               	movlb	0	; select bank0
  6020  04B7  00A6               	movwf	___flmul@b+2
  6021  04B8  0021               	movlb	1	; select bank1
  6022  04B9  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6023  04BA  0020               	movlb	0	; select bank0
  6024  04BB  00A5               	movwf	___flmul@b+1
  6025  04BC  0021               	movlb	1	; select bank1
  6026  04BD  0849               	movf	__doprnt@fval^(0+128),w
  6027  04BE  0020               	movlb	0	; select bank0
  6028  04BF  00A4               	movwf	___flmul@b
  6029  04C0  0021               	movlb	1	; select bank1
  6030  04C1  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6031  04C2  0020               	movlb	0	; select bank0
  6032  04C3  00AB               	movwf	___flmul@a+3
  6033  04C4  0021               	movlb	1	; select bank1
  6034  04C5  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6035  04C6  0020               	movlb	0	; select bank0
  6036  04C7  00AA               	movwf	___flmul@a+2
  6037  04C8  0021               	movlb	1	; select bank1
  6038  04C9  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6039  04CA  0020               	movlb	0	; select bank0
  6040  04CB  00A9               	movwf	___flmul@a+1
  6041  04CC  0021               	movlb	1	; select bank1
  6042  04CD  0845               	movf	__doprnt@tmpval^(0+128),w
  6043  04CE  0020               	movlb	0	; select bank0
  6044  04CF  00A8               	movwf	___flmul@a
  6045  04D0  318A  2258  3182   	fcall	___flmul
  6046  04D3  0020               	movlb	0	; select bank0
  6047  04D4  0827               	movf	?___flmul+3,w
  6048  04D5  0021               	movlb	1	; select bank1
  6049  04D6  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
  6050  04D7  0020               	movlb	0	; select bank0
  6051  04D8  0826               	movf	?___flmul+2,w
  6052  04D9  0021               	movlb	1	; select bank1
  6053  04DA  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
  6054  04DB  0020               	movlb	0	; select bank0
  6055  04DC  0825               	movf	?___flmul+1,w
  6056  04DD  0021               	movlb	1	; select bank1
  6057  04DE  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
  6058  04DF  0020               	movlb	0	; select bank0
  6059  04E0  0824               	movf	?___flmul,w
  6060  04E1  0021               	movlb	1	; select bank1
  6061  04E2  00C5               	movwf	__doprnt@tmpval^(0+128)
  6062                           
  6063                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  6064  04E3  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6065  04E4  00F3               	movwf	___flge@ff1+3
  6066  04E5  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6067  04E6  00F2               	movwf	___flge@ff1+2
  6068  04E7  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6069  04E8  00F1               	movwf	___flge@ff1+1
  6070  04E9  0845               	movf	__doprnt@tmpval^(0+128),w
  6071  04EA  00F0               	movwf	___flge@ff1
  6072  04EB  303F               	movlw	63
  6073  04EC  00F7               	movwf	___flge@ff2+3
  6074  04ED  3080               	movlw	128
  6075  04EE  00F6               	movwf	___flge@ff2+2
  6076  04EF  3000               	movlw	0
  6077  04F0  00F5               	movwf	___flge@ff2+1
  6078  04F1  3000               	movlw	0
  6079  04F2  00F4               	movwf	___flge@ff2
  6080  04F3  3192  222D  3182   	fcall	___flge
  6081  04F6  1803               	btfsc	3,0
  6082  04F7  2CFD               	goto	l4280
  6083                           
  6084                           ;doprnt.c: 868: eexp--;
  6085  04F8  30FF               	movlw	255
  6086  04F9  0021               	movlb	1	; select bank1
  6087  04FA  07C3               	addwf	__doprnt@eexp^(0+128),f
  6088  04FB  30FF               	movlw	255
  6089  04FC  2D17               	goto	L2
  6090  04FD                     l4280:	
  6091                           
  6092                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  6093  04FD  0021               	movlb	1	; select bank1
  6094  04FE  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6095  04FF  00F3               	movwf	___flge@ff1+3
  6096  0500  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6097  0501  00F2               	movwf	___flge@ff1+2
  6098  0502  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6099  0503  00F1               	movwf	___flge@ff1+1
  6100  0504  0845               	movf	__doprnt@tmpval^(0+128),w
  6101  0505  00F0               	movwf	___flge@ff1
  6102  0506  3041               	movlw	65
  6103  0507  00F7               	movwf	___flge@ff2+3
  6104  0508  3020               	movlw	32
  6105  0509  00F6               	movwf	___flge@ff2+2
  6106  050A  3000               	movlw	0
  6107  050B  00F5               	movwf	___flge@ff2+1
  6108  050C  3000               	movlw	0
  6109  050D  00F4               	movwf	___flge@ff2
  6110  050E  3192  222D  3182   	fcall	___flge
  6111  0511  1C03               	btfss	3,0
  6112  0512  2D18               	goto	l620
  6113                           
  6114                           ;doprnt.c: 870: eexp++;
  6115  0513  3001               	movlw	1
  6116  0514  0021               	movlb	1	; select bank1
  6117  0515  07C3               	addwf	__doprnt@eexp^(0+128),f
  6118  0516  3000               	movlw	0
  6119  0517                     L2:	
  6120  0517  3DC4               	addwfc	(__doprnt@eexp+1)^(0+128),f
  6121  0518                     l620:	
  6122                           
  6123                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  6124  0518  0021               	movlb	1	; select bank1
  6125  0519  083C               	movf	(__doprnt@prec+1)^(0+128),w
  6126  051A  3A80               	xorlw	128
  6127  051B  00AE               	movwf	??__doprnt^(0+128)
  6128  051C  3080               	movlw	128
  6129  051D  022E               	subwf	??__doprnt^(0+128),w
  6130  051E  1D03               	skipz
  6131  051F  2D22               	goto	u5585
  6132  0520  300D               	movlw	13
  6133  0521  023B               	subwf	__doprnt@prec^(0+128),w
  6134  0522                     u5585:	
  6135  0522  1803               	skipnc
  6136  0523  2D55               	goto	l4286
  6137                           
  6138                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  6139  0524  0021               	movlb	1	; select bank1
  6140  0525  083B               	movf	__doprnt@prec^(0+128),w
  6141  0526  3196  267F  3182   	fcall	_fround
  6142  0529  0020               	movlb	0	; select bank0
  6143  052A  0841               	movf	?_fround+3,w
  6144  052B  00D4               	movwf	___fladd@b+3
  6145  052C  0840               	movf	?_fround+2,w
  6146  052D  00D3               	movwf	___fladd@b+2
  6147  052E  083F               	movf	?_fround+1,w
  6148  052F  00D2               	movwf	___fladd@b+1
  6149  0530  083E               	movf	?_fround,w
  6150  0531  00D1               	movwf	___fladd@b
  6151  0532  0021               	movlb	1	; select bank1
  6152  0533  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6153  0534  0020               	movlb	0	; select bank0
  6154  0535  00D8               	movwf	___fladd@a+3
  6155  0536  0021               	movlb	1	; select bank1
  6156  0537  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6157  0538  0020               	movlb	0	; select bank0
  6158  0539  00D7               	movwf	___fladd@a+2
  6159  053A  0021               	movlb	1	; select bank1
  6160  053B  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6161  053C  0020               	movlb	0	; select bank0
  6162  053D  00D6               	movwf	___fladd@a+1
  6163  053E  0021               	movlb	1	; select bank1
  6164  053F  0849               	movf	__doprnt@fval^(0+128),w
  6165  0540  0020               	movlb	0	; select bank0
  6166  0541  00D5               	movwf	___fladd@a
  6167  0542  3188  2076  3182   	fcall	___fladd
  6168  0545  0020               	movlb	0	; select bank0
  6169  0546  0854               	movf	?___fladd+3,w
  6170  0547  0021               	movlb	1	; select bank1
  6171  0548  00CC               	movwf	(__doprnt@fval+3)^(0+128)
  6172  0549  0020               	movlb	0	; select bank0
  6173  054A  0853               	movf	?___fladd+2,w
  6174  054B  0021               	movlb	1	; select bank1
  6175  054C  00CB               	movwf	(__doprnt@fval+2)^(0+128)
  6176  054D  0020               	movlb	0	; select bank0
  6177  054E  0852               	movf	?___fladd+1,w
  6178  054F  0021               	movlb	1	; select bank1
  6179  0550  00CA               	movwf	(__doprnt@fval+1)^(0+128)
  6180  0551  0020               	movlb	0	; select bank0
  6181  0552  0851               	movf	?___fladd,w
  6182  0553  0021               	movlb	1	; select bank1
  6183  0554  00C9               	movwf	__doprnt@fval^(0+128)
  6184  0555                     l4286:	
  6185                           
  6186                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  6187  0555  0021               	movlb	1	; select bank1
  6188  0556  0844               	movf	(__doprnt@eexp+1)^(0+128),w
  6189  0557  3A80               	xorlw	128
  6190  0558  00AE               	movwf	??__doprnt^(0+128)
  6191  0559  3080               	movlw	128
  6192  055A  022E               	subwf	??__doprnt^(0+128),w
  6193  055B  1D03               	skipz
  6194  055C  2D5F               	goto	u5595
  6195  055D  300A               	movlw	10
  6196  055E  0243               	subwf	__doprnt@eexp^(0+128),w
  6197  055F                     u5595:	
  6198  055F  1803               	skipnc
  6199  0560  2D9D               	goto	l4294
  6200  0561  0021               	movlb	1	; select bank1
  6201  0562  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6202  0563  00F3               	movwf	___fleq@ff1+3
  6203  0564  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6204  0565  00F2               	movwf	___fleq@ff1+2
  6205  0566  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6206  0567  00F1               	movwf	___fleq@ff1+1
  6207  0568  0849               	movf	__doprnt@fval^(0+128),w
  6208  0569  00F0               	movwf	___fleq@ff1
  6209  056A  3000               	movlw	0
  6210  056B  00F7               	movwf	___fleq@ff2+3
  6211  056C  3000               	movlw	0
  6212  056D  00F6               	movwf	___fleq@ff2+2
  6213  056E  3000               	movlw	0
  6214  056F  00F5               	movwf	___fleq@ff2+1
  6215  0570  3000               	movlw	0
  6216  0571  00F4               	movwf	___fleq@ff2
  6217  0572  3180  2005  3182   	fcall	___fleq
  6218  0575  1803               	btfsc	3,0
  6219  0576  2DF3               	goto	l4308
  6220  0577  0021               	movlb	1	; select bank1
  6221  0578  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6222  0579  0020               	movlb	0	; select bank0
  6223  057A  00D6               	movwf	___fltol@f1+3
  6224  057B  0021               	movlb	1	; select bank1
  6225  057C  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6226  057D  0020               	movlb	0	; select bank0
  6227  057E  00D5               	movwf	___fltol@f1+2
  6228  057F  0021               	movlb	1	; select bank1
  6229  0580  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6230  0581  0020               	movlb	0	; select bank0
  6231  0582  00D4               	movwf	___fltol@f1+1
  6232  0583  0021               	movlb	1	; select bank1
  6233  0584  0849               	movf	__doprnt@fval^(0+128),w
  6234  0585  0020               	movlb	0	; select bank0
  6235  0586  00D3               	movwf	___fltol@f1
  6236  0587  3191  21C7  3182   	fcall	___fltol
  6237  058A  0020               	movlb	0	; select bank0
  6238  058B  0856               	movf	?___fltol+3,w
  6239  058C  0455               	iorwf	?___fltol+2,w
  6240  058D  0454               	iorwf	?___fltol+1,w
  6241  058E  0453               	iorwf	?___fltol,w
  6242  058F  1D03               	skipz
  6243  0590  2DF3               	goto	l4308
  6244  0591  0021               	movlb	1	; select bank1
  6245  0592  0844               	movf	(__doprnt@eexp+1)^(0+128),w
  6246  0593  3A80               	xorlw	128
  6247  0594  00AE               	movwf	??__doprnt^(0+128)
  6248  0595  3080               	movlw	128
  6249  0596  022E               	subwf	??__doprnt^(0+128),w
  6250  0597  1D03               	skipz
  6251  0598  2D9B               	goto	u5625
  6252  0599  3002               	movlw	2
  6253  059A  0243               	subwf	__doprnt@eexp^(0+128),w
  6254  059B                     u5625:	
  6255  059B  1C03               	skipc
  6256  059C  2DF3               	goto	l4308
  6257  059D                     l4294:	
  6258                           
  6259                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  6260  059D  0021               	movlb	1	; select bank1
  6261  059E  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6262  059F  00F3               	movwf	___flge@ff1+3
  6263  05A0  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6264  05A1  00F2               	movwf	___flge@ff1+2
  6265  05A2  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6266  05A3  00F1               	movwf	___flge@ff1+1
  6267  05A4  0845               	movf	__doprnt@tmpval^(0+128),w
  6268  05A5  00F0               	movwf	___flge@ff1
  6269  05A6  3040               	movlw	64
  6270  05A7  00F7               	movwf	___flge@ff2+3
  6271  05A8  3089               	movlw	137
  6272  05A9  00F6               	movwf	___flge@ff2+2
  6273  05AA  3070               	movlw	112
  6274  05AB  00F5               	movwf	___flge@ff2+1
  6275  05AC  305F               	movlw	95
  6276  05AD  00F4               	movwf	___flge@ff2
  6277  05AE  3192  222D  3182   	fcall	___flge
  6278  05B1  1803               	btfsc	3,0
  6279  05B2  2DB5               	goto	l4298
  6280                           
  6281                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6282  05B3  30F7               	movlw	247
  6283  05B4  2DB6               	goto	L3
  6284  05B5                     l4298:	
  6285                           ;doprnt.c: 1141: }else{
  6286                           
  6287                           
  6288                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6289  05B5  30F8               	movlw	248
  6290  05B6                     L3:	
  6291  05B6  0021               	movlb	1	; select bank1
  6292  05B7  07C3               	addwf	__doprnt@eexp^(0+128),f
  6293  05B8  30FF               	movlw	255
  6294  05B9  3DC4               	addwfc	(__doprnt@eexp+1)^(0+128),f
  6295                           
  6296                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6297  05BA  0843               	movf	__doprnt@eexp^(0+128),w
  6298  05BB  3180  204D  3182   	fcall	_scale
  6299  05BE  0020               	movlb	0	; select bank0
  6300  05BF  0841               	movf	?_scale+3,w
  6301  05C0  0021               	movlb	1	; select bank1
  6302  05C1  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
  6303  05C2  0020               	movlb	0	; select bank0
  6304  05C3  0840               	movf	?_scale+2,w
  6305  05C4  0021               	movlb	1	; select bank1
  6306  05C5  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
  6307  05C6  0020               	movlb	0	; select bank0
  6308  05C7  083F               	movf	?_scale+1,w
  6309  05C8  0021               	movlb	1	; select bank1
  6310  05C9  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
  6311  05CA  0020               	movlb	0	; select bank0
  6312  05CB  083E               	movf	?_scale,w
  6313  05CC  0021               	movlb	1	; select bank1
  6314  05CD  00C5               	movwf	__doprnt@tmpval^(0+128)
  6315  05CE  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6316  05CF  00F3               	movwf	__div_to_l_@f1+3
  6317  05D0  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6318  05D1  00F2               	movwf	__div_to_l_@f1+2
  6319  05D2  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6320  05D3  00F1               	movwf	__div_to_l_@f1+1
  6321  05D4  0849               	movf	__doprnt@fval^(0+128),w
  6322  05D5  00F0               	movwf	__div_to_l_@f1
  6323  05D6  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6324  05D7  00F7               	movwf	__div_to_l_@f2+3
  6325  05D8  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6326  05D9  00F6               	movwf	__div_to_l_@f2+2
  6327  05DA  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6328  05DB  00F5               	movwf	__div_to_l_@f2+1
  6329  05DC  0845               	movf	__doprnt@tmpval^(0+128),w
  6330  05DD  00F4               	movwf	__div_to_l_@f2
  6331  05DE  3193  23CE  3182   	fcall	__div_to_l_
  6332  05E1  0873               	movf	?__div_to_l_+3,w
  6333  05E2  0021               	movlb	1	; select bank1
  6334  05E3  00C2               	movwf	(__doprnt@val+3)^(0+128)
  6335  05E4  0872               	movf	?__div_to_l_+2,w
  6336  05E5  00C1               	movwf	(__doprnt@val+2)^(0+128)
  6337  05E6  0871               	movf	?__div_to_l_+1,w
  6338  05E7  00C0               	movwf	(__doprnt@val+1)^(0+128)
  6339  05E8  0870               	movf	?__div_to_l_,w
  6340  05E9  00BF               	movwf	__doprnt@val^(0+128)
  6341                           
  6342                           ;doprnt.c: 1148: fval = 0.0;
  6343  05EA  3000               	movlw	0
  6344  05EB  00CC               	movwf	(__doprnt@fval+3)^(0+128)
  6345  05EC  3000               	movlw	0
  6346  05ED  00CB               	movwf	(__doprnt@fval+2)^(0+128)
  6347  05EE  3000               	movlw	0
  6348  05EF  00CA               	movwf	(__doprnt@fval+1)^(0+128)
  6349  05F0  3000               	movlw	0
  6350  05F1  00C9               	movwf	__doprnt@fval^(0+128)
  6351                           
  6352                           ;doprnt.c: 1149: } else {
  6353  05F2  2E41               	goto	l4312
  6354  05F3                     l4308:	
  6355                           
  6356                           ;doprnt.c: 1150: val = (unsigned long)fval;
  6357  05F3  0021               	movlb	1	; select bank1
  6358  05F4  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6359  05F5  0020               	movlb	0	; select bank0
  6360  05F6  00D6               	movwf	___fltol@f1+3
  6361  05F7  0021               	movlb	1	; select bank1
  6362  05F8  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6363  05F9  0020               	movlb	0	; select bank0
  6364  05FA  00D5               	movwf	___fltol@f1+2
  6365  05FB  0021               	movlb	1	; select bank1
  6366  05FC  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6367  05FD  0020               	movlb	0	; select bank0
  6368  05FE  00D4               	movwf	___fltol@f1+1
  6369  05FF  0021               	movlb	1	; select bank1
  6370  0600  0849               	movf	__doprnt@fval^(0+128),w
  6371  0601  0020               	movlb	0	; select bank0
  6372  0602  00D3               	movwf	___fltol@f1
  6373  0603  3191  21C7  3182   	fcall	___fltol
  6374  0606  0020               	movlb	0	; select bank0
  6375  0607  0856               	movf	?___fltol+3,w
  6376  0608  0021               	movlb	1	; select bank1
  6377  0609  00C2               	movwf	(__doprnt@val+3)^(0+128)
  6378  060A  0020               	movlb	0	; select bank0
  6379  060B  0855               	movf	?___fltol+2,w
  6380  060C  0021               	movlb	1	; select bank1
  6381  060D  00C1               	movwf	(__doprnt@val+2)^(0+128)
  6382  060E  0020               	movlb	0	; select bank0
  6383  060F  0854               	movf	?___fltol+1,w
  6384  0610  0021               	movlb	1	; select bank1
  6385  0611  00C0               	movwf	(__doprnt@val+1)^(0+128)
  6386  0612  0020               	movlb	0	; select bank0
  6387  0613  0853               	movf	?___fltol,w
  6388  0614  0021               	movlb	1	; select bank1
  6389  0615  00BF               	movwf	__doprnt@val^(0+128)
  6390                           
  6391                           ;doprnt.c: 1151: fval -= (double)val;
  6392  0616  0842               	movf	(__doprnt@val+3)^(0+128),w
  6393  0617  00FA               	movwf	___xxtofl@val+3
  6394  0618  0841               	movf	(__doprnt@val+2)^(0+128),w
  6395  0619  00F9               	movwf	___xxtofl@val+2
  6396  061A  0840               	movf	(__doprnt@val+1)^(0+128),w
  6397  061B  00F8               	movwf	___xxtofl@val+1
  6398  061C  083F               	movf	__doprnt@val^(0+128),w
  6399  061D  00F7               	movwf	___xxtofl@val
  6400  061E  3000               	movlw	0
  6401  061F  3193  2338  3182   	fcall	___xxtofl
  6402  0622  087A               	movf	?___xxtofl+3,w
  6403  0623  0021               	movlb	1	; select bank1
  6404  0624  00A9               	movwf	(___flsub@a+3)^(0+128)
  6405  0625  0879               	movf	?___xxtofl+2,w
  6406  0626  00A8               	movwf	(___flsub@a+2)^(0+128)
  6407  0627  0878               	movf	?___xxtofl+1,w
  6408  0628  00A7               	movwf	(___flsub@a+1)^(0+128)
  6409  0629  0877               	movf	?___xxtofl,w
  6410  062A  00A6               	movwf	___flsub@a^(0+128)
  6411  062B  084C               	movf	(__doprnt@fval+3)^(0+128),w
  6412  062C  00AD               	movwf	(___flsub@b+3)^(0+128)
  6413  062D  084B               	movf	(__doprnt@fval+2)^(0+128),w
  6414  062E  00AC               	movwf	(___flsub@b+2)^(0+128)
  6415  062F  084A               	movf	(__doprnt@fval+1)^(0+128),w
  6416  0630  00AB               	movwf	(___flsub@b+1)^(0+128)
  6417  0631  0849               	movf	__doprnt@fval^(0+128),w
  6418  0632  00AA               	movwf	___flsub@b^(0+128)
  6419  0633  319F  270E  3182   	fcall	___flsub
  6420  0636  0021               	movlb	1	; select bank1
  6421  0637  0829               	movf	(?___flsub+3)^(0+128),w
  6422  0638  00CC               	movwf	(__doprnt@fval+3)^(0+128)
  6423  0639  0828               	movf	(?___flsub+2)^(0+128),w
  6424  063A  00CB               	movwf	(__doprnt@fval+2)^(0+128)
  6425  063B  0827               	movf	(?___flsub+1)^(0+128),w
  6426  063C  00CA               	movwf	(__doprnt@fval+1)^(0+128)
  6427  063D  0826               	movf	?___flsub^(0+128),w
  6428  063E  00C9               	movwf	__doprnt@fval^(0+128)
  6429                           
  6430                           ;doprnt.c: 1152: eexp = 0;
  6431  063F  01C3               	clrf	__doprnt@eexp^(0+128)
  6432  0640  01C4               	clrf	(__doprnt@eexp+1)^(0+128)
  6433  0641                     l4312:	
  6434                           
  6435                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  6436  0641  01CF               	clrf	__doprnt@c^(0+128)
  6437  0642  0ACF               	incf	__doprnt@c^(0+128),f
  6438  0643  300A               	movlw	10
  6439  0644  064F               	xorwf	__doprnt@c^(0+128),w
  6440  0645  1903               	btfsc	3,2
  6441  0646  2E74               	goto	l4324
  6442  0647                     l4318:	
  6443                           
  6444                           ;doprnt.c: 1156: if(val < dpowers[c])
  6445  0647  084F               	movf	__doprnt@c^(0+128),w
  6446  0648  00AE               	movwf	??__doprnt^(0+128)
  6447  0649  01AF               	clrf	(??__doprnt^(0+128)+1)
  6448  064A  35AE               	lslf	??__doprnt^(0+128),f
  6449  064B  0DAF               	rlf	(??__doprnt^(0+128)+1),f
  6450  064C  35AE               	lslf	??__doprnt^(0+128),f
  6451  064D  0DAF               	rlf	(??__doprnt^(0+128)+1),f
  6452  064E  3068               	movlw	low (_dpowers| (0+32768))
  6453  064F  072E               	addwf	??__doprnt^(0+128),w
  6454  0650  0084               	movwf	4
  6455  0651  3098               	movlw	high (_dpowers| (0+32768))
  6456  0652  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
  6457  0653  0085               	movwf	5
  6458  0654  3F00               	moviw [0]fsr0
  6459  0655  00B0               	movwf	(??__doprnt+2)^(0+128)
  6460  0656  3F01               	moviw [1]fsr0
  6461  0657  00B1               	movwf	((??__doprnt+2)^(0+128)+1)
  6462  0658  3F02               	moviw [2]fsr0
  6463  0659  00B2               	movwf	((??__doprnt+2)^(0+128)+2)
  6464  065A  3F03               	moviw [3]fsr0
  6465  065B  00B3               	movwf	((??__doprnt+2)^(0+128)+3)
  6466  065C  0833               	movf	(??__doprnt+5)^(0+128),w
  6467  065D  0242               	subwf	(__doprnt@val+3)^(0+128),w
  6468  065E  1D03               	skipz
  6469  065F  2E6A               	goto	u5655
  6470  0660  0832               	movf	(??__doprnt+4)^(0+128),w
  6471  0661  0241               	subwf	(__doprnt@val+2)^(0+128),w
  6472  0662  1D03               	skipz
  6473  0663  2E6A               	goto	u5655
  6474  0664  0831               	movf	(??__doprnt+3)^(0+128),w
  6475  0665  0240               	subwf	(__doprnt@val+1)^(0+128),w
  6476  0666  1D03               	skipz
  6477  0667  2E6A               	goto	u5655
  6478  0668  0830               	movf	(??__doprnt+2)^(0+128),w
  6479  0669  023F               	subwf	__doprnt@val^(0+128),w
  6480  066A                     u5655:	
  6481  066A  1C03               	btfss	3,0
  6482  066B  2E74               	goto	l4324
  6483  066C  3001               	movlw	1
  6484  066D  00AE               	movwf	??__doprnt^(0+128)
  6485  066E  082E               	movf	??__doprnt^(0+128),w
  6486  066F  07CF               	addwf	__doprnt@c^(0+128),f
  6487  0670  300A               	movlw	10
  6488  0671  064F               	xorwf	__doprnt@c^(0+128),w
  6489  0672  1D03               	btfss	3,2
  6490  0673  2E47               	goto	l4318
  6491  0674                     l4324:	
  6492                           
  6493                           ;doprnt.c: 1161: width -= prec + c + eexp;
  6494  0674  084F               	movf	__doprnt@c^(0+128),w
  6495  0675  073B               	addwf	__doprnt@prec^(0+128),w
  6496  0676  00AE               	movwf	??__doprnt^(0+128)
  6497  0677  083C               	movf	(__doprnt@prec+1)^(0+128),w
  6498  0678  1803               	skipnc
  6499  0679  0A3C               	incf	(__doprnt@prec+1)^(0+128),w
  6500  067A  00AF               	movwf	(??__doprnt^(0+128)+1)
  6501  067B  0843               	movf	__doprnt@eexp^(0+128),w
  6502  067C  072E               	addwf	??__doprnt^(0+128),w
  6503  067D  00B0               	movwf	(??__doprnt+2)^(0+128)
  6504  067E  0844               	movf	(__doprnt@eexp+1)^(0+128),w
  6505  067F  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
  6506  0680  00B1               	movwf	(??__doprnt+3)^(0+128)
  6507  0681  0830               	movf	(??__doprnt+2)^(0+128),w
  6508  0682  02CD               	subwf	__doprnt@width^(0+128),f
  6509  0683  0831               	movf	(??__doprnt+3)^(0+128),w
  6510  0684  3BCE               	subwfb	(__doprnt@width+1)^(0+128),f
  6511                           
  6512                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  6513  0685  083B               	movf	__doprnt@prec^(0+128),w
  6514  0686  043C               	iorwf	(__doprnt@prec+1)^(0+128),w
  6515  0687  1903               	btfsc	3,2
  6516  0688  2E8D               	goto	l4328
  6517                           
  6518                           ;doprnt.c: 1167: width--;
  6519  0689  30FF               	movlw	255
  6520  068A  07CD               	addwf	__doprnt@width^(0+128),f
  6521  068B  30FF               	movlw	255
  6522  068C  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  6523  068D                     l4328:	
  6524                           
  6525                           ;doprnt.c: 1168: if(flag & 0x03)
  6526  068D  3003               	movlw	3
  6527  068E  053D               	andwf	__doprnt@flag^(0+128),w
  6528  068F  00AE               	movwf	??__doprnt^(0+128)
  6529  0690  3000               	movlw	0
  6530  0691  053E               	andwf	(__doprnt@flag+1)^(0+128),w
  6531  0692  00AF               	movwf	(??__doprnt+1)^(0+128)
  6532  0693  082E               	movf	??__doprnt^(0+128),w
  6533  0694  042F               	iorwf	(??__doprnt^(0+128)+1),w
  6534  0695  1903               	btfsc	3,2
  6535  0696  2E9B               	goto	l4332
  6536                           
  6537                           ;doprnt.c: 1169: width--;
  6538  0697  30FF               	movlw	255
  6539  0698  07CD               	addwf	__doprnt@width^(0+128),f
  6540  0699  30FF               	movlw	255
  6541  069A  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  6542  069B                     l4332:	
  6543                           
  6544                           ;doprnt.c: 1172: if(flag & 0x04) {
  6545  069B  1D3D               	btfss	__doprnt@flag^(0+128),2
  6546  069C  2F32               	goto	l4366
  6547                           
  6548                           ;doprnt.c: 1176: if(flag & 0x03)
  6549  069D  3003               	movlw	3
  6550  069E  053D               	andwf	__doprnt@flag^(0+128),w
  6551  069F  00AE               	movwf	??__doprnt^(0+128)
  6552  06A0  3000               	movlw	0
  6553  06A1  053E               	andwf	(__doprnt@flag+1)^(0+128),w
  6554  06A2  00AF               	movwf	(??__doprnt+1)^(0+128)
  6555  06A3  082E               	movf	??__doprnt^(0+128),w
  6556  06A4  042F               	iorwf	(??__doprnt^(0+128)+1),w
  6557  06A5  1903               	btfsc	3,2
  6558  06A6  2ECD               	goto	l4354
  6559  06A7  0A50               	incf	__doprnt@pb^(0+128),w
  6560  06A8  0086               	movwf	6
  6561  06A9  0187               	clrf	7
  6562  06AA  0016               	moviw fsr1++
  6563  06AB  0401               	iorwf	1,w
  6564  06AC  1903               	btfsc	3,2
  6565  06AD  2EBB               	goto	l4340
  6566  06AE  302D               	movlw	45
  6567  06AF  00AE               	movwf	??__doprnt^(0+128)
  6568  06B0  082E               	movf	??__doprnt^(0+128),w
  6569  06B1  00F1               	movwf	putch@txData
  6570  06B2  0A50               	incf	__doprnt@pb^(0+128),w
  6571  06B3  0086               	movwf	6
  6572  06B4  0187               	clrf	7
  6573  06B5  3F41               	moviw [1]fsr1
  6574  06B6  008A               	movwf	10
  6575  06B7  3F40               	moviw [0]fsr1
  6576  06B8  000A               	callw
  6577  06B9  3182               	pagesel	$
  6578  06BA  2ECD               	goto	l4354
  6579  06BB                     l4340:	
  6580  06BB  302D               	movlw	45
  6581  06BC  00AE               	movwf	??__doprnt^(0+128)
  6582  06BD  0850               	movf	__doprnt@pb^(0+128),w
  6583  06BE  0086               	movwf	6
  6584  06BF  0187               	clrf	7
  6585  06C0  0801               	movf	1,w
  6586  06C1  0086               	movwf	6
  6587  06C2  3001               	movlw	1	; select bank2/3
  6588  06C3  0087               	movwf	7
  6589  06C4  082E               	movf	??__doprnt^(0+128),w
  6590  06C5  0081               	movwf	1
  6591  06C6  3001               	movlw	1
  6592  06C7  00AE               	movwf	??__doprnt^(0+128)
  6593  06C8  0850               	movf	__doprnt@pb^(0+128),w
  6594  06C9  0086               	movwf	6
  6595  06CA  0187               	clrf	7
  6596  06CB  082E               	movf	??__doprnt^(0+128),w
  6597  06CC  0781               	addwf	1,f
  6598  06CD                     l4354:	
  6599  06CD  0021               	movlb	1	; select bank1
  6600  06CE  084E               	movf	(__doprnt@width+1)^(0+128),w
  6601  06CF  3A80               	xorlw	128
  6602  06D0  00AE               	movwf	??__doprnt^(0+128)
  6603  06D1  3080               	movlw	128
  6604  06D2  022E               	subwf	??__doprnt^(0+128),w
  6605  06D3  1D03               	skipz
  6606  06D4  2ED7               	goto	u5735
  6607  06D5  3001               	movlw	1
  6608  06D6  024D               	subwf	__doprnt@width^(0+128),w
  6609  06D7                     u5735:	
  6610  06D7  1C03               	btfss	3,0
  6611  06D8  2F6E               	goto	l4388
  6612  06D9  0021               	movlb	1	; select bank1
  6613  06DA  0A50               	incf	__doprnt@pb^(0+128),w
  6614  06DB  0086               	movwf	6
  6615  06DC  0187               	clrf	7
  6616  06DD  0016               	moviw fsr1++
  6617  06DE  0401               	iorwf	1,w
  6618  06DF  1903               	btfsc	3,2
  6619  06E0  2EEE               	goto	l4348
  6620  06E1  3030               	movlw	48
  6621  06E2  00AE               	movwf	??__doprnt^(0+128)
  6622  06E3  082E               	movf	??__doprnt^(0+128),w
  6623  06E4  00F1               	movwf	putch@txData
  6624  06E5  0A50               	incf	__doprnt@pb^(0+128),w
  6625  06E6  0086               	movwf	6
  6626  06E7  0187               	clrf	7
  6627  06E8  3F41               	moviw [1]fsr1
  6628  06E9  008A               	movwf	10
  6629  06EA  3F40               	moviw [0]fsr1
  6630  06EB  000A               	callw
  6631  06EC  3182               	pagesel	$
  6632  06ED  2F00               	goto	l4352
  6633  06EE                     l4348:	
  6634  06EE  3030               	movlw	48
  6635  06EF  00AE               	movwf	??__doprnt^(0+128)
  6636  06F0  0850               	movf	__doprnt@pb^(0+128),w
  6637  06F1  0086               	movwf	6
  6638  06F2  0187               	clrf	7
  6639  06F3  0801               	movf	1,w
  6640  06F4  0086               	movwf	6
  6641  06F5  3001               	movlw	1	; select bank2/3
  6642  06F6  0087               	movwf	7
  6643  06F7  082E               	movf	??__doprnt^(0+128),w
  6644  06F8  0081               	movwf	1
  6645  06F9  3001               	movlw	1
  6646  06FA  00AE               	movwf	??__doprnt^(0+128)
  6647  06FB  0850               	movf	__doprnt@pb^(0+128),w
  6648  06FC  0086               	movwf	6
  6649  06FD  0187               	clrf	7
  6650  06FE  082E               	movf	??__doprnt^(0+128),w
  6651  06FF  0781               	addwf	1,f
  6652  0700                     l4352:	
  6653                           
  6654                           ;doprnt.c: 1189: width--;
  6655  0700  30FF               	movlw	255
  6656  0701  0021               	movlb	1	; select bank1
  6657  0702  07CD               	addwf	__doprnt@width^(0+128),f
  6658  0703  30FF               	movlw	255
  6659  0704  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  6660  0705  2ECD               	goto	l4354
  6661  0706                     l4356:	
  6662  0706  0021               	movlb	1	; select bank1
  6663  0707  0A50               	incf	__doprnt@pb^(0+128),w
  6664  0708  0086               	movwf	6
  6665  0709  0187               	clrf	7
  6666  070A  0016               	moviw fsr1++
  6667  070B  0401               	iorwf	1,w
  6668  070C  1903               	btfsc	3,2
  6669  070D  2F1B               	goto	l4360
  6670  070E  3020               	movlw	32
  6671  070F  00AE               	movwf	??__doprnt^(0+128)
  6672  0710  082E               	movf	??__doprnt^(0+128),w
  6673  0711  00F1               	movwf	putch@txData
  6674  0712  0A50               	incf	__doprnt@pb^(0+128),w
  6675  0713  0086               	movwf	6
  6676  0714  0187               	clrf	7
  6677  0715  3F41               	moviw [1]fsr1
  6678  0716  008A               	movwf	10
  6679  0717  3F40               	moviw [0]fsr1
  6680  0718  000A               	callw
  6681  0719  3182               	pagesel	$
  6682  071A  2F2D               	goto	l4364
  6683  071B                     l4360:	
  6684  071B  3020               	movlw	32
  6685  071C  00AE               	movwf	??__doprnt^(0+128)
  6686  071D  0850               	movf	__doprnt@pb^(0+128),w
  6687  071E  0086               	movwf	6
  6688  071F  0187               	clrf	7
  6689  0720  0801               	movf	1,w
  6690  0721  0086               	movwf	6
  6691  0722  3001               	movlw	1	; select bank2/3
  6692  0723  0087               	movwf	7
  6693  0724  082E               	movf	??__doprnt^(0+128),w
  6694  0725  0081               	movwf	1
  6695  0726  3001               	movlw	1
  6696  0727  00AE               	movwf	??__doprnt^(0+128)
  6697  0728  0850               	movf	__doprnt@pb^(0+128),w
  6698  0729  0086               	movwf	6
  6699  072A  0187               	clrf	7
  6700  072B  082E               	movf	??__doprnt^(0+128),w
  6701  072C  0781               	addwf	1,f
  6702  072D                     l4364:	
  6703                           
  6704                           ;doprnt.c: 1201: width--;
  6705  072D  30FF               	movlw	255
  6706  072E  0021               	movlb	1	; select bank1
  6707  072F  07CD               	addwf	__doprnt@width^(0+128),f
  6708  0730  30FF               	movlw	255
  6709  0731  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
  6710  0732                     l4366:	
  6711  0732  084E               	movf	(__doprnt@width+1)^(0+128),w
  6712  0733  3A80               	xorlw	128
  6713  0734  00AE               	movwf	??__doprnt^(0+128)
  6714  0735  3080               	movlw	128
  6715  0736  022E               	subwf	??__doprnt^(0+128),w
  6716  0737  1D03               	skipz
  6717  0738  2F3B               	goto	u5755
  6718  0739  3001               	movlw	1
  6719  073A  024D               	subwf	__doprnt@width^(0+128),w
  6720  073B                     u5755:	
  6721  073B  1803               	skipnc
  6722  073C  2F06               	goto	l4356
  6723                           
  6724                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  6725  073D  3003               	movlw	3
  6726  073E  0021               	movlb	1	; select bank1
  6727  073F  053D               	andwf	__doprnt@flag^(0+128),w
  6728  0740  00AE               	movwf	??__doprnt^(0+128)
  6729  0741  3000               	movlw	0
  6730  0742  053E               	andwf	(__doprnt@flag+1)^(0+128),w
  6731  0743  00AF               	movwf	(??__doprnt+1)^(0+128)
  6732  0744  082E               	movf	??__doprnt^(0+128),w
  6733  0745  042F               	iorwf	(??__doprnt^(0+128)+1),w
  6734  0746  1903               	btfsc	3,2
  6735  0747  2F6E               	goto	l4388
  6736  0748  0A50               	incf	__doprnt@pb^(0+128),w
  6737  0749  0086               	movwf	6
  6738  074A  0187               	clrf	7
  6739  074B  0016               	moviw fsr1++
  6740  074C  0401               	iorwf	1,w
  6741  074D  1903               	btfsc	3,2
  6742  074E  2F5C               	goto	l4374
  6743  074F  302D               	movlw	45
  6744  0750  00AE               	movwf	??__doprnt^(0+128)
  6745  0751  082E               	movf	??__doprnt^(0+128),w
  6746  0752  00F1               	movwf	putch@txData
  6747  0753  0A50               	incf	__doprnt@pb^(0+128),w
  6748  0754  0086               	movwf	6
  6749  0755  0187               	clrf	7
  6750  0756  3F41               	moviw [1]fsr1
  6751  0757  008A               	movwf	10
  6752  0758  3F40               	moviw [0]fsr1
  6753  0759  000A               	callw
  6754  075A  3182               	pagesel	$
  6755  075B  2F6E               	goto	l4388
  6756  075C                     l4374:	
  6757  075C  302D               	movlw	45
  6758  075D                     L4:	
  6759  075D  00AE               	movwf	??__doprnt^(0+128)
  6760  075E  0850               	movf	__doprnt@pb^(0+128),w
  6761  075F  0086               	movwf	6
  6762  0760  0187               	clrf	7
  6763  0761  0801               	movf	1,w
  6764  0762  0086               	movwf	6
  6765  0763  3001               	movlw	1	; select bank2/3
  6766  0764  0087               	movwf	7
  6767  0765  082E               	movf	??__doprnt^(0+128),w
  6768  0766  0081               	movwf	1
  6769  0767  3001               	movlw	1
  6770  0768  00AE               	movwf	??__doprnt^(0+128)
  6771  0769  0850               	movf	__doprnt@pb^(0+128),w
  6772  076A  0086               	movwf	6
  6773  076B  0187               	clrf	7
  6774  076C  082E               	movf	??__doprnt^(0+128),w
  6775  076D  0781               	addwf	1,f
  6776  076E                     l4388:	
  6777  076E  3001               	movlw	1
  6778  076F  0021               	movlb	1	; select bank1
  6779  0770  02CF               	subwf	__doprnt@c^(0+128),f
  6780  0771  0A4F               	incf	__doprnt@c^(0+128),w
  6781  0772  318C  1903         	btfsc	3,2
  6782  0774  2CB0               	goto	l4400
  6783                           
  6784                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  6785  0775  084F               	movf	__doprnt@c^(0+128),w
  6786  0776  00AE               	movwf	??__doprnt^(0+128)
  6787  0777  01AF               	clrf	(??__doprnt^(0+128)+1)
  6788  0778  35AE               	lslf	??__doprnt^(0+128),f
  6789  0779  0DAF               	rlf	(??__doprnt^(0+128)+1),f
  6790  077A  35AE               	lslf	??__doprnt^(0+128),f
  6791  077B  0DAF               	rlf	(??__doprnt^(0+128)+1),f
  6792  077C  3068               	movlw	low (_dpowers| (0+32768))
  6793  077D  072E               	addwf	??__doprnt^(0+128),w
  6794  077E  0084               	movwf	4
  6795  077F  3098               	movlw	high (_dpowers| (0+32768))
  6796  0780  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
  6797  0781  0085               	movwf	5
  6798  0782  3F00               	moviw [0]fsr0
  6799  0783  00F0               	movwf	___lldiv@divisor
  6800  0784  3F01               	moviw [1]fsr0
  6801  0785  00F1               	movwf	___lldiv@divisor+1
  6802  0786  3F02               	moviw [2]fsr0
  6803  0787  00F2               	movwf	___lldiv@divisor+2
  6804  0788  3F03               	moviw [3]fsr0
  6805  0789  00F3               	movwf	___lldiv@divisor+3
  6806  078A  0842               	movf	(__doprnt@val+3)^(0+128),w
  6807  078B  00F7               	movwf	___lldiv@dividend+3
  6808  078C  0841               	movf	(__doprnt@val+2)^(0+128),w
  6809  078D  00F6               	movwf	___lldiv@dividend+2
  6810  078E  0840               	movf	(__doprnt@val+1)^(0+128),w
  6811  078F  00F5               	movwf	___lldiv@dividend+1
  6812  0790  083F               	movf	__doprnt@val^(0+128),w
  6813  0791  00F4               	movwf	___lldiv@dividend
  6814  0792  3190  206E  3182   	fcall	___lldiv
  6815  0795  0873               	movf	?___lldiv+3,w
  6816  0796  0021               	movlb	1	; select bank1
  6817  0797  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
  6818  0798  0872               	movf	?___lldiv+2,w
  6819  0799  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
  6820  079A  0871               	movf	?___lldiv+1,w
  6821  079B  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
  6822  079C  0870               	movf	?___lldiv,w
  6823  079D  00C5               	movwf	__doprnt@tmpval^(0+128)
  6824                           
  6825                           ;doprnt.c: 1221: tmpval.vd %= 10;
  6826  079E  3000               	movlw	0
  6827  079F  0020               	movlb	0	; select bank0
  6828  07A0  00A3               	movwf	___llmod@divisor+3
  6829  07A1  3000               	movlw	0
  6830  07A2  00A2               	movwf	___llmod@divisor+2
  6831  07A3  3000               	movlw	0
  6832  07A4  00A1               	movwf	___llmod@divisor+1
  6833  07A5  300A               	movlw	10
  6834  07A6  00A0               	movwf	___llmod@divisor
  6835  07A7  0021               	movlb	1	; select bank1
  6836  07A8  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
  6837  07A9  0020               	movlb	0	; select bank0
  6838  07AA  00A7               	movwf	___llmod@dividend+3
  6839  07AB  0021               	movlb	1	; select bank1
  6840  07AC  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
  6841  07AD  0020               	movlb	0	; select bank0
  6842  07AE  00A6               	movwf	___llmod@dividend+2
  6843  07AF  0021               	movlb	1	; select bank1
  6844  07B0  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
  6845  07B1  0020               	movlb	0	; select bank0
  6846  07B2  00A5               	movwf	___llmod@dividend+1
  6847  07B3  0021               	movlb	1	; select bank1
  6848  07B4  0845               	movf	__doprnt@tmpval^(0+128),w
  6849  07B5  0020               	movlb	0	; select bank0
  6850  07B6  00A4               	movwf	___llmod@dividend
  6851  07B7  319F  27BD  3182   	fcall	___llmod
  6852  07BA  0020               	movlb	0	; select bank0
  6853  07BB  0823               	movf	?___llmod+3,w
  6854  07BC  0021               	movlb	1	; select bank1
  6855  07BD  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
  6856  07BE  0020               	movlb	0	; select bank0
  6857  07BF  0822               	movf	?___llmod+2,w
  6858  07C0  0021               	movlb	1	; select bank1
  6859  07C1  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
  6860  07C2  0020               	movlb	0	; select bank0
  6861  07C3  0821               	movf	?___llmod+1,w
  6862  07C4  0021               	movlb	1	; select bank1
  6863  07C5  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
  6864  07C6  0020               	movlb	0	; select bank0
  6865  07C7  0820               	movf	?___llmod,w
  6866  07C8  0021               	movlb	1	; select bank1
  6867  07C9  00C5               	movwf	__doprnt@tmpval^(0+128)
  6868  07CA  0A50               	incf	__doprnt@pb^(0+128),w
  6869  07CB  0086               	movwf	6
  6870  07CC  0187               	clrf	7
  6871  07CD  0016               	moviw fsr1++
  6872  07CE  0401               	iorwf	1,w
  6873  07CF  1903               	btfsc	3,2
  6874  07D0  2FDF               	goto	l4386
  6875  07D1  0845               	movf	__doprnt@tmpval^(0+128),w
  6876  07D2  3E30               	addlw	48
  6877  07D3  00AE               	movwf	??__doprnt^(0+128)
  6878  07D4  082E               	movf	??__doprnt^(0+128),w
  6879  07D5  00F1               	movwf	putch@txData
  6880  07D6  0A50               	incf	__doprnt@pb^(0+128),w
  6881  07D7  0086               	movwf	6
  6882  07D8  0187               	clrf	7
  6883  07D9  3F41               	moviw [1]fsr1
  6884  07DA  008A               	movwf	10
  6885  07DB  3F40               	moviw [0]fsr1
  6886  07DC  000A               	callw
  6887  07DD  3182               	pagesel	$
  6888  07DE  2F6E               	goto	l4388
  6889  07DF                     l4386:	
  6890  07DF  0845               	movf	__doprnt@tmpval^(0+128),w
  6891  07E0  3E30               	addlw	48
  6892  07E1  2F5D               	goto	L4
  6893  07E2                     L12:	
  6894  07E2                     L11:	
  6895  07E2  318F  2FFA         	ljmp	l4538
  6896                           
  6897                           	psect	text5
  6898  004D                     __ptext5:	
  6899 ;; *************** function _scale *****************
  6900 ;; Defined at:
  6901 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  scl             1    wreg     char 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  scl             1   50[BANK0 ] char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  4   30[BANK0 ] char 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;Total ram usage:       21 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    2
  6922 ;; This function calls:
  6923 ;;		___awdiv
  6924 ;;		___awmod
  6925 ;;		___flmul
  6926 ;; This function is called by:
  6927 ;;		__doprnt
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _scale
  6933  004D                     _scale:	
  6934                           
  6935                           ;incstack = 0
  6936                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6937                           ;scale@scl stored from wreg
  6938  004D  0020               	movlb	0	; select bank0
  6939  004E  00D2               	movwf	scale@scl
  6940                           
  6941                           ;doprnt.c: 436: if(scl < 0) {
  6942  004F  1FD2               	btfss	scale@scl,7
  6943  0050  2987               	goto	l3846
  6944                           
  6945                           ;doprnt.c: 437: scl = -scl;
  6946  0051  09D2               	comf	scale@scl,f
  6947  0052  0AD2               	incf	scale@scl,f
  6948                           
  6949                           ;doprnt.c: 438: if(scl>=110)
  6950  0053  0852               	movf	scale@scl,w
  6951  0054  3A80               	xorlw	128
  6952  0055  3E12               	addlw	-238
  6953  0056  1C03               	skipc
  6954  0057  2903               	goto	l3836
  6955                           
  6956                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6957  0058  300A               	movlw	10
  6958  0059  00F7               	movwf	___awdiv@divisor
  6959  005A  3000               	movlw	0
  6960  005B  00F8               	movwf	___awdiv@divisor+1
  6961  005C  0852               	movf	scale@scl,w
  6962  005D  00F2               	movwf	___awmod@dividend
  6963  005E  01F3               	clrf	___awmod@dividend+1
  6964  005F  1BF2               	btfsc	___awmod@dividend,7
  6965  0060  03F3               	decf	___awmod@dividend+1,f
  6966  0061  3064               	movlw	100
  6967  0062  00F0               	movwf	___awmod@divisor
  6968  0063  3000               	movlw	0
  6969  0064  00F1               	movwf	___awmod@divisor+1
  6970  0065  3190  2029  3180   	fcall	___awmod
  6971  0068  0871               	movf	?___awmod+1,w
  6972  0069  00FA               	movwf	___awdiv@dividend+1
  6973  006A  0870               	movf	?___awmod,w
  6974  006B  00F9               	movwf	___awdiv@dividend
  6975  006C  3190  20C0  3180   	fcall	___awdiv
  6976  006F  0877               	movf	?___awdiv,w
  6977  0070  3E09               	addlw	9
  6978  0071  0020               	movlb	0	; select bank0
  6979  0072  00C2               	movwf	??_scale
  6980  0073  01C3               	clrf	??_scale+1
  6981  0074  35C2               	lslf	??_scale,f
  6982  0075  0DC3               	rlf	??_scale+1,f
  6983  0076  35C2               	lslf	??_scale,f
  6984  0077  0DC3               	rlf	??_scale+1,f
  6985  0078  3034               	movlw	low (__npowers_| (0+32768))
  6986  0079  0742               	addwf	??_scale,w
  6987  007A  0084               	movwf	4
  6988  007B  3098               	movlw	high (__npowers_| (0+32768))
  6989  007C  3D43               	addwfc	??_scale+1,w
  6990  007D  0085               	movwf	5
  6991  007E  3F00               	moviw [0]fsr0
  6992  007F  00C4               	movwf	??_scale+2
  6993  0080  3F01               	moviw [1]fsr0
  6994  0081  00C5               	movwf	??_scale+3
  6995  0082  3F02               	moviw [2]fsr0
  6996  0083  00C6               	movwf	??_scale+4
  6997  0084  3F03               	moviw [3]fsr0
  6998  0085  00C7               	movwf	??_scale+5
  6999  0086  0847               	movf	??_scale+5,w
  7000  0087  00A7               	movwf	___flmul@b+3
  7001  0088  0846               	movf	??_scale+4,w
  7002  0089  00A6               	movwf	___flmul@b+2
  7003  008A  0845               	movf	??_scale+3,w
  7004  008B  00A5               	movwf	___flmul@b+1
  7005  008C  0844               	movf	??_scale+2,w
  7006  008D  00A4               	movwf	___flmul@b
  7007  008E  3064               	movlw	100
  7008  008F  00F7               	movwf	___awdiv@divisor
  7009  0090  3000               	movlw	0
  7010  0091  00F8               	movwf	___awdiv@divisor+1
  7011  0092  0852               	movf	scale@scl,w
  7012  0093  00F9               	movwf	___awdiv@dividend
  7013  0094  01FA               	clrf	___awdiv@dividend+1
  7014  0095  1BF9               	btfsc	___awdiv@dividend,7
  7015  0096  03FA               	decf	___awdiv@dividend+1,f
  7016  0097  3190  20C0  3180   	fcall	___awdiv
  7017  009A  0877               	movf	?___awdiv,w
  7018  009B  3E12               	addlw	18
  7019  009C  0020               	movlb	0	; select bank0
  7020  009D  00C8               	movwf	??_scale+6
  7021  009E  01C9               	clrf	??_scale+7
  7022  009F  35C8               	lslf	??_scale+6,f
  7023  00A0  0DC9               	rlf	??_scale+7,f
  7024  00A1  35C8               	lslf	??_scale+6,f
  7025  00A2  0DC9               	rlf	??_scale+7,f
  7026  00A3  3034               	movlw	low (__npowers_| (0+32768))
  7027  00A4  0748               	addwf	??_scale+6,w
  7028  00A5  0084               	movwf	4
  7029  00A6  3098               	movlw	high (__npowers_| (0+32768))
  7030  00A7  3D49               	addwfc	??_scale+7,w
  7031  00A8  0085               	movwf	5
  7032  00A9  3F00               	moviw [0]fsr0
  7033  00AA  00CA               	movwf	??_scale+8
  7034  00AB  3F01               	moviw [1]fsr0
  7035  00AC  00CB               	movwf	??_scale+9
  7036  00AD  3F02               	moviw [2]fsr0
  7037  00AE  00CC               	movwf	??_scale+10
  7038  00AF  3F03               	moviw [3]fsr0
  7039  00B0  00CD               	movwf	??_scale+11
  7040  00B1  084D               	movf	??_scale+11,w
  7041  00B2  00AB               	movwf	___flmul@a+3
  7042  00B3  084C               	movf	??_scale+10,w
  7043  00B4  00AA               	movwf	___flmul@a+2
  7044  00B5  084B               	movf	??_scale+9,w
  7045  00B6  00A9               	movwf	___flmul@a+1
  7046  00B7  084A               	movf	??_scale+8,w
  7047  00B8  00A8               	movwf	___flmul@a
  7048  00B9  318A  2258  3180   	fcall	___flmul
  7049  00BC  0020               	movlb	0	; select bank0
  7050  00BD  0827               	movf	?___flmul+3,w
  7051  00BE  00D1               	movwf	_scale$1424+3
  7052  00BF  0826               	movf	?___flmul+2,w
  7053  00C0  00D0               	movwf	_scale$1424+2
  7054  00C1  0825               	movf	?___flmul+1,w
  7055  00C2  00CF               	movwf	_scale$1424+1
  7056  00C3  0824               	movf	?___flmul,w
  7057  00C4  00CE               	movwf	_scale$1424
  7058                           
  7059                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7060  00C5  300A               	movlw	10
  7061  00C6  00F0               	movwf	___awmod@divisor
  7062  00C7  3000               	movlw	0
  7063  00C8  00F1               	movwf	___awmod@divisor+1
  7064  00C9  0852               	movf	scale@scl,w
  7065  00CA  00F2               	movwf	___awmod@dividend
  7066  00CB  01F3               	clrf	___awmod@dividend+1
  7067  00CC  1BF2               	btfsc	___awmod@dividend,7
  7068  00CD  03F3               	decf	___awmod@dividend+1,f
  7069  00CE  3190  2029  3180   	fcall	___awmod
  7070  00D1  0870               	movf	?___awmod,w
  7071  00D2  0020               	movlb	0	; select bank0
  7072  00D3  00C2               	movwf	??_scale
  7073  00D4  01C3               	clrf	??_scale+1
  7074  00D5  35C2               	lslf	??_scale,f
  7075  00D6  0DC3               	rlf	??_scale+1,f
  7076  00D7  35C2               	lslf	??_scale,f
  7077  00D8  0DC3               	rlf	??_scale+1,f
  7078  00D9  3034               	movlw	low (__npowers_| (0+32768))
  7079  00DA  0742               	addwf	??_scale,w
  7080  00DB  0084               	movwf	4
  7081  00DC  3098               	movlw	high (__npowers_| (0+32768))
  7082  00DD  3D43               	addwfc	??_scale+1,w
  7083  00DE  0085               	movwf	5
  7084  00DF  3F00               	moviw [0]fsr0
  7085  00E0  00C4               	movwf	??_scale+2
  7086  00E1  3F01               	moviw [1]fsr0
  7087  00E2  00C5               	movwf	??_scale+3
  7088  00E3  3F02               	moviw [2]fsr0
  7089  00E4  00C6               	movwf	??_scale+4
  7090  00E5  3F03               	moviw [3]fsr0
  7091  00E6  00C7               	movwf	??_scale+5
  7092  00E7  0847               	movf	??_scale+5,w
  7093  00E8  00A7               	movwf	___flmul@b+3
  7094  00E9  0846               	movf	??_scale+4,w
  7095  00EA  00A6               	movwf	___flmul@b+2
  7096  00EB  0845               	movf	??_scale+3,w
  7097  00EC  00A5               	movwf	___flmul@b+1
  7098  00ED  0844               	movf	??_scale+2,w
  7099  00EE  00A4               	movwf	___flmul@b
  7100  00EF  0851               	movf	_scale$1424+3,w
  7101  00F0  00AB               	movwf	___flmul@a+3
  7102  00F1  0850               	movf	_scale$1424+2,w
  7103  00F2  00AA               	movwf	___flmul@a+2
  7104  00F3  084F               	movf	_scale$1424+1,w
  7105  00F4  00A9               	movwf	___flmul@a+1
  7106  00F5  084E               	movf	_scale$1424,w
  7107  00F6  00A8               	movwf	___flmul@a
  7108  00F7  318A  2258         	fcall	___flmul
  7109  00F9  0020               	movlb	0	; select bank0
  7110  00FA  0827               	movf	?___flmul+3,w
  7111  00FB  00C1               	movwf	?_scale+3
  7112  00FC  0826               	movf	?___flmul+2,w
  7113  00FD  00C0               	movwf	?_scale+2
  7114  00FE  0825               	movf	?___flmul+1,w
  7115  00FF  00BF               	movwf	?_scale+1
  7116  0100  0824               	movf	?___flmul,w
  7117  0101  00BE               	movwf	?_scale
  7118  0102  0008               	return
  7119  0103                     l3836:	
  7120                           
  7121                           ;doprnt.c: 440: else if(scl > 10)
  7122  0103  0852               	movf	scale@scl,w
  7123  0104  3A80               	xorlw	128
  7124  0105  3E75               	addlw	-139
  7125  0106  1C03               	skipc
  7126  0107  2969               	goto	l3842
  7127                           
  7128                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  7129  0108  300A               	movlw	10
  7130  0109  00F0               	movwf	___awmod@divisor
  7131  010A  3000               	movlw	0
  7132  010B  00F1               	movwf	___awmod@divisor+1
  7133  010C  0852               	movf	scale@scl,w
  7134  010D  00F2               	movwf	___awmod@dividend
  7135  010E  01F3               	clrf	___awmod@dividend+1
  7136  010F  1BF2               	btfsc	___awmod@dividend,7
  7137  0110  03F3               	decf	___awmod@dividend+1,f
  7138  0111  3190  2029  3180   	fcall	___awmod
  7139  0114  0870               	movf	?___awmod,w
  7140  0115  0020               	movlb	0	; select bank0
  7141  0116  00C2               	movwf	??_scale
  7142  0117  01C3               	clrf	??_scale+1
  7143  0118  35C2               	lslf	??_scale,f
  7144  0119  0DC3               	rlf	??_scale+1,f
  7145  011A  35C2               	lslf	??_scale,f
  7146  011B  0DC3               	rlf	??_scale+1,f
  7147  011C  3034               	movlw	low (__npowers_| (0+32768))
  7148  011D  0742               	addwf	??_scale,w
  7149  011E  0084               	movwf	4
  7150  011F  3098               	movlw	high (__npowers_| (0+32768))
  7151  0120  3D43               	addwfc	??_scale+1,w
  7152  0121  0085               	movwf	5
  7153  0122  3F00               	moviw [0]fsr0
  7154  0123  00C4               	movwf	??_scale+2
  7155  0124  3F01               	moviw [1]fsr0
  7156  0125  00C5               	movwf	??_scale+3
  7157  0126  3F02               	moviw [2]fsr0
  7158  0127  00C6               	movwf	??_scale+4
  7159  0128  3F03               	moviw [3]fsr0
  7160  0129  00C7               	movwf	??_scale+5
  7161  012A  0847               	movf	??_scale+5,w
  7162  012B  00A7               	movwf	___flmul@b+3
  7163  012C  0846               	movf	??_scale+4,w
  7164  012D  00A6               	movwf	___flmul@b+2
  7165  012E  0845               	movf	??_scale+3,w
  7166  012F  00A5               	movwf	___flmul@b+1
  7167  0130  0844               	movf	??_scale+2,w
  7168  0131  00A4               	movwf	___flmul@b
  7169  0132  300A               	movlw	10
  7170  0133  00F7               	movwf	___awdiv@divisor
  7171  0134  3000               	movlw	0
  7172  0135  00F8               	movwf	___awdiv@divisor+1
  7173  0136  0852               	movf	scale@scl,w
  7174  0137  00F9               	movwf	___awdiv@dividend
  7175  0138  01FA               	clrf	___awdiv@dividend+1
  7176  0139  1BF9               	btfsc	___awdiv@dividend,7
  7177  013A  03FA               	decf	___awdiv@dividend+1,f
  7178  013B  3190  20C0  3180   	fcall	___awdiv
  7179  013E  0877               	movf	?___awdiv,w
  7180  013F  3E09               	addlw	9
  7181  0140  0020               	movlb	0	; select bank0
  7182  0141  00C8               	movwf	??_scale+6
  7183  0142  01C9               	clrf	??_scale+7
  7184  0143  35C8               	lslf	??_scale+6,f
  7185  0144  0DC9               	rlf	??_scale+7,f
  7186  0145  35C8               	lslf	??_scale+6,f
  7187  0146  0DC9               	rlf	??_scale+7,f
  7188  0147  3034               	movlw	low (__npowers_| (0+32768))
  7189  0148  0748               	addwf	??_scale+6,w
  7190  0149  0084               	movwf	4
  7191  014A  3098               	movlw	high (__npowers_| (0+32768))
  7192  014B  3D49               	addwfc	??_scale+7,w
  7193  014C  0085               	movwf	5
  7194  014D  3F00               	moviw [0]fsr0
  7195  014E  00CA               	movwf	??_scale+8
  7196  014F  3F01               	moviw [1]fsr0
  7197  0150  00CB               	movwf	??_scale+9
  7198  0151  3F02               	moviw [2]fsr0
  7199  0152  00CC               	movwf	??_scale+10
  7200  0153  3F03               	moviw [3]fsr0
  7201  0154  00CD               	movwf	??_scale+11
  7202  0155  084D               	movf	??_scale+11,w
  7203  0156  00AB               	movwf	___flmul@a+3
  7204  0157  084C               	movf	??_scale+10,w
  7205  0158  00AA               	movwf	___flmul@a+2
  7206  0159  084B               	movf	??_scale+9,w
  7207  015A  00A9               	movwf	___flmul@a+1
  7208  015B  084A               	movf	??_scale+8,w
  7209  015C  00A8               	movwf	___flmul@a
  7210  015D  318A  2258         	fcall	___flmul
  7211  015F  0020               	movlb	0	; select bank0
  7212  0160  0827               	movf	?___flmul+3,w
  7213  0161  00C1               	movwf	?_scale+3
  7214  0162  0826               	movf	?___flmul+2,w
  7215  0163  00C0               	movwf	?_scale+2
  7216  0164  0825               	movf	?___flmul+1,w
  7217  0165  00BF               	movwf	?_scale+1
  7218  0166  0824               	movf	?___flmul,w
  7219  0167  00BE               	movwf	?_scale
  7220  0168  0008               	return
  7221  0169                     l3842:	
  7222                           
  7223                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  7224  0169  0852               	movf	scale@scl,w
  7225  016A  00C2               	movwf	??_scale
  7226  016B  01C3               	clrf	??_scale+1
  7227  016C  35C2               	lslf	??_scale,f
  7228  016D  0DC3               	rlf	??_scale+1,f
  7229  016E  35C2               	lslf	??_scale,f
  7230  016F  0DC3               	rlf	??_scale+1,f
  7231  0170  3034               	movlw	low (__npowers_| (0+32768))
  7232  0171  0742               	addwf	??_scale,w
  7233  0172  0084               	movwf	4
  7234  0173  3098               	movlw	high (__npowers_| (0+32768))
  7235  0174  3D43               	addwfc	??_scale+1,w
  7236  0175  0085               	movwf	5
  7237  0176  3F00               	moviw [0]fsr0
  7238  0177  00C4               	movwf	??_scale+2
  7239  0178  3F01               	moviw [1]fsr0
  7240  0179  00C5               	movwf	??_scale+3
  7241  017A  3F02               	moviw [2]fsr0
  7242  017B  00C6               	movwf	??_scale+4
  7243  017C  3F03               	moviw [3]fsr0
  7244  017D  00C7               	movwf	??_scale+5
  7245  017E  0847               	movf	??_scale+5,w
  7246  017F  00C1               	movwf	?_scale+3
  7247  0180  0846               	movf	??_scale+4,w
  7248  0181  00C0               	movwf	?_scale+2
  7249  0182  0845               	movf	??_scale+3,w
  7250  0183  00BF               	movwf	?_scale+1
  7251  0184  0844               	movf	??_scale+2,w
  7252  0185  00BE               	movwf	?_scale
  7253  0186  0008               	return
  7254  0187                     l3846:	
  7255                           
  7256                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  7257  0187  0852               	movf	scale@scl,w
  7258  0188  3A80               	xorlw	128
  7259  0189  3E12               	addlw	-238
  7260  018A  1C03               	skipc
  7261  018B  2A37               	goto	l3854
  7262                           
  7263                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7264  018C  300A               	movlw	10
  7265  018D  00F7               	movwf	___awdiv@divisor
  7266  018E  3000               	movlw	0
  7267  018F  00F8               	movwf	___awdiv@divisor+1
  7268  0190  0852               	movf	scale@scl,w
  7269  0191  00F2               	movwf	___awmod@dividend
  7270  0192  01F3               	clrf	___awmod@dividend+1
  7271  0193  1BF2               	btfsc	___awmod@dividend,7
  7272  0194  03F3               	decf	___awmod@dividend+1,f
  7273  0195  3064               	movlw	100
  7274  0196  00F0               	movwf	___awmod@divisor
  7275  0197  3000               	movlw	0
  7276  0198  00F1               	movwf	___awmod@divisor+1
  7277  0199  3190  2029  3180   	fcall	___awmod
  7278  019C  0871               	movf	?___awmod+1,w
  7279  019D  00FA               	movwf	___awdiv@dividend+1
  7280  019E  0870               	movf	?___awmod,w
  7281  019F  00F9               	movwf	___awdiv@dividend
  7282  01A0  3190  20C0  3180   	fcall	___awdiv
  7283  01A3  0877               	movf	?___awdiv,w
  7284  01A4  3E09               	addlw	9
  7285  01A5  0020               	movlb	0	; select bank0
  7286  01A6  00C2               	movwf	??_scale
  7287  01A7  01C3               	clrf	??_scale+1
  7288  01A8  35C2               	lslf	??_scale,f
  7289  01A9  0DC3               	rlf	??_scale+1,f
  7290  01AA  35C2               	lslf	??_scale,f
  7291  01AB  0DC3               	rlf	??_scale+1,f
  7292  01AC  3000               	movlw	low (__powers_| (0+32768))
  7293  01AD  0742               	addwf	??_scale,w
  7294  01AE  0084               	movwf	4
  7295  01AF  3098               	movlw	high (__powers_| (0+32768))
  7296  01B0  3D43               	addwfc	??_scale+1,w
  7297  01B1  0085               	movwf	5
  7298  01B2  3F00               	moviw [0]fsr0
  7299  01B3  00C4               	movwf	??_scale+2
  7300  01B4  3F01               	moviw [1]fsr0
  7301  01B5  00C5               	movwf	??_scale+3
  7302  01B6  3F02               	moviw [2]fsr0
  7303  01B7  00C6               	movwf	??_scale+4
  7304  01B8  3F03               	moviw [3]fsr0
  7305  01B9  00C7               	movwf	??_scale+5
  7306  01BA  0847               	movf	??_scale+5,w
  7307  01BB  00A7               	movwf	___flmul@b+3
  7308  01BC  0846               	movf	??_scale+4,w
  7309  01BD  00A6               	movwf	___flmul@b+2
  7310  01BE  0845               	movf	??_scale+3,w
  7311  01BF  00A5               	movwf	___flmul@b+1
  7312  01C0  0844               	movf	??_scale+2,w
  7313  01C1  00A4               	movwf	___flmul@b
  7314  01C2  3064               	movlw	100
  7315  01C3  00F7               	movwf	___awdiv@divisor
  7316  01C4  3000               	movlw	0
  7317  01C5  00F8               	movwf	___awdiv@divisor+1
  7318  01C6  0852               	movf	scale@scl,w
  7319  01C7  00F9               	movwf	___awdiv@dividend
  7320  01C8  01FA               	clrf	___awdiv@dividend+1
  7321  01C9  1BF9               	btfsc	___awdiv@dividend,7
  7322  01CA  03FA               	decf	___awdiv@dividend+1,f
  7323  01CB  3190  20C0  3180   	fcall	___awdiv
  7324  01CE  0877               	movf	?___awdiv,w
  7325  01CF  3E12               	addlw	18
  7326  01D0  0020               	movlb	0	; select bank0
  7327  01D1  00C8               	movwf	??_scale+6
  7328  01D2  01C9               	clrf	??_scale+7
  7329  01D3  35C8               	lslf	??_scale+6,f
  7330  01D4  0DC9               	rlf	??_scale+7,f
  7331  01D5  35C8               	lslf	??_scale+6,f
  7332  01D6  0DC9               	rlf	??_scale+7,f
  7333  01D7  3000               	movlw	low (__powers_| (0+32768))
  7334  01D8  0748               	addwf	??_scale+6,w
  7335  01D9  0084               	movwf	4
  7336  01DA  3098               	movlw	high (__powers_| (0+32768))
  7337  01DB  3D49               	addwfc	??_scale+7,w
  7338  01DC  0085               	movwf	5
  7339  01DD  3F00               	moviw [0]fsr0
  7340  01DE  00CA               	movwf	??_scale+8
  7341  01DF  3F01               	moviw [1]fsr0
  7342  01E0  00CB               	movwf	??_scale+9
  7343  01E1  3F02               	moviw [2]fsr0
  7344  01E2  00CC               	movwf	??_scale+10
  7345  01E3  3F03               	moviw [3]fsr0
  7346  01E4  00CD               	movwf	??_scale+11
  7347  01E5  084D               	movf	??_scale+11,w
  7348  01E6  00AB               	movwf	___flmul@a+3
  7349  01E7  084C               	movf	??_scale+10,w
  7350  01E8  00AA               	movwf	___flmul@a+2
  7351  01E9  084B               	movf	??_scale+9,w
  7352  01EA  00A9               	movwf	___flmul@a+1
  7353  01EB  084A               	movf	??_scale+8,w
  7354  01EC  00A8               	movwf	___flmul@a
  7355  01ED  318A  2258  3180   	fcall	___flmul
  7356  01F0  0020               	movlb	0	; select bank0
  7357  01F1  0827               	movf	?___flmul+3,w
  7358  01F2  00D1               	movwf	_scale$1424+3
  7359  01F3  0826               	movf	?___flmul+2,w
  7360  01F4  00D0               	movwf	_scale$1424+2
  7361  01F5  0825               	movf	?___flmul+1,w
  7362  01F6  00CF               	movwf	_scale$1424+1
  7363  01F7  0824               	movf	?___flmul,w
  7364  01F8  00CE               	movwf	_scale$1424
  7365                           
  7366                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7367  01F9  300A               	movlw	10
  7368  01FA  00F0               	movwf	___awmod@divisor
  7369  01FB  3000               	movlw	0
  7370  01FC  00F1               	movwf	___awmod@divisor+1
  7371  01FD  0852               	movf	scale@scl,w
  7372  01FE  00F2               	movwf	___awmod@dividend
  7373  01FF  01F3               	clrf	___awmod@dividend+1
  7374  0200  1BF2               	btfsc	___awmod@dividend,7
  7375  0201  03F3               	decf	___awmod@dividend+1,f
  7376  0202  3190  2029  3180   	fcall	___awmod
  7377  0205  0870               	movf	?___awmod,w
  7378  0206  0020               	movlb	0	; select bank0
  7379  0207  00C2               	movwf	??_scale
  7380  0208  01C3               	clrf	??_scale+1
  7381  0209  35C2               	lslf	??_scale,f
  7382  020A  0DC3               	rlf	??_scale+1,f
  7383  020B  35C2               	lslf	??_scale,f
  7384  020C  0DC3               	rlf	??_scale+1,f
  7385  020D  3000               	movlw	low (__powers_| (0+32768))
  7386  020E  0742               	addwf	??_scale,w
  7387  020F  0084               	movwf	4
  7388  0210  3098               	movlw	high (__powers_| (0+32768))
  7389  0211  3D43               	addwfc	??_scale+1,w
  7390  0212  0085               	movwf	5
  7391  0213  3F00               	moviw [0]fsr0
  7392  0214  00C4               	movwf	??_scale+2
  7393  0215  3F01               	moviw [1]fsr0
  7394  0216  00C5               	movwf	??_scale+3
  7395  0217  3F02               	moviw [2]fsr0
  7396  0218  00C6               	movwf	??_scale+4
  7397  0219  3F03               	moviw [3]fsr0
  7398  021A  00C7               	movwf	??_scale+5
  7399  021B  0847               	movf	??_scale+5,w
  7400  021C  00A7               	movwf	___flmul@b+3
  7401  021D  0846               	movf	??_scale+4,w
  7402  021E  00A6               	movwf	___flmul@b+2
  7403  021F  0845               	movf	??_scale+3,w
  7404  0220  00A5               	movwf	___flmul@b+1
  7405  0221  0844               	movf	??_scale+2,w
  7406  0222  00A4               	movwf	___flmul@b
  7407  0223  0851               	movf	_scale$1424+3,w
  7408  0224  00AB               	movwf	___flmul@a+3
  7409  0225  0850               	movf	_scale$1424+2,w
  7410  0226  00AA               	movwf	___flmul@a+2
  7411  0227  084F               	movf	_scale$1424+1,w
  7412  0228  00A9               	movwf	___flmul@a+1
  7413  0229  084E               	movf	_scale$1424,w
  7414  022A  00A8               	movwf	___flmul@a
  7415  022B  318A  2258         	fcall	___flmul
  7416  022D  0020               	movlb	0	; select bank0
  7417  022E  0827               	movf	?___flmul+3,w
  7418  022F  00C1               	movwf	?_scale+3
  7419  0230  0826               	movf	?___flmul+2,w
  7420  0231  00C0               	movwf	?_scale+2
  7421  0232  0825               	movf	?___flmul+1,w
  7422  0233  00BF               	movwf	?_scale+1
  7423  0234  0824               	movf	?___flmul,w
  7424  0235  00BE               	movwf	?_scale
  7425  0236  0008               	return
  7426  0237                     l3854:	
  7427                           
  7428                           ;doprnt.c: 446: else if(scl > 10)
  7429  0237  0852               	movf	scale@scl,w
  7430  0238  3A80               	xorlw	128
  7431  0239  3E75               	addlw	-139
  7432  023A  1C03               	skipc
  7433  023B  2A9D               	goto	l3860
  7434                           
  7435                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  7436  023C  300A               	movlw	10
  7437  023D  00F0               	movwf	___awmod@divisor
  7438  023E  3000               	movlw	0
  7439  023F  00F1               	movwf	___awmod@divisor+1
  7440  0240  0852               	movf	scale@scl,w
  7441  0241  00F2               	movwf	___awmod@dividend
  7442  0242  01F3               	clrf	___awmod@dividend+1
  7443  0243  1BF2               	btfsc	___awmod@dividend,7
  7444  0244  03F3               	decf	___awmod@dividend+1,f
  7445  0245  3190  2029  3180   	fcall	___awmod
  7446  0248  0870               	movf	?___awmod,w
  7447  0249  0020               	movlb	0	; select bank0
  7448  024A  00C2               	movwf	??_scale
  7449  024B  01C3               	clrf	??_scale+1
  7450  024C  35C2               	lslf	??_scale,f
  7451  024D  0DC3               	rlf	??_scale+1,f
  7452  024E  35C2               	lslf	??_scale,f
  7453  024F  0DC3               	rlf	??_scale+1,f
  7454  0250  3000               	movlw	low (__powers_| (0+32768))
  7455  0251  0742               	addwf	??_scale,w
  7456  0252  0084               	movwf	4
  7457  0253  3098               	movlw	high (__powers_| (0+32768))
  7458  0254  3D43               	addwfc	??_scale+1,w
  7459  0255  0085               	movwf	5
  7460  0256  3F00               	moviw [0]fsr0
  7461  0257  00C4               	movwf	??_scale+2
  7462  0258  3F01               	moviw [1]fsr0
  7463  0259  00C5               	movwf	??_scale+3
  7464  025A  3F02               	moviw [2]fsr0
  7465  025B  00C6               	movwf	??_scale+4
  7466  025C  3F03               	moviw [3]fsr0
  7467  025D  00C7               	movwf	??_scale+5
  7468  025E  0847               	movf	??_scale+5,w
  7469  025F  00A7               	movwf	___flmul@b+3
  7470  0260  0846               	movf	??_scale+4,w
  7471  0261  00A6               	movwf	___flmul@b+2
  7472  0262  0845               	movf	??_scale+3,w
  7473  0263  00A5               	movwf	___flmul@b+1
  7474  0264  0844               	movf	??_scale+2,w
  7475  0265  00A4               	movwf	___flmul@b
  7476  0266  300A               	movlw	10
  7477  0267  00F7               	movwf	___awdiv@divisor
  7478  0268  3000               	movlw	0
  7479  0269  00F8               	movwf	___awdiv@divisor+1
  7480  026A  0852               	movf	scale@scl,w
  7481  026B  00F9               	movwf	___awdiv@dividend
  7482  026C  01FA               	clrf	___awdiv@dividend+1
  7483  026D  1BF9               	btfsc	___awdiv@dividend,7
  7484  026E  03FA               	decf	___awdiv@dividend+1,f
  7485  026F  3190  20C0  3180   	fcall	___awdiv
  7486  0272  0877               	movf	?___awdiv,w
  7487  0273  3E09               	addlw	9
  7488  0274  0020               	movlb	0	; select bank0
  7489  0275  00C8               	movwf	??_scale+6
  7490  0276  01C9               	clrf	??_scale+7
  7491  0277  35C8               	lslf	??_scale+6,f
  7492  0278  0DC9               	rlf	??_scale+7,f
  7493  0279  35C8               	lslf	??_scale+6,f
  7494  027A  0DC9               	rlf	??_scale+7,f
  7495  027B  3000               	movlw	low (__powers_| (0+32768))
  7496  027C  0748               	addwf	??_scale+6,w
  7497  027D  0084               	movwf	4
  7498  027E  3098               	movlw	high (__powers_| (0+32768))
  7499  027F  3D49               	addwfc	??_scale+7,w
  7500  0280  0085               	movwf	5
  7501  0281  3F00               	moviw [0]fsr0
  7502  0282  00CA               	movwf	??_scale+8
  7503  0283  3F01               	moviw [1]fsr0
  7504  0284  00CB               	movwf	??_scale+9
  7505  0285  3F02               	moviw [2]fsr0
  7506  0286  00CC               	movwf	??_scale+10
  7507  0287  3F03               	moviw [3]fsr0
  7508  0288  00CD               	movwf	??_scale+11
  7509  0289  084D               	movf	??_scale+11,w
  7510  028A  00AB               	movwf	___flmul@a+3
  7511  028B  084C               	movf	??_scale+10,w
  7512  028C  00AA               	movwf	___flmul@a+2
  7513  028D  084B               	movf	??_scale+9,w
  7514  028E  00A9               	movwf	___flmul@a+1
  7515  028F  084A               	movf	??_scale+8,w
  7516  0290  00A8               	movwf	___flmul@a
  7517  0291  318A  2258         	fcall	___flmul
  7518  0293  0020               	movlb	0	; select bank0
  7519  0294  0827               	movf	?___flmul+3,w
  7520  0295  00C1               	movwf	?_scale+3
  7521  0296  0826               	movf	?___flmul+2,w
  7522  0297  00C0               	movwf	?_scale+2
  7523  0298  0825               	movf	?___flmul+1,w
  7524  0299  00BF               	movwf	?_scale+1
  7525  029A  0824               	movf	?___flmul,w
  7526  029B  00BE               	movwf	?_scale
  7527  029C  0008               	return
  7528  029D                     l3860:	
  7529                           
  7530                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  7531  029D  0852               	movf	scale@scl,w
  7532  029E  00C2               	movwf	??_scale
  7533  029F  01C3               	clrf	??_scale+1
  7534  02A0  35C2               	lslf	??_scale,f
  7535  02A1  0DC3               	rlf	??_scale+1,f
  7536  02A2  35C2               	lslf	??_scale,f
  7537  02A3  0DC3               	rlf	??_scale+1,f
  7538  02A4  3000               	movlw	low (__powers_| (0+32768))
  7539  02A5  0742               	addwf	??_scale,w
  7540  02A6  0084               	movwf	4
  7541  02A7  3098               	movlw	high (__powers_| (0+32768))
  7542  02A8  3D43               	addwfc	??_scale+1,w
  7543  02A9  0085               	movwf	5
  7544  02AA  3F00               	moviw [0]fsr0
  7545  02AB  00C4               	movwf	??_scale+2
  7546  02AC  3F01               	moviw [1]fsr0
  7547  02AD  00C5               	movwf	??_scale+3
  7548  02AE  3F02               	moviw [2]fsr0
  7549  02AF  00C6               	movwf	??_scale+4
  7550  02B0  3F03               	moviw [3]fsr0
  7551  02B1  00C7               	movwf	??_scale+5
  7552  02B2  0847               	movf	??_scale+5,w
  7553  02B3  00C1               	movwf	?_scale+3
  7554  02B4  0846               	movf	??_scale+4,w
  7555  02B5  00C0               	movwf	?_scale+2
  7556  02B6  0845               	movf	??_scale+3,w
  7557  02B7  00BF               	movwf	?_scale+1
  7558  02B8  0844               	movf	??_scale+2,w
  7559  02B9  00BE               	movwf	?_scale
  7560  02BA  0008               	return
  7561  02BB                     __end_of_scale:	
  7562                           
  7563                           	psect	text6
  7564  1029                     __ptext6:	
  7565 ;; *************** function ___awmod *****************
  7566 ;; Defined at:
  7567 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  divisor         2    0[COMMON] int 
  7570 ;;  dividend        2    2[COMMON] int 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  sign            1    6[COMMON] unsigned char 
  7573 ;;  counter         1    5[COMMON] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  2    0[COMMON] int 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        7 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_scale
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           
  7597                           ;psect for function ___awmod
  7598  1029                     ___awmod:	
  7599                           
  7600                           ;incstack = 0
  7601                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7602  1029  01F6               	clrf	___awmod@sign
  7603  102A  1FF3               	btfss	___awmod@dividend+1,7
  7604  102B  2833               	goto	l3186
  7605  102C  09F2               	comf	___awmod@dividend,f
  7606  102D  09F3               	comf	___awmod@dividend+1,f
  7607  102E  0AF2               	incf	___awmod@dividend,f
  7608  102F  1903               	skipnz
  7609  1030  0AF3               	incf	___awmod@dividend+1,f
  7610  1031  01F6               	clrf	___awmod@sign
  7611  1032  0AF6               	incf	___awmod@sign,f
  7612  1033                     l3186:	
  7613  1033  1FF1               	btfss	___awmod@divisor+1,7
  7614  1034  283A               	goto	l3190
  7615  1035  09F0               	comf	___awmod@divisor,f
  7616  1036  09F1               	comf	___awmod@divisor+1,f
  7617  1037  0AF0               	incf	___awmod@divisor,f
  7618  1038  1903               	skipnz
  7619  1039  0AF1               	incf	___awmod@divisor+1,f
  7620  103A                     l3190:	
  7621  103A  0870               	movf	___awmod@divisor,w
  7622  103B  0471               	iorwf	___awmod@divisor+1,w
  7623  103C  1903               	btfsc	3,2
  7624  103D  2861               	goto	l3208
  7625  103E  01F5               	clrf	___awmod@counter
  7626  103F  0AF5               	incf	___awmod@counter,f
  7627  1040                     l3198:	
  7628  1040  1BF1               	btfsc	___awmod@divisor+1,7
  7629  1041  284C               	goto	l3200
  7630  1042  3001               	movlw	1
  7631  1043                     u3405:	
  7632  1043  35F0               	lslf	___awmod@divisor,f
  7633  1044  0DF1               	rlf	___awmod@divisor+1,f
  7634  1045  0B89               	decfsz	9,f
  7635  1046  2843               	goto	u3405
  7636  1047  3001               	movlw	1
  7637  1048  00F4               	movwf	??___awmod
  7638  1049  0874               	movf	??___awmod,w
  7639  104A  07F5               	addwf	___awmod@counter,f
  7640  104B  2840               	goto	l3198
  7641  104C                     l3200:	
  7642  104C  0871               	movf	___awmod@divisor+1,w
  7643  104D  0273               	subwf	___awmod@dividend+1,w
  7644  104E  1D03               	skipz
  7645  104F  2852               	goto	u3425
  7646  1050  0870               	movf	___awmod@divisor,w
  7647  1051  0272               	subwf	___awmod@dividend,w
  7648  1052                     u3425:	
  7649  1052  1C03               	skipc
  7650  1053  2858               	goto	l3204
  7651  1054  0870               	movf	___awmod@divisor,w
  7652  1055  02F2               	subwf	___awmod@dividend,f
  7653  1056  0871               	movf	___awmod@divisor+1,w
  7654  1057  3BF3               	subwfb	___awmod@dividend+1,f
  7655  1058                     l3204:	
  7656  1058  3001               	movlw	1
  7657  1059                     u3435:	
  7658  1059  36F1               	lsrf	___awmod@divisor+1,f
  7659  105A  0CF0               	rrf	___awmod@divisor,f
  7660  105B  0B89               	decfsz	9,f
  7661  105C  2859               	goto	u3435
  7662  105D  3001               	movlw	1
  7663  105E  02F5               	subwf	___awmod@counter,f
  7664  105F  1D03               	btfss	3,2
  7665  1060  284C               	goto	l3200
  7666  1061                     l3208:	
  7667  1061  0876               	movf	___awmod@sign,w
  7668  1062  1903               	btfsc	3,2
  7669  1063  2869               	goto	l3212
  7670  1064  09F2               	comf	___awmod@dividend,f
  7671  1065  09F3               	comf	___awmod@dividend+1,f
  7672  1066  0AF2               	incf	___awmod@dividend,f
  7673  1067  1903               	skipnz
  7674  1068  0AF3               	incf	___awmod@dividend+1,f
  7675  1069                     l3212:	
  7676  1069  0873               	movf	___awmod@dividend+1,w
  7677  106A  00F1               	movwf	?___awmod+1
  7678  106B  0872               	movf	___awmod@dividend,w
  7679  106C  00F0               	movwf	?___awmod
  7680  106D  0008               	return
  7681  106E                     __end_of___awmod:	
  7682                           
  7683                           	psect	text7
  7684  10C0                     __ptext7:	
  7685 ;; *************** function ___awdiv *****************
  7686 ;; Defined at:
  7687 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  divisor         2    7[COMMON] int 
  7690 ;;  dividend        2    9[COMMON] int 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  quotient        2    2[BANK0 ] int 
  7693 ;;  sign            1    1[BANK0 ] unsigned char 
  7694 ;;  counter         1    0[BANK0 ] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  2    7[COMMON] int 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7705 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;Total ram usage:        9 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_scale
  7714 ;;		__doprnt
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           
  7719                           ;psect for function ___awdiv
  7720  10C0                     ___awdiv:	
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7724  10C0  0020               	movlb	0	; select bank0
  7725  10C1  01A1               	clrf	___awdiv@sign
  7726  10C2  1FF8               	btfss	___awdiv@divisor+1,7
  7727  10C3  28CB               	goto	l3142
  7728  10C4  09F7               	comf	___awdiv@divisor,f
  7729  10C5  09F8               	comf	___awdiv@divisor+1,f
  7730  10C6  0AF7               	incf	___awdiv@divisor,f
  7731  10C7  1903               	skipnz
  7732  10C8  0AF8               	incf	___awdiv@divisor+1,f
  7733  10C9  01A1               	clrf	___awdiv@sign
  7734  10CA  0AA1               	incf	___awdiv@sign,f
  7735  10CB                     l3142:	
  7736  10CB  1FFA               	btfss	___awdiv@dividend+1,7
  7737  10CC  28D6               	goto	l3148
  7738  10CD  09F9               	comf	___awdiv@dividend,f
  7739  10CE  09FA               	comf	___awdiv@dividend+1,f
  7740  10CF  0AF9               	incf	___awdiv@dividend,f
  7741  10D0  1903               	skipnz
  7742  10D1  0AFA               	incf	___awdiv@dividend+1,f
  7743  10D2  3001               	movlw	1
  7744  10D3  00FB               	movwf	??___awdiv
  7745  10D4  087B               	movf	??___awdiv,w
  7746  10D5  06A1               	xorwf	___awdiv@sign,f
  7747  10D6                     l3148:	
  7748  10D6  01A2               	clrf	___awdiv@quotient
  7749  10D7  01A3               	clrf	___awdiv@quotient+1
  7750  10D8  0877               	movf	___awdiv@divisor,w
  7751  10D9  0478               	iorwf	___awdiv@divisor+1,w
  7752  10DA  1903               	btfsc	3,2
  7753  10DB  2905               	goto	l3170
  7754  10DC  01A0               	clrf	___awdiv@counter
  7755  10DD  0AA0               	incf	___awdiv@counter,f
  7756  10DE                     l3158:	
  7757  10DE  1BF8               	btfsc	___awdiv@divisor+1,7
  7758  10DF  28EA               	goto	l3160
  7759  10E0  3001               	movlw	1
  7760  10E1                     u3305:	
  7761  10E1  35F7               	lslf	___awdiv@divisor,f
  7762  10E2  0DF8               	rlf	___awdiv@divisor+1,f
  7763  10E3  0B89               	decfsz	9,f
  7764  10E4  28E1               	goto	u3305
  7765  10E5  3001               	movlw	1
  7766  10E6  00FB               	movwf	??___awdiv
  7767  10E7  087B               	movf	??___awdiv,w
  7768  10E8  07A0               	addwf	___awdiv@counter,f
  7769  10E9  28DE               	goto	l3158
  7770  10EA                     l3160:	
  7771  10EA  3001               	movlw	1
  7772  10EB                     u3325:	
  7773  10EB  35A2               	lslf	___awdiv@quotient,f
  7774  10EC  0DA3               	rlf	___awdiv@quotient+1,f
  7775  10ED  0B89               	decfsz	9,f
  7776  10EE  28EB               	goto	u3325
  7777  10EF  0878               	movf	___awdiv@divisor+1,w
  7778  10F0  027A               	subwf	___awdiv@dividend+1,w
  7779  10F1  1D03               	skipz
  7780  10F2  28F5               	goto	u3335
  7781  10F3  0877               	movf	___awdiv@divisor,w
  7782  10F4  0279               	subwf	___awdiv@dividend,w
  7783  10F5                     u3335:	
  7784  10F5  1C03               	skipc
  7785  10F6  28FC               	goto	l3166
  7786  10F7  0877               	movf	___awdiv@divisor,w
  7787  10F8  02F9               	subwf	___awdiv@dividend,f
  7788  10F9  0878               	movf	___awdiv@divisor+1,w
  7789  10FA  3BFA               	subwfb	___awdiv@dividend+1,f
  7790  10FB  1422               	bsf	___awdiv@quotient,0
  7791  10FC                     l3166:	
  7792  10FC  3001               	movlw	1
  7793  10FD                     u3345:	
  7794  10FD  36F8               	lsrf	___awdiv@divisor+1,f
  7795  10FE  0CF7               	rrf	___awdiv@divisor,f
  7796  10FF  0B89               	decfsz	9,f
  7797  1100  28FD               	goto	u3345
  7798  1101  3001               	movlw	1
  7799  1102  02A0               	subwf	___awdiv@counter,f
  7800  1103  1D03               	btfss	3,2
  7801  1104  28EA               	goto	l3160
  7802  1105                     l3170:	
  7803  1105  0821               	movf	___awdiv@sign,w
  7804  1106  1903               	btfsc	3,2
  7805  1107  290D               	goto	l3174
  7806  1108  09A2               	comf	___awdiv@quotient,f
  7807  1109  09A3               	comf	___awdiv@quotient+1,f
  7808  110A  0AA2               	incf	___awdiv@quotient,f
  7809  110B  1903               	skipnz
  7810  110C  0AA3               	incf	___awdiv@quotient+1,f
  7811  110D                     l3174:	
  7812  110D  0823               	movf	___awdiv@quotient+1,w
  7813  110E  00F8               	movwf	?___awdiv+1
  7814  110F  0822               	movf	___awdiv@quotient,w
  7815  1110  00F7               	movwf	?___awdiv
  7816  1111  0008               	return
  7817  1112                     __end_of___awdiv:	
  7818                           
  7819                           	psect	text8
  7820  1D95                     __ptext8:	
  7821 ;; *************** function _putch *****************
  7822 ;; Defined at:
  7823 ;;		line 145 in file "mcc_generated_files/eusart.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  txData          1    1[COMMON] unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0, pclath, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7837 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;Total ram usage:        2 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    1
  7844 ;; This function calls:
  7845 ;;		_EUSART_Write
  7846 ;; This function is called by:
  7847 ;;		_printf
  7848 ;;		__doprnt
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _putch
  7854  1D95                     _putch:	
  7855                           
  7856                           ;eusart.c: 147: EUSART_Write(txData);
  7857                           
  7858                           ;incstack = 0
  7859                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7860  1D95  0871               	movf	putch@txData,w
  7861  1D96  00F2               	movwf	??_putch
  7862  1D97  0872               	movf	??_putch,w
  7863  1D98  00F0               	movwf	EUSART_Write@txData
  7864  1D99  319D  258E         	fcall	_EUSART_Write
  7865  1D9B  0008               	return
  7866  1D9C                     __end_of_putch:	
  7867                           
  7868                           	psect	text9
  7869  1D8E                     __ptext9:	
  7870 ;; *************** function _EUSART_Write *****************
  7871 ;; Defined at:
  7872 ;;		line 131 in file "mcc_generated_files/eusart.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  txData          1    0[COMMON] unsigned char 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7886 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;Total ram usage:        1 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_putch
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function _EUSART_Write
  7901  1D8E                     _EUSART_Write:	
  7902  1D8E                     l115:	
  7903                           ;eusart.c: 134: {
  7904                           
  7905                           ;incstack = 0
  7906                           ; Regs used in _EUSART_Write: [wreg]
  7907                           
  7908  1D8E  0020               	movlb	0	; select bank0
  7909  1D8F  1E10               	btfss	16,4	;volatile
  7910  1D90  2D8E               	goto	l115
  7911                           
  7912                           ;eusart.c: 135: };eusart.c: 137: TX1REG = txData;
  7913  1D91  0870               	movf	EUSART_Write@txData,w
  7914  1D92  0023               	movlb	3	; select bank3
  7915  1D93  009A               	movwf	26	;volatile
  7916  1D94  0008               	return
  7917  1D95                     __end_of_EUSART_Write:	
  7918                           
  7919                           	psect	text10
  7920  0800                     __ptext10:	
  7921 ;; *************** function _isdigit *****************
  7922 ;; Defined at:
  7923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  c               1    wreg     unsigned char 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  c               1    1[COMMON] unsigned char 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;		None               void
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;Total ram usage:        2 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		__doprnt
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function _isdigit
  7952  0800                     _isdigit:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7956                           ;isdigit@c stored from wreg
  7957  0800  00F1               	movwf	isdigit@c
  7958  0801  01F0               	clrf	_isdigit$1187
  7959  0802  303A               	movlw	58
  7960  0803  0271               	subwf	isdigit@c,w
  7961  0804  1803               	skipnc
  7962  0805  280C               	goto	l3872
  7963  0806  3030               	movlw	48
  7964  0807  0271               	subwf	isdigit@c,w
  7965  0808  1C03               	skipc
  7966  0809  280C               	goto	l3872
  7967  080A  01F0               	clrf	_isdigit$1187
  7968  080B  0AF0               	incf	_isdigit$1187,f
  7969  080C                     l3872:	
  7970  080C  0C70               	rrf	_isdigit$1187,w
  7971  080D  0008               	return
  7972  080E                     __end_of_isdigit:	
  7973                           
  7974                           	psect	text11
  7975  167F                     __ptext11:	
  7976 ;; *************** function _fround *****************
  7977 ;; Defined at:
  7978 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  prec            1    wreg     unsigned char 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  prec            1   48[BANK0 ] unsigned char 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  4   30[BANK0 ] unsigned char 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;Total ram usage:       19 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    2
  7999 ;; This function calls:
  8000 ;;		___flmul
  8001 ;;		___lwdiv
  8002 ;;		___lwmod
  8003 ;; This function is called by:
  8004 ;;		__doprnt
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function _fround
  8010  167F                     _fround:	
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8014                           ;fround@prec stored from wreg
  8015  167F  0020               	movlb	0	; select bank0
  8016  1680  00D0               	movwf	fround@prec
  8017                           
  8018                           ;doprnt.c: 421: if(prec>=110)
  8019  1681  306E               	movlw	110
  8020  1682  0250               	subwf	fround@prec,w
  8021  1683  1C03               	skipc
  8022  1684  2F4D               	goto	l3814
  8023                           
  8024                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8025  1685  303F               	movlw	63
  8026  1686  00A7               	movwf	___flmul@b+3
  8027  1687  3000               	movlw	0
  8028  1688  00A6               	movwf	___flmul@b+2
  8029  1689  3000               	movlw	0
  8030  168A  00A5               	movwf	___flmul@b+1
  8031  168B  3000               	movlw	0
  8032  168C  00A4               	movwf	___flmul@b
  8033  168D  3064               	movlw	100
  8034  168E  00F6               	movwf	___lwdiv@divisor
  8035  168F  3000               	movlw	0
  8036  1690  00F7               	movwf	___lwdiv@divisor+1
  8037  1691  0850               	movf	fround@prec,w
  8038  1692  00C2               	movwf	??_fround
  8039  1693  01C3               	clrf	??_fround+1
  8040  1694  0842               	movf	??_fround,w
  8041  1695  00F8               	movwf	___lwdiv@dividend
  8042  1696  0843               	movf	??_fround+1,w
  8043  1697  00F9               	movwf	___lwdiv@dividend+1
  8044  1698  319E  26DA  3196   	fcall	___lwdiv
  8045  169B  0877               	movf	?___lwdiv+1,w
  8046  169C  0085               	movwf	5
  8047  169D  0876               	movf	?___lwdiv,w
  8048  169E  0084               	movwf	4
  8049  169F  3584               	lslf	4,f
  8050  16A0  0D85               	rlf	5,f
  8051  16A1  3584               	lslf	4,f
  8052  16A2  0D85               	rlf	5,f
  8053  16A3  307C               	movlw	low ((__npowers_+72)| (0+32768))
  8054  16A4  0784               	addwf	4,f
  8055  16A5  3098               	movlw	high ((__npowers_+72)| (0+32768))
  8056  16A6  3D85               	addwfc	5,f
  8057  16A7  3F00               	moviw [0]fsr0
  8058  16A8  0020               	movlb	0	; select bank0
  8059  16A9  00C4               	movwf	??_fround+2
  8060  16AA  3F01               	moviw [1]fsr0
  8061  16AB  00C5               	movwf	??_fround+3
  8062  16AC  3F02               	moviw [2]fsr0
  8063  16AD  00C6               	movwf	??_fround+4
  8064  16AE  3F03               	moviw [3]fsr0
  8065  16AF  00C7               	movwf	??_fround+5
  8066  16B0  0847               	movf	??_fround+5,w
  8067  16B1  00AB               	movwf	___flmul@a+3
  8068  16B2  0846               	movf	??_fround+4,w
  8069  16B3  00AA               	movwf	___flmul@a+2
  8070  16B4  0845               	movf	??_fround+3,w
  8071  16B5  00A9               	movwf	___flmul@a+1
  8072  16B6  0844               	movf	??_fround+2,w
  8073  16B7  00A8               	movwf	___flmul@a
  8074  16B8  318A  2258  3196   	fcall	___flmul
  8075  16BB  0020               	movlb	0	; select bank0
  8076  16BC  0827               	movf	?___flmul+3,w
  8077  16BD  00CF               	movwf	_fround$1422+3
  8078  16BE  0826               	movf	?___flmul+2,w
  8079  16BF  00CE               	movwf	_fround$1422+2
  8080  16C0  0825               	movf	?___flmul+1,w
  8081  16C1  00CD               	movwf	_fround$1422+1
  8082  16C2  0824               	movf	?___flmul,w
  8083  16C3  00CC               	movwf	_fround$1422
  8084                           
  8085                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8086  16C4  300A               	movlw	10
  8087  16C5  00F6               	movwf	___lwdiv@divisor
  8088  16C6  3000               	movlw	0
  8089  16C7  00F7               	movwf	___lwdiv@divisor+1
  8090  16C8  0850               	movf	fround@prec,w
  8091  16C9  00C2               	movwf	??_fround
  8092  16CA  01C3               	clrf	??_fround+1
  8093  16CB  0842               	movf	??_fround,w
  8094  16CC  00F2               	movwf	___lwmod@dividend
  8095  16CD  0843               	movf	??_fround+1,w
  8096  16CE  00F3               	movwf	___lwmod@dividend+1
  8097  16CF  3064               	movlw	100
  8098  16D0  00F0               	movwf	___lwmod@divisor
  8099  16D1  3000               	movlw	0
  8100  16D2  00F1               	movwf	___lwmod@divisor+1
  8101  16D3  319E  2649  3196   	fcall	___lwmod
  8102  16D6  0871               	movf	?___lwmod+1,w
  8103  16D7  00F9               	movwf	___lwdiv@dividend+1
  8104  16D8  0870               	movf	?___lwmod,w
  8105  16D9  00F8               	movwf	___lwdiv@dividend
  8106  16DA  319E  26DA  3196   	fcall	___lwdiv
  8107  16DD  0877               	movf	?___lwdiv+1,w
  8108  16DE  0085               	movwf	5
  8109  16DF  0876               	movf	?___lwdiv,w
  8110  16E0  0084               	movwf	4
  8111  16E1  3584               	lslf	4,f
  8112  16E2  0D85               	rlf	5,f
  8113  16E3  3584               	lslf	4,f
  8114  16E4  0D85               	rlf	5,f
  8115  16E5  3058               	movlw	low ((__npowers_+36)| (0+32768))
  8116  16E6  0784               	addwf	4,f
  8117  16E7  3098               	movlw	high ((__npowers_+36)| (0+32768))
  8118  16E8  3D85               	addwfc	5,f
  8119  16E9  3F00               	moviw [0]fsr0
  8120  16EA  0020               	movlb	0	; select bank0
  8121  16EB  00C4               	movwf	??_fround+2
  8122  16EC  3F01               	moviw [1]fsr0
  8123  16ED  00C5               	movwf	??_fround+3
  8124  16EE  3F02               	moviw [2]fsr0
  8125  16EF  00C6               	movwf	??_fround+4
  8126  16F0  3F03               	moviw [3]fsr0
  8127  16F1  00C7               	movwf	??_fround+5
  8128  16F2  0847               	movf	??_fround+5,w
  8129  16F3  00A7               	movwf	___flmul@b+3
  8130  16F4  0846               	movf	??_fround+4,w
  8131  16F5  00A6               	movwf	___flmul@b+2
  8132  16F6  0845               	movf	??_fround+3,w
  8133  16F7  00A5               	movwf	___flmul@b+1
  8134  16F8  0844               	movf	??_fround+2,w
  8135  16F9  00A4               	movwf	___flmul@b
  8136  16FA  084F               	movf	_fround$1422+3,w
  8137  16FB  00AB               	movwf	___flmul@a+3
  8138  16FC  084E               	movf	_fround$1422+2,w
  8139  16FD  00AA               	movwf	___flmul@a+2
  8140  16FE  084D               	movf	_fround$1422+1,w
  8141  16FF  00A9               	movwf	___flmul@a+1
  8142  1700  084C               	movf	_fround$1422,w
  8143  1701  00A8               	movwf	___flmul@a
  8144  1702  318A  2258  3196   	fcall	___flmul
  8145  1705  0020               	movlb	0	; select bank0
  8146  1706  0827               	movf	?___flmul+3,w
  8147  1707  00CB               	movwf	_fround$1423+3
  8148  1708  0826               	movf	?___flmul+2,w
  8149  1709  00CA               	movwf	_fround$1423+2
  8150  170A  0825               	movf	?___flmul+1,w
  8151  170B  00C9               	movwf	_fround$1423+1
  8152  170C  0824               	movf	?___flmul,w
  8153  170D  00C8               	movwf	_fround$1423
  8154                           
  8155                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8156  170E  300A               	movlw	10
  8157  170F  00F0               	movwf	___lwmod@divisor
  8158  1710  3000               	movlw	0
  8159  1711  00F1               	movwf	___lwmod@divisor+1
  8160  1712  0850               	movf	fround@prec,w
  8161  1713  00C2               	movwf	??_fround
  8162  1714  01C3               	clrf	??_fround+1
  8163  1715  0842               	movf	??_fround,w
  8164  1716  00F2               	movwf	___lwmod@dividend
  8165  1717  0843               	movf	??_fround+1,w
  8166  1718  00F3               	movwf	___lwmod@dividend+1
  8167  1719  319E  2649  3196   	fcall	___lwmod
  8168  171C  0871               	movf	?___lwmod+1,w
  8169  171D  0085               	movwf	5
  8170  171E  0870               	movf	?___lwmod,w
  8171  171F  0084               	movwf	4
  8172  1720  3584               	lslf	4,f
  8173  1721  0D85               	rlf	5,f
  8174  1722  3584               	lslf	4,f
  8175  1723  0D85               	rlf	5,f
  8176  1724  3034               	movlw	low (__npowers_| (0+32768))
  8177  1725  0784               	addwf	4,f
  8178  1726  3098               	movlw	high (__npowers_| (0+32768))
  8179  1727  3D85               	addwfc	5,f
  8180  1728  3F00               	moviw [0]fsr0
  8181  1729  0020               	movlb	0	; select bank0
  8182  172A  00C4               	movwf	??_fround+2
  8183  172B  3F01               	moviw [1]fsr0
  8184  172C  00C5               	movwf	??_fround+3
  8185  172D  3F02               	moviw [2]fsr0
  8186  172E  00C6               	movwf	??_fround+4
  8187  172F  3F03               	moviw [3]fsr0
  8188  1730  00C7               	movwf	??_fround+5
  8189  1731  0847               	movf	??_fround+5,w
  8190  1732  00A7               	movwf	___flmul@b+3
  8191  1733  0846               	movf	??_fround+4,w
  8192  1734  00A6               	movwf	___flmul@b+2
  8193  1735  0845               	movf	??_fround+3,w
  8194  1736  00A5               	movwf	___flmul@b+1
  8195  1737  0844               	movf	??_fround+2,w
  8196  1738  00A4               	movwf	___flmul@b
  8197  1739  084B               	movf	_fround$1423+3,w
  8198  173A  00AB               	movwf	___flmul@a+3
  8199  173B  084A               	movf	_fround$1423+2,w
  8200  173C  00AA               	movwf	___flmul@a+2
  8201  173D  0849               	movf	_fround$1423+1,w
  8202  173E  00A9               	movwf	___flmul@a+1
  8203  173F  0848               	movf	_fround$1423,w
  8204  1740  00A8               	movwf	___flmul@a
  8205  1741  318A  2258         	fcall	___flmul
  8206  1743  0020               	movlb	0	; select bank0
  8207  1744  0827               	movf	?___flmul+3,w
  8208  1745  00C1               	movwf	?_fround+3
  8209  1746  0826               	movf	?___flmul+2,w
  8210  1747  00C0               	movwf	?_fround+2
  8211  1748  0825               	movf	?___flmul+1,w
  8212  1749  00BF               	movwf	?_fround+1
  8213  174A  0824               	movf	?___flmul,w
  8214  174B  00BE               	movwf	?_fround
  8215  174C  0008               	return
  8216  174D                     l3814:	
  8217                           
  8218                           ;doprnt.c: 423: else if(prec > 10)
  8219  174D  300B               	movlw	11
  8220  174E  0250               	subwf	fround@prec,w
  8221  174F  1C03               	skipc
  8222  1750  2FCF               	goto	l3820
  8223                           
  8224                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8225  1751  303F               	movlw	63
  8226  1752  00A7               	movwf	___flmul@b+3
  8227  1753  3000               	movlw	0
  8228  1754  00A6               	movwf	___flmul@b+2
  8229  1755  3000               	movlw	0
  8230  1756  00A5               	movwf	___flmul@b+1
  8231  1757  3000               	movlw	0
  8232  1758  00A4               	movwf	___flmul@b
  8233  1759  300A               	movlw	10
  8234  175A  00F6               	movwf	___lwdiv@divisor
  8235  175B  3000               	movlw	0
  8236  175C  00F7               	movwf	___lwdiv@divisor+1
  8237  175D  0850               	movf	fround@prec,w
  8238  175E  00C2               	movwf	??_fround
  8239  175F  01C3               	clrf	??_fround+1
  8240  1760  0842               	movf	??_fround,w
  8241  1761  00F8               	movwf	___lwdiv@dividend
  8242  1762  0843               	movf	??_fround+1,w
  8243  1763  00F9               	movwf	___lwdiv@dividend+1
  8244  1764  319E  26DA  3196   	fcall	___lwdiv
  8245  1767  0877               	movf	?___lwdiv+1,w
  8246  1768  0085               	movwf	5
  8247  1769  0876               	movf	?___lwdiv,w
  8248  176A  0084               	movwf	4
  8249  176B  3584               	lslf	4,f
  8250  176C  0D85               	rlf	5,f
  8251  176D  3584               	lslf	4,f
  8252  176E  0D85               	rlf	5,f
  8253  176F  3058               	movlw	low ((__npowers_+36)| (0+32768))
  8254  1770  0784               	addwf	4,f
  8255  1771  3098               	movlw	high ((__npowers_+36)| (0+32768))
  8256  1772  3D85               	addwfc	5,f
  8257  1773  3F00               	moviw [0]fsr0
  8258  1774  0020               	movlb	0	; select bank0
  8259  1775  00C4               	movwf	??_fround+2
  8260  1776  3F01               	moviw [1]fsr0
  8261  1777  00C5               	movwf	??_fround+3
  8262  1778  3F02               	moviw [2]fsr0
  8263  1779  00C6               	movwf	??_fround+4
  8264  177A  3F03               	moviw [3]fsr0
  8265  177B  00C7               	movwf	??_fround+5
  8266  177C  0847               	movf	??_fround+5,w
  8267  177D  00AB               	movwf	___flmul@a+3
  8268  177E  0846               	movf	??_fround+4,w
  8269  177F  00AA               	movwf	___flmul@a+2
  8270  1780  0845               	movf	??_fround+3,w
  8271  1781  00A9               	movwf	___flmul@a+1
  8272  1782  0844               	movf	??_fround+2,w
  8273  1783  00A8               	movwf	___flmul@a
  8274  1784  318A  2258  3196   	fcall	___flmul
  8275  1787  0020               	movlb	0	; select bank0
  8276  1788  0827               	movf	?___flmul+3,w
  8277  1789  00CF               	movwf	_fround$1422+3
  8278  178A  0826               	movf	?___flmul+2,w
  8279  178B  00CE               	movwf	_fround$1422+2
  8280  178C  0825               	movf	?___flmul+1,w
  8281  178D  00CD               	movwf	_fround$1422+1
  8282  178E  0824               	movf	?___flmul,w
  8283  178F  00CC               	movwf	_fround$1422
  8284                           
  8285                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8286  1790  300A               	movlw	10
  8287  1791  00F0               	movwf	___lwmod@divisor
  8288  1792  3000               	movlw	0
  8289  1793  00F1               	movwf	___lwmod@divisor+1
  8290  1794  0850               	movf	fround@prec,w
  8291  1795  00C2               	movwf	??_fround
  8292  1796  01C3               	clrf	??_fround+1
  8293  1797  0842               	movf	??_fround,w
  8294  1798  00F2               	movwf	___lwmod@dividend
  8295  1799  0843               	movf	??_fround+1,w
  8296  179A  00F3               	movwf	___lwmod@dividend+1
  8297  179B  319E  2649  3196   	fcall	___lwmod
  8298  179E  0871               	movf	?___lwmod+1,w
  8299  179F  0085               	movwf	5
  8300  17A0  0870               	movf	?___lwmod,w
  8301  17A1  0084               	movwf	4
  8302  17A2  3584               	lslf	4,f
  8303  17A3  0D85               	rlf	5,f
  8304  17A4  3584               	lslf	4,f
  8305  17A5  0D85               	rlf	5,f
  8306  17A6  3034               	movlw	low (__npowers_| (0+32768))
  8307  17A7  0784               	addwf	4,f
  8308  17A8  3098               	movlw	high (__npowers_| (0+32768))
  8309  17A9  3D85               	addwfc	5,f
  8310  17AA  3F00               	moviw [0]fsr0
  8311  17AB  0020               	movlb	0	; select bank0
  8312  17AC  00C4               	movwf	??_fround+2
  8313  17AD  3F01               	moviw [1]fsr0
  8314  17AE  00C5               	movwf	??_fround+3
  8315  17AF  3F02               	moviw [2]fsr0
  8316  17B0  00C6               	movwf	??_fround+4
  8317  17B1  3F03               	moviw [3]fsr0
  8318  17B2  00C7               	movwf	??_fround+5
  8319  17B3  0847               	movf	??_fround+5,w
  8320  17B4  00A7               	movwf	___flmul@b+3
  8321  17B5  0846               	movf	??_fround+4,w
  8322  17B6  00A6               	movwf	___flmul@b+2
  8323  17B7  0845               	movf	??_fround+3,w
  8324  17B8  00A5               	movwf	___flmul@b+1
  8325  17B9  0844               	movf	??_fround+2,w
  8326  17BA  00A4               	movwf	___flmul@b
  8327  17BB  084F               	movf	_fround$1422+3,w
  8328  17BC  00AB               	movwf	___flmul@a+3
  8329  17BD  084E               	movf	_fround$1422+2,w
  8330  17BE  00AA               	movwf	___flmul@a+2
  8331  17BF  084D               	movf	_fround$1422+1,w
  8332  17C0  00A9               	movwf	___flmul@a+1
  8333  17C1  084C               	movf	_fround$1422,w
  8334  17C2  00A8               	movwf	___flmul@a
  8335  17C3  318A  2258         	fcall	___flmul
  8336  17C5  0020               	movlb	0	; select bank0
  8337  17C6  0827               	movf	?___flmul+3,w
  8338  17C7  00C1               	movwf	?_fround+3
  8339  17C8  0826               	movf	?___flmul+2,w
  8340  17C9  00C0               	movwf	?_fround+2
  8341  17CA  0825               	movf	?___flmul+1,w
  8342  17CB  00BF               	movwf	?_fround+1
  8343  17CC  0824               	movf	?___flmul,w
  8344  17CD  00BE               	movwf	?_fround
  8345  17CE  0008               	return
  8346  17CF                     l3820:	
  8347                           
  8348                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  8349  17CF  303F               	movlw	63
  8350  17D0  00A7               	movwf	___flmul@b+3
  8351  17D1  3000               	movlw	0
  8352  17D2  00A6               	movwf	___flmul@b+2
  8353  17D3  3000               	movlw	0
  8354  17D4  00A5               	movwf	___flmul@b+1
  8355  17D5  3000               	movlw	0
  8356  17D6  00A4               	movwf	___flmul@b
  8357  17D7  0850               	movf	fround@prec,w
  8358  17D8  00C2               	movwf	??_fround
  8359  17D9  01C3               	clrf	??_fround+1
  8360  17DA  35C2               	lslf	??_fround,f
  8361  17DB  0DC3               	rlf	??_fround+1,f
  8362  17DC  35C2               	lslf	??_fround,f
  8363  17DD  0DC3               	rlf	??_fround+1,f
  8364  17DE  3034               	movlw	low (__npowers_| (0+32768))
  8365  17DF  0742               	addwf	??_fround,w
  8366  17E0  0084               	movwf	4
  8367  17E1  3098               	movlw	high (__npowers_| (0+32768))
  8368  17E2  3D43               	addwfc	??_fround+1,w
  8369  17E3  0085               	movwf	5
  8370  17E4  3F00               	moviw [0]fsr0
  8371  17E5  00C4               	movwf	??_fround+2
  8372  17E6  3F01               	moviw [1]fsr0
  8373  17E7  00C5               	movwf	??_fround+3
  8374  17E8  3F02               	moviw [2]fsr0
  8375  17E9  00C6               	movwf	??_fround+4
  8376  17EA  3F03               	moviw [3]fsr0
  8377  17EB  00C7               	movwf	??_fround+5
  8378  17EC  0847               	movf	??_fround+5,w
  8379  17ED  00AB               	movwf	___flmul@a+3
  8380  17EE  0846               	movf	??_fround+4,w
  8381  17EF  00AA               	movwf	___flmul@a+2
  8382  17F0  0845               	movf	??_fround+3,w
  8383  17F1  00A9               	movwf	___flmul@a+1
  8384  17F2  0844               	movf	??_fround+2,w
  8385  17F3  00A8               	movwf	___flmul@a
  8386  17F4  318A  2258         	fcall	___flmul
  8387  17F6  0020               	movlb	0	; select bank0
  8388  17F7  0827               	movf	?___flmul+3,w
  8389  17F8  00C1               	movwf	?_fround+3
  8390  17F9  0826               	movf	?___flmul+2,w
  8391  17FA  00C0               	movwf	?_fround+2
  8392  17FB  0825               	movf	?___flmul+1,w
  8393  17FC  00BF               	movwf	?_fround+1
  8394  17FD  0824               	movf	?___flmul,w
  8395  17FE  00BE               	movwf	?_fround
  8396  17FF  0008               	return
  8397  1800                     __end_of_fround:	
  8398                           
  8399                           	psect	text12
  8400  1E49                     __ptext12:	
  8401 ;; *************** function ___lwmod *****************
  8402 ;; Defined at:
  8403 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  divisor         2    0[COMMON] unsigned int 
  8406 ;;  dividend        2    2[COMMON] unsigned int 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  counter         1    5[COMMON] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  2    0[COMMON] unsigned int 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;Total ram usage:        6 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_fround
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function ___lwmod
  8433  1E49                     ___lwmod:	
  8434                           
  8435                           ;incstack = 0
  8436                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8437  1E49  0870               	movf	___lwmod@divisor,w
  8438  1E4A  0471               	iorwf	___lwmod@divisor+1,w
  8439  1E4B  1903               	btfsc	3,2
  8440  1E4C  2E70               	goto	l3260
  8441  1E4D  01F5               	clrf	___lwmod@counter
  8442  1E4E  0AF5               	incf	___lwmod@counter,f
  8443  1E4F                     l3250:	
  8444  1E4F  1BF1               	btfsc	___lwmod@divisor+1,7
  8445  1E50  2E5B               	goto	l3252
  8446  1E51  3001               	movlw	1
  8447  1E52                     u3545:	
  8448  1E52  35F0               	lslf	___lwmod@divisor,f
  8449  1E53  0DF1               	rlf	___lwmod@divisor+1,f
  8450  1E54  0B89               	decfsz	9,f
  8451  1E55  2E52               	goto	u3545
  8452  1E56  3001               	movlw	1
  8453  1E57  00F4               	movwf	??___lwmod
  8454  1E58  0874               	movf	??___lwmod,w
  8455  1E59  07F5               	addwf	___lwmod@counter,f
  8456  1E5A  2E4F               	goto	l3250
  8457  1E5B                     l3252:	
  8458  1E5B  0871               	movf	___lwmod@divisor+1,w
  8459  1E5C  0273               	subwf	___lwmod@dividend+1,w
  8460  1E5D  1D03               	skipz
  8461  1E5E  2E61               	goto	u3565
  8462  1E5F  0870               	movf	___lwmod@divisor,w
  8463  1E60  0272               	subwf	___lwmod@dividend,w
  8464  1E61                     u3565:	
  8465  1E61  1C03               	skipc
  8466  1E62  2E67               	goto	l3256
  8467  1E63  0870               	movf	___lwmod@divisor,w
  8468  1E64  02F2               	subwf	___lwmod@dividend,f
  8469  1E65  0871               	movf	___lwmod@divisor+1,w
  8470  1E66  3BF3               	subwfb	___lwmod@dividend+1,f
  8471  1E67                     l3256:	
  8472  1E67  3001               	movlw	1
  8473  1E68                     u3575:	
  8474  1E68  36F1               	lsrf	___lwmod@divisor+1,f
  8475  1E69  0CF0               	rrf	___lwmod@divisor,f
  8476  1E6A  0B89               	decfsz	9,f
  8477  1E6B  2E68               	goto	u3575
  8478  1E6C  3001               	movlw	1
  8479  1E6D  02F5               	subwf	___lwmod@counter,f
  8480  1E6E  1D03               	btfss	3,2
  8481  1E6F  2E5B               	goto	l3252
  8482  1E70                     l3260:	
  8483  1E70  0873               	movf	___lwmod@dividend+1,w
  8484  1E71  00F1               	movwf	?___lwmod+1
  8485  1E72  0872               	movf	___lwmod@dividend,w
  8486  1E73  00F0               	movwf	?___lwmod
  8487  1E74  0008               	return
  8488  1E75                     __end_of___lwmod:	
  8489                           
  8490                           	psect	text13
  8491  1EDA                     __ptext13:	
  8492 ;; *************** function ___lwdiv *****************
  8493 ;; Defined at:
  8494 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  divisor         2    6[COMMON] unsigned int 
  8497 ;;  dividend        2    8[COMMON] unsigned int 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  quotient        2   11[COMMON] unsigned int 
  8500 ;;  counter         1   13[COMMON] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  2    6[COMMON] unsigned int 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;Total ram usage:        8 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_fround
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function ___lwdiv
  8525  1EDA                     ___lwdiv:	
  8526                           
  8527                           ;incstack = 0
  8528                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8529  1EDA  01FB               	clrf	___lwdiv@quotient
  8530  1EDB  01FC               	clrf	___lwdiv@quotient+1
  8531  1EDC  0876               	movf	___lwdiv@divisor,w
  8532  1EDD  0477               	iorwf	___lwdiv@divisor+1,w
  8533  1EDE  1903               	btfsc	3,2
  8534  1EDF  2F09               	goto	l3238
  8535  1EE0  01FD               	clrf	___lwdiv@counter
  8536  1EE1  0AFD               	incf	___lwdiv@counter,f
  8537  1EE2                     l3226:	
  8538  1EE2  1BF7               	btfsc	___lwdiv@divisor+1,7
  8539  1EE3  2EEE               	goto	l3228
  8540  1EE4  3001               	movlw	1
  8541  1EE5                     u3475:	
  8542  1EE5  35F6               	lslf	___lwdiv@divisor,f
  8543  1EE6  0DF7               	rlf	___lwdiv@divisor+1,f
  8544  1EE7  0B89               	decfsz	9,f
  8545  1EE8  2EE5               	goto	u3475
  8546  1EE9  3001               	movlw	1
  8547  1EEA  00FA               	movwf	??___lwdiv
  8548  1EEB  087A               	movf	??___lwdiv,w
  8549  1EEC  07FD               	addwf	___lwdiv@counter,f
  8550  1EED  2EE2               	goto	l3226
  8551  1EEE                     l3228:	
  8552  1EEE  3001               	movlw	1
  8553  1EEF                     u3495:	
  8554  1EEF  35FB               	lslf	___lwdiv@quotient,f
  8555  1EF0  0DFC               	rlf	___lwdiv@quotient+1,f
  8556  1EF1  0B89               	decfsz	9,f
  8557  1EF2  2EEF               	goto	u3495
  8558  1EF3  0877               	movf	___lwdiv@divisor+1,w
  8559  1EF4  0279               	subwf	___lwdiv@dividend+1,w
  8560  1EF5  1D03               	skipz
  8561  1EF6  2EF9               	goto	u3505
  8562  1EF7  0876               	movf	___lwdiv@divisor,w
  8563  1EF8  0278               	subwf	___lwdiv@dividend,w
  8564  1EF9                     u3505:	
  8565  1EF9  1C03               	skipc
  8566  1EFA  2F00               	goto	l3234
  8567  1EFB  0876               	movf	___lwdiv@divisor,w
  8568  1EFC  02F8               	subwf	___lwdiv@dividend,f
  8569  1EFD  0877               	movf	___lwdiv@divisor+1,w
  8570  1EFE  3BF9               	subwfb	___lwdiv@dividend+1,f
  8571  1EFF  147B               	bsf	___lwdiv@quotient,0
  8572  1F00                     l3234:	
  8573  1F00  3001               	movlw	1
  8574  1F01                     u3515:	
  8575  1F01  36F7               	lsrf	___lwdiv@divisor+1,f
  8576  1F02  0CF6               	rrf	___lwdiv@divisor,f
  8577  1F03  0B89               	decfsz	9,f
  8578  1F04  2F01               	goto	u3515
  8579  1F05  3001               	movlw	1
  8580  1F06  02FD               	subwf	___lwdiv@counter,f
  8581  1F07  1D03               	btfss	3,2
  8582  1F08  2EEE               	goto	l3228
  8583  1F09                     l3238:	
  8584  1F09  087C               	movf	___lwdiv@quotient+1,w
  8585  1F0A  00F7               	movwf	?___lwdiv+1
  8586  1F0B  087B               	movf	___lwdiv@quotient,w
  8587  1F0C  00F6               	movwf	?___lwdiv
  8588  1F0D  0008               	return
  8589  1F0E                     __end_of___lwdiv:	
  8590                           
  8591                           	psect	text14
  8592  0A58                     __ptext14:	
  8593 ;; *************** function ___flmul *****************
  8594 ;; Defined at:
  8595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  b               4    4[BANK0 ] unsigned int 
  8598 ;;  a               4    8[BANK0 ] unsigned int 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  prod            4   24[BANK0 ] struct .
  8601 ;;  grs             4   18[BANK0 ] unsigned long 
  8602 ;;  temp            2   28[BANK0 ] struct .
  8603 ;;  bexp            1   23[BANK0 ] unsigned char 
  8604 ;;  aexp            1   22[BANK0 ] unsigned char 
  8605 ;;  sign            1   17[BANK0 ] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  4    4[BANK0 ] unsigned char 
  8608 ;; Registers used:
  8609 ;;		wreg, status,2, status,0, pclath, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;Total ram usage:       26 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:    1
  8622 ;; This function calls:
  8623 ;;		__Umul8_16
  8624 ;; This function is called by:
  8625 ;;		_fround
  8626 ;;		_scale
  8627 ;;		__doprnt
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function ___flmul
  8633  0A58                     ___flmul:	
  8634                           
  8635                           ;incstack = 0
  8636                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8637  0A58  0020               	movlb	0	; select bank0
  8638  0A59  0827               	movf	___flmul@b+3,w
  8639  0A5A  3980               	andlw	128
  8640  0A5B  00AC               	movwf	??___flmul
  8641  0A5C  082C               	movf	??___flmul,w
  8642  0A5D  00B1               	movwf	___flmul@sign
  8643  0A5E  3527               	lslf	___flmul@b+3,w
  8644  0A5F  00AC               	movwf	??___flmul
  8645  0A60  082C               	movf	??___flmul,w
  8646  0A61  00B7               	movwf	___flmul@bexp
  8647  0A62  1BA6               	btfsc	___flmul@b+2,7
  8648  0A63  1437               	bsf	___flmul@bexp,0
  8649  0A64  0837               	movf	___flmul@bexp,w
  8650  0A65  1903               	btfsc	3,2
  8651  0A66  2A74               	goto	l3614
  8652  0A67  0A37               	incf	___flmul@bexp,w
  8653  0A68  1D03               	btfss	3,2
  8654  0A69  2A72               	goto	l3612
  8655  0A6A  3000               	movlw	0
  8656  0A6B  00A7               	movwf	___flmul@b+3
  8657  0A6C  3000               	movlw	0
  8658  0A6D  00A6               	movwf	___flmul@b+2
  8659  0A6E  3000               	movlw	0
  8660  0A6F  00A5               	movwf	___flmul@b+1
  8661  0A70  3000               	movlw	0
  8662  0A71  00A4               	movwf	___flmul@b
  8663  0A72                     l3612:	
  8664  0A72  17A6               	bsf	___flmul@b+2,7
  8665  0A73  2A7C               	goto	l3616
  8666  0A74                     l3614:	
  8667  0A74  3000               	movlw	0
  8668  0A75  00A7               	movwf	___flmul@b+3
  8669  0A76  3000               	movlw	0
  8670  0A77  00A6               	movwf	___flmul@b+2
  8671  0A78  3000               	movlw	0
  8672  0A79  00A5               	movwf	___flmul@b+1
  8673  0A7A  3000               	movlw	0
  8674  0A7B  00A4               	movwf	___flmul@b
  8675  0A7C                     l3616:	
  8676  0A7C  082B               	movf	___flmul@a+3,w
  8677  0A7D  3980               	andlw	128
  8678  0A7E  00AC               	movwf	??___flmul
  8679  0A7F  082C               	movf	??___flmul,w
  8680  0A80  06B1               	xorwf	___flmul@sign,f
  8681  0A81  352B               	lslf	___flmul@a+3,w
  8682  0A82  00AC               	movwf	??___flmul
  8683  0A83  082C               	movf	??___flmul,w
  8684  0A84  00B6               	movwf	___flmul@aexp
  8685  0A85  1BAA               	btfsc	___flmul@a+2,7
  8686  0A86  1436               	bsf	___flmul@aexp,0
  8687  0A87  0836               	movf	___flmul@aexp,w
  8688  0A88  1903               	btfsc	3,2
  8689  0A89  2A97               	goto	l3632
  8690  0A8A  0A36               	incf	___flmul@aexp,w
  8691  0A8B  1D03               	btfss	3,2
  8692  0A8C  2A95               	goto	l3630
  8693  0A8D  3000               	movlw	0
  8694  0A8E  00AB               	movwf	___flmul@a+3
  8695  0A8F  3000               	movlw	0
  8696  0A90  00AA               	movwf	___flmul@a+2
  8697  0A91  3000               	movlw	0
  8698  0A92  00A9               	movwf	___flmul@a+1
  8699  0A93  3000               	movlw	0
  8700  0A94  00A8               	movwf	___flmul@a
  8701  0A95                     l3630:	
  8702  0A95  17AA               	bsf	___flmul@a+2,7
  8703  0A96  2A9F               	goto	l3634
  8704  0A97                     l3632:	
  8705  0A97  3000               	movlw	0
  8706  0A98  00AB               	movwf	___flmul@a+3
  8707  0A99  3000               	movlw	0
  8708  0A9A  00AA               	movwf	___flmul@a+2
  8709  0A9B  3000               	movlw	0
  8710  0A9C  00A9               	movwf	___flmul@a+1
  8711  0A9D  3000               	movlw	0
  8712  0A9E  00A8               	movwf	___flmul@a
  8713  0A9F                     l3634:	
  8714  0A9F  0836               	movf	___flmul@aexp,w
  8715  0AA0  1D03               	btfss	3,2
  8716  0AA1  0837               	movf	___flmul@bexp,w
  8717  0AA2  1D03               	btfss	3,2
  8718  0AA3  2AAD               	goto	l3642
  8719  0AA4  3000               	movlw	0
  8720  0AA5  00A7               	movwf	?___flmul+3
  8721  0AA6  3000               	movlw	0
  8722  0AA7  00A6               	movwf	?___flmul+2
  8723  0AA8  3000               	movlw	0
  8724  0AA9  00A5               	movwf	?___flmul+1
  8725  0AAA  3000               	movlw	0
  8726  0AAB  00A4               	movwf	?___flmul
  8727  0AAC  0008               	return
  8728  0AAD                     l3642:	
  8729  0AAD  0824               	movf	___flmul@b,w
  8730  0AAE  00AC               	movwf	??___flmul
  8731  0AAF  082C               	movf	??___flmul,w
  8732  0AB0  00F0               	movwf	__Umul8_16@multiplicand
  8733  0AB1  082A               	movf	___flmul@a+2,w
  8734  0AB2  319E  2609  318A   	fcall	__Umul8_16
  8735  0AB5  0871               	movf	?__Umul8_16+1,w
  8736  0AB6  0020               	movlb	0	; select bank0
  8737  0AB7  00BD               	movwf	___flmul@temp+1
  8738  0AB8  0870               	movf	?__Umul8_16,w
  8739  0AB9  00BC               	movwf	___flmul@temp
  8740  0ABA  083C               	movf	___flmul@temp,w
  8741  0ABB  00AC               	movwf	??___flmul
  8742  0ABC  01AD               	clrf	??___flmul+1
  8743  0ABD  01AE               	clrf	??___flmul+2
  8744  0ABE  01AF               	clrf	??___flmul+3
  8745  0ABF  082F               	movf	??___flmul+3,w
  8746  0AC0  00B5               	movwf	___flmul@grs+3
  8747  0AC1  082E               	movf	??___flmul+2,w
  8748  0AC2  00B4               	movwf	___flmul@grs+2
  8749  0AC3  082D               	movf	??___flmul+1,w
  8750  0AC4  00B3               	movwf	___flmul@grs+1
  8751  0AC5  082C               	movf	??___flmul,w
  8752  0AC6  00B2               	movwf	___flmul@grs
  8753  0AC7  083D               	movf	___flmul@temp+1,w
  8754  0AC8  00AC               	movwf	??___flmul
  8755  0AC9  01AD               	clrf	??___flmul+1
  8756  0ACA  01AE               	clrf	??___flmul+2
  8757  0ACB  01AF               	clrf	??___flmul+3
  8758  0ACC  082F               	movf	??___flmul+3,w
  8759  0ACD  00BB               	movwf	___flmul@prod+3
  8760  0ACE  082E               	movf	??___flmul+2,w
  8761  0ACF  00BA               	movwf	___flmul@prod+2
  8762  0AD0  082D               	movf	??___flmul+1,w
  8763  0AD1  00B9               	movwf	___flmul@prod+1
  8764  0AD2  082C               	movf	??___flmul,w
  8765  0AD3  00B8               	movwf	___flmul@prod
  8766  0AD4  0825               	movf	___flmul@b+1,w
  8767  0AD5  00AC               	movwf	??___flmul
  8768  0AD6  082C               	movf	??___flmul,w
  8769  0AD7  00F0               	movwf	__Umul8_16@multiplicand
  8770  0AD8  0829               	movf	___flmul@a+1,w
  8771  0AD9  319E  2609  318A   	fcall	__Umul8_16
  8772  0ADC  0871               	movf	?__Umul8_16+1,w
  8773  0ADD  0020               	movlb	0	; select bank0
  8774  0ADE  00BD               	movwf	___flmul@temp+1
  8775  0ADF  0870               	movf	?__Umul8_16,w
  8776  0AE0  00BC               	movwf	___flmul@temp
  8777  0AE1  083C               	movf	___flmul@temp,w
  8778  0AE2  00AC               	movwf	??___flmul
  8779  0AE3  01AD               	clrf	??___flmul+1
  8780  0AE4  01AE               	clrf	??___flmul+2
  8781  0AE5  01AF               	clrf	??___flmul+3
  8782  0AE6  082C               	movf	??___flmul,w
  8783  0AE7  07B2               	addwf	___flmul@grs,f
  8784  0AE8  082D               	movf	??___flmul+1,w
  8785  0AE9  3DB3               	addwfc	___flmul@grs+1,f
  8786  0AEA  082E               	movf	??___flmul+2,w
  8787  0AEB  3DB4               	addwfc	___flmul@grs+2,f
  8788  0AEC  082F               	movf	??___flmul+3,w
  8789  0AED  3DB5               	addwfc	___flmul@grs+3,f
  8790  0AEE  083D               	movf	___flmul@temp+1,w
  8791  0AEF  00AC               	movwf	??___flmul
  8792  0AF0  01AD               	clrf	??___flmul+1
  8793  0AF1  01AE               	clrf	??___flmul+2
  8794  0AF2  01AF               	clrf	??___flmul+3
  8795  0AF3  082C               	movf	??___flmul,w
  8796  0AF4  07B8               	addwf	___flmul@prod,f
  8797  0AF5  082D               	movf	??___flmul+1,w
  8798  0AF6  3DB9               	addwfc	___flmul@prod+1,f
  8799  0AF7  082E               	movf	??___flmul+2,w
  8800  0AF8  3DBA               	addwfc	___flmul@prod+2,f
  8801  0AF9  082F               	movf	??___flmul+3,w
  8802  0AFA  3DBB               	addwfc	___flmul@prod+3,f
  8803  0AFB  0826               	movf	___flmul@b+2,w
  8804  0AFC  00AC               	movwf	??___flmul
  8805  0AFD  082C               	movf	??___flmul,w
  8806  0AFE  00F0               	movwf	__Umul8_16@multiplicand
  8807  0AFF  0828               	movf	___flmul@a,w
  8808  0B00  319E  2609  318A   	fcall	__Umul8_16
  8809  0B03  0871               	movf	?__Umul8_16+1,w
  8810  0B04  0020               	movlb	0	; select bank0
  8811  0B05  00BD               	movwf	___flmul@temp+1
  8812  0B06  0870               	movf	?__Umul8_16,w
  8813  0B07  00BC               	movwf	___flmul@temp
  8814  0B08  083C               	movf	___flmul@temp,w
  8815  0B09  00AC               	movwf	??___flmul
  8816  0B0A  01AD               	clrf	??___flmul+1
  8817  0B0B  01AE               	clrf	??___flmul+2
  8818  0B0C  01AF               	clrf	??___flmul+3
  8819  0B0D  082C               	movf	??___flmul,w
  8820  0B0E  07B2               	addwf	___flmul@grs,f
  8821  0B0F  082D               	movf	??___flmul+1,w
  8822  0B10  3DB3               	addwfc	___flmul@grs+1,f
  8823  0B11  082E               	movf	??___flmul+2,w
  8824  0B12  3DB4               	addwfc	___flmul@grs+2,f
  8825  0B13  082F               	movf	??___flmul+3,w
  8826  0B14  3DB5               	addwfc	___flmul@grs+3,f
  8827  0B15  083D               	movf	___flmul@temp+1,w
  8828  0B16  00AC               	movwf	??___flmul
  8829  0B17  01AD               	clrf	??___flmul+1
  8830  0B18  01AE               	clrf	??___flmul+2
  8831  0B19  01AF               	clrf	??___flmul+3
  8832  0B1A  082C               	movf	??___flmul,w
  8833  0B1B  07B8               	addwf	___flmul@prod,f
  8834  0B1C  082D               	movf	??___flmul+1,w
  8835  0B1D  3DB9               	addwfc	___flmul@prod+1,f
  8836  0B1E  082E               	movf	??___flmul+2,w
  8837  0B1F  3DBA               	addwfc	___flmul@prod+2,f
  8838  0B20  082F               	movf	??___flmul+3,w
  8839  0B21  3DBB               	addwfc	___flmul@prod+3,f
  8840  0B22  3008               	movlw	8
  8841  0B23                     u4395:	
  8842  0B23  35B2               	lslf	___flmul@grs,f
  8843  0B24  0DB3               	rlf	___flmul@grs+1,f
  8844  0B25  0DB4               	rlf	___flmul@grs+2,f
  8845  0B26  0DB5               	rlf	___flmul@grs+3,f
  8846  0B27  0B89               	decfsz	9,f
  8847  0B28  2B23               	goto	u4395
  8848  0B29  0825               	movf	___flmul@b+1,w
  8849  0B2A  00AC               	movwf	??___flmul
  8850  0B2B  082C               	movf	??___flmul,w
  8851  0B2C  00F0               	movwf	__Umul8_16@multiplicand
  8852  0B2D  0828               	movf	___flmul@a,w
  8853  0B2E  319E  2609  318A   	fcall	__Umul8_16
  8854  0B31  0871               	movf	?__Umul8_16+1,w
  8855  0B32  0020               	movlb	0	; select bank0
  8856  0B33  00BD               	movwf	___flmul@temp+1
  8857  0B34  0870               	movf	?__Umul8_16,w
  8858  0B35  00BC               	movwf	___flmul@temp
  8859  0B36  083C               	movf	___flmul@temp,w
  8860  0B37  07B2               	addwf	___flmul@grs,f
  8861  0B38  083D               	movf	___flmul@temp+1,w
  8862  0B39  3DB3               	addwfc	___flmul@grs+1,f
  8863  0B3A  3000               	movlw	0
  8864  0B3B  3DB4               	addwfc	___flmul@grs+2,f
  8865  0B3C  3DB5               	addwfc	___flmul@grs+3,f
  8866  0B3D  0824               	movf	___flmul@b,w
  8867  0B3E  00AC               	movwf	??___flmul
  8868  0B3F  082C               	movf	??___flmul,w
  8869  0B40  00F0               	movwf	__Umul8_16@multiplicand
  8870  0B41  0829               	movf	___flmul@a+1,w
  8871  0B42  319E  2609  318A   	fcall	__Umul8_16
  8872  0B45  0871               	movf	?__Umul8_16+1,w
  8873  0B46  0020               	movlb	0	; select bank0
  8874  0B47  00BD               	movwf	___flmul@temp+1
  8875  0B48  0870               	movf	?__Umul8_16,w
  8876  0B49  00BC               	movwf	___flmul@temp
  8877  0B4A  083C               	movf	___flmul@temp,w
  8878  0B4B  07B2               	addwf	___flmul@grs,f
  8879  0B4C  083D               	movf	___flmul@temp+1,w
  8880  0B4D  3DB3               	addwfc	___flmul@grs+1,f
  8881  0B4E  3000               	movlw	0
  8882  0B4F  3DB4               	addwfc	___flmul@grs+2,f
  8883  0B50  3DB5               	addwfc	___flmul@grs+3,f
  8884  0B51  3008               	movlw	8
  8885  0B52                     u4405:	
  8886  0B52  35B2               	lslf	___flmul@grs,f
  8887  0B53  0DB3               	rlf	___flmul@grs+1,f
  8888  0B54  0DB4               	rlf	___flmul@grs+2,f
  8889  0B55  0DB5               	rlf	___flmul@grs+3,f
  8890  0B56  0B89               	decfsz	9,f
  8891  0B57  2B52               	goto	u4405
  8892  0B58  0824               	movf	___flmul@b,w
  8893  0B59  00AC               	movwf	??___flmul
  8894  0B5A  082C               	movf	??___flmul,w
  8895  0B5B  00F0               	movwf	__Umul8_16@multiplicand
  8896  0B5C  0828               	movf	___flmul@a,w
  8897  0B5D  319E  2609  318A   	fcall	__Umul8_16
  8898  0B60  0871               	movf	?__Umul8_16+1,w
  8899  0B61  0020               	movlb	0	; select bank0
  8900  0B62  00BD               	movwf	___flmul@temp+1
  8901  0B63  0870               	movf	?__Umul8_16,w
  8902  0B64  00BC               	movwf	___flmul@temp
  8903  0B65  083C               	movf	___flmul@temp,w
  8904  0B66  07B2               	addwf	___flmul@grs,f
  8905  0B67  083D               	movf	___flmul@temp+1,w
  8906  0B68  3DB3               	addwfc	___flmul@grs+1,f
  8907  0B69  3000               	movlw	0
  8908  0B6A  3DB4               	addwfc	___flmul@grs+2,f
  8909  0B6B  3DB5               	addwfc	___flmul@grs+3,f
  8910  0B6C  0825               	movf	___flmul@b+1,w
  8911  0B6D  00AC               	movwf	??___flmul
  8912  0B6E  082C               	movf	??___flmul,w
  8913  0B6F  00F0               	movwf	__Umul8_16@multiplicand
  8914  0B70  082A               	movf	___flmul@a+2,w
  8915  0B71  319E  2609  318A   	fcall	__Umul8_16
  8916  0B74  0871               	movf	?__Umul8_16+1,w
  8917  0B75  0020               	movlb	0	; select bank0
  8918  0B76  00BD               	movwf	___flmul@temp+1
  8919  0B77  0870               	movf	?__Umul8_16,w
  8920  0B78  00BC               	movwf	___flmul@temp
  8921  0B79  083C               	movf	___flmul@temp,w
  8922  0B7A  07B8               	addwf	___flmul@prod,f
  8923  0B7B  083D               	movf	___flmul@temp+1,w
  8924  0B7C  3DB9               	addwfc	___flmul@prod+1,f
  8925  0B7D  3000               	movlw	0
  8926  0B7E  3DBA               	addwfc	___flmul@prod+2,f
  8927  0B7F  3DBB               	addwfc	___flmul@prod+3,f
  8928  0B80  0826               	movf	___flmul@b+2,w
  8929  0B81  00AC               	movwf	??___flmul
  8930  0B82  082C               	movf	??___flmul,w
  8931  0B83  00F0               	movwf	__Umul8_16@multiplicand
  8932  0B84  0829               	movf	___flmul@a+1,w
  8933  0B85  319E  2609  318A   	fcall	__Umul8_16
  8934  0B88  0871               	movf	?__Umul8_16+1,w
  8935  0B89  0020               	movlb	0	; select bank0
  8936  0B8A  00BD               	movwf	___flmul@temp+1
  8937  0B8B  0870               	movf	?__Umul8_16,w
  8938  0B8C  00BC               	movwf	___flmul@temp
  8939  0B8D  083C               	movf	___flmul@temp,w
  8940  0B8E  07B8               	addwf	___flmul@prod,f
  8941  0B8F  083D               	movf	___flmul@temp+1,w
  8942  0B90  3DB9               	addwfc	___flmul@prod+1,f
  8943  0B91  3000               	movlw	0
  8944  0B92  3DBA               	addwfc	___flmul@prod+2,f
  8945  0B93  3DBB               	addwfc	___flmul@prod+3,f
  8946  0B94  0826               	movf	___flmul@b+2,w
  8947  0B95  00AC               	movwf	??___flmul
  8948  0B96  082C               	movf	??___flmul,w
  8949  0B97  00F0               	movwf	__Umul8_16@multiplicand
  8950  0B98  082A               	movf	___flmul@a+2,w
  8951  0B99  319E  2609  318A   	fcall	__Umul8_16
  8952  0B9C  0871               	movf	?__Umul8_16+1,w
  8953  0B9D  0020               	movlb	0	; select bank0
  8954  0B9E  00BD               	movwf	___flmul@temp+1
  8955  0B9F  0870               	movf	?__Umul8_16,w
  8956  0BA0  00BC               	movwf	___flmul@temp
  8957  0BA1  083C               	movf	___flmul@temp,w
  8958  0BA2  00AC               	movwf	??___flmul
  8959  0BA3  083D               	movf	___flmul@temp+1,w
  8960  0BA4  00AD               	movwf	??___flmul+1
  8961  0BA5  01AE               	clrf	??___flmul+2
  8962  0BA6  01AF               	clrf	??___flmul+3
  8963  0BA7  3008               	movlw	8
  8964  0BA8                     u4415:	
  8965  0BA8  35AC               	lslf	??___flmul,f
  8966  0BA9  0DAD               	rlf	??___flmul+1,f
  8967  0BAA  0DAE               	rlf	??___flmul+2,f
  8968  0BAB  0DAF               	rlf	??___flmul+3,f
  8969  0BAC  0B89               	decfsz	9,f
  8970  0BAD  2BA8               	goto	u4415
  8971  0BAE  082C               	movf	??___flmul,w
  8972  0BAF  07B8               	addwf	___flmul@prod,f
  8973  0BB0  082D               	movf	??___flmul+1,w
  8974  0BB1  3DB9               	addwfc	___flmul@prod+1,f
  8975  0BB2  082E               	movf	??___flmul+2,w
  8976  0BB3  3DBA               	addwfc	___flmul@prod+2,f
  8977  0BB4  082F               	movf	??___flmul+3,w
  8978  0BB5  3DBB               	addwfc	___flmul@prod+3,f
  8979  0BB6  0832               	movf	___flmul@grs,w
  8980  0BB7  00AC               	movwf	??___flmul
  8981  0BB8  0833               	movf	___flmul@grs+1,w
  8982  0BB9  00AD               	movwf	??___flmul+1
  8983  0BBA  0834               	movf	___flmul@grs+2,w
  8984  0BBB  00AE               	movwf	??___flmul+2
  8985  0BBC  0835               	movf	___flmul@grs+3,w
  8986  0BBD  00AF               	movwf	??___flmul+3
  8987  0BBE  3018               	movlw	24
  8988  0BBF                     u4425:	
  8989  0BBF  36AF               	lsrf	??___flmul+3,f
  8990  0BC0  0CAE               	rrf	??___flmul+2,f
  8991  0BC1  0CAD               	rrf	??___flmul+1,f
  8992  0BC2  0CAC               	rrf	??___flmul,f
  8993  0BC3  0B89               	decfsz	9,f
  8994  0BC4  2BBF               	goto	u4425
  8995  0BC5  082C               	movf	??___flmul,w
  8996  0BC6  07B8               	addwf	___flmul@prod,f
  8997  0BC7  082D               	movf	??___flmul+1,w
  8998  0BC8  3DB9               	addwfc	___flmul@prod+1,f
  8999  0BC9  082E               	movf	??___flmul+2,w
  9000  0BCA  3DBA               	addwfc	___flmul@prod+2,f
  9001  0BCB  082F               	movf	??___flmul+3,w
  9002  0BCC  3DBB               	addwfc	___flmul@prod+3,f
  9003  0BCD  3008               	movlw	8
  9004  0BCE                     u4435:	
  9005  0BCE  35B2               	lslf	___flmul@grs,f
  9006  0BCF  0DB3               	rlf	___flmul@grs+1,f
  9007  0BD0  0DB4               	rlf	___flmul@grs+2,f
  9008  0BD1  0DB5               	rlf	___flmul@grs+3,f
  9009  0BD2  0B89               	decfsz	9,f
  9010  0BD3  2BCE               	goto	u4435
  9011  0BD4  0837               	movf	___flmul@bexp,w
  9012  0BD5  0736               	addwf	___flmul@aexp,w
  9013  0BD6  00AC               	movwf	??___flmul
  9014  0BD7  01AD               	clrf	??___flmul+1
  9015  0BD8  0DAD               	rlf	??___flmul+1,f
  9016  0BD9  082C               	movf	??___flmul,w
  9017  0BDA  3E82               	addlw	130
  9018  0BDB  00BC               	movwf	___flmul@temp
  9019  0BDC  30FF               	movlw	255
  9020  0BDD  3D2D               	addwfc	??___flmul+1,w
  9021  0BDE  00BD               	movwf	___flmul@temp+1
  9022  0BDF                     l3694:	
  9023  0BDF  1BBA               	btfsc	___flmul@prod+2,7
  9024  0BE0  2BF6               	goto	l3696
  9025  0BE1  3001               	movlw	1
  9026  0BE2                     u4445:	
  9027  0BE2  35B8               	lslf	___flmul@prod,f
  9028  0BE3  0DB9               	rlf	___flmul@prod+1,f
  9029  0BE4  0DBA               	rlf	___flmul@prod+2,f
  9030  0BE5  0DBB               	rlf	___flmul@prod+3,f
  9031  0BE6  0B89               	decfsz	9,f
  9032  0BE7  2BE2               	goto	u4445
  9033  0BE8  1BB5               	btfsc	___flmul@grs+3,7
  9034  0BE9  1438               	bsf	___flmul@prod,0
  9035  0BEA  3001               	movlw	1
  9036  0BEB                     u4465:	
  9037  0BEB  35B2               	lslf	___flmul@grs,f
  9038  0BEC  0DB3               	rlf	___flmul@grs+1,f
  9039  0BED  0DB4               	rlf	___flmul@grs+2,f
  9040  0BEE  0DB5               	rlf	___flmul@grs+3,f
  9041  0BEF  0B89               	decfsz	9,f
  9042  0BF0  2BEB               	goto	u4465
  9043  0BF1  30FF               	movlw	255
  9044  0BF2  07BC               	addwf	___flmul@temp,f
  9045  0BF3  30FF               	movlw	255
  9046  0BF4  3DBD               	addwfc	___flmul@temp+1,f
  9047  0BF5  2BDF               	goto	l3694
  9048  0BF6                     l3696:	
  9049  0BF6  01B6               	clrf	___flmul@aexp
  9050  0BF7  1FB5               	btfss	___flmul@grs+3,7
  9051  0BF8  2C0F               	goto	l3706
  9052  0BF9  30FF               	movlw	255
  9053  0BFA  0532               	andwf	___flmul@grs,w
  9054  0BFB  00AC               	movwf	??___flmul
  9055  0BFC  30FF               	movlw	255
  9056  0BFD  0533               	andwf	___flmul@grs+1,w
  9057  0BFE  00AD               	movwf	??___flmul+1
  9058  0BFF  30FF               	movlw	255
  9059  0C00  0534               	andwf	___flmul@grs+2,w
  9060  0C01  00AE               	movwf	??___flmul+2
  9061  0C02  307F               	movlw	127
  9062  0C03  0535               	andwf	___flmul@grs+3,w
  9063  0C04  00AF               	movwf	??___flmul+3
  9064  0C05  082F               	movf	??___flmul+3,w
  9065  0C06  042E               	iorwf	??___flmul+2,w
  9066  0C07  042D               	iorwf	??___flmul+1,w
  9067  0C08  042C               	iorwf	??___flmul,w
  9068  0C09  1903               	skipnz
  9069  0C0A  1838               	btfsc	___flmul@prod,0
  9070  0C0B  2C0D               	goto	l3702
  9071  0C0C  2C0F               	goto	l3706
  9072  0C0D                     l3702:	
  9073  0C0D  01B6               	clrf	___flmul@aexp
  9074  0C0E  0AB6               	incf	___flmul@aexp,f
  9075  0C0F                     l3706:	
  9076  0C0F  0836               	movf	___flmul@aexp,w
  9077  0C10  1903               	btfsc	3,2
  9078  0C11  2C38               	goto	l3716
  9079  0C12  3001               	movlw	1
  9080  0C13  07B8               	addwf	___flmul@prod,f
  9081  0C14  3000               	movlw	0
  9082  0C15  3DB9               	addwfc	___flmul@prod+1,f
  9083  0C16  3000               	movlw	0
  9084  0C17  3DBA               	addwfc	___flmul@prod+2,f
  9085  0C18  3000               	movlw	0
  9086  0C19  3DBB               	addwfc	___flmul@prod+3,f
  9087  0C1A  1C3B               	btfss	___flmul@prod+3,0
  9088  0C1B  2C38               	goto	l3716
  9089  0C1C  0838               	movf	___flmul@prod,w
  9090  0C1D  00AC               	movwf	??___flmul
  9091  0C1E  0839               	movf	___flmul@prod+1,w
  9092  0C1F  00AD               	movwf	??___flmul+1
  9093  0C20  083A               	movf	___flmul@prod+2,w
  9094  0C21  00AE               	movwf	??___flmul+2
  9095  0C22  083B               	movf	___flmul@prod+3,w
  9096  0C23  00AF               	movwf	??___flmul+3
  9097  0C24  3001               	movlw	1
  9098  0C25  00B0               	movwf	??___flmul+4
  9099  0C26                     u4535:	
  9100  0C26  37AF               	asrf	??___flmul+3,f
  9101  0C27  0CAE               	rrf	??___flmul+2,f
  9102  0C28  0CAD               	rrf	??___flmul+1,f
  9103  0C29  0CAC               	rrf	??___flmul,f
  9104  0C2A  0BB0               	decfsz	??___flmul+4,f
  9105  0C2B  2C26               	goto	u4535
  9106  0C2C  082F               	movf	??___flmul+3,w
  9107  0C2D  00BB               	movwf	___flmul@prod+3
  9108  0C2E  082E               	movf	??___flmul+2,w
  9109  0C2F  00BA               	movwf	___flmul@prod+2
  9110  0C30  082D               	movf	??___flmul+1,w
  9111  0C31  00B9               	movwf	___flmul@prod+1
  9112  0C32  082C               	movf	??___flmul,w
  9113  0C33  00B8               	movwf	___flmul@prod
  9114  0C34  3001               	movlw	1
  9115  0C35  07BC               	addwf	___flmul@temp,f
  9116  0C36  3000               	movlw	0
  9117  0C37  3DBD               	addwfc	___flmul@temp+1,f
  9118  0C38                     l3716:	
  9119  0C38  083D               	movf	___flmul@temp+1,w
  9120  0C39  3A80               	xorlw	128
  9121  0C3A  00AC               	movwf	??___flmul
  9122  0C3B  3080               	movlw	128
  9123  0C3C  022C               	subwf	??___flmul,w
  9124  0C3D  1D03               	skipz
  9125  0C3E  2C41               	goto	u4545
  9126  0C3F  30FF               	movlw	255
  9127  0C40  023C               	subwf	___flmul@temp,w
  9128  0C41                     u4545:	
  9129  0C41  1C03               	skipc
  9130  0C42  2C4D               	goto	l3720
  9131  0C43  307F               	movlw	127
  9132  0C44  0020               	movlb	0	; select bank0
  9133  0C45  00BB               	movwf	___flmul@prod+3
  9134  0C46  3080               	movlw	128
  9135  0C47  00BA               	movwf	___flmul@prod+2
  9136  0C48  3000               	movlw	0
  9137  0C49  00B9               	movwf	___flmul@prod+1
  9138  0C4A  3000               	movlw	0
  9139  0C4B  00B8               	movwf	___flmul@prod
  9140  0C4C  2C77               	goto	l1182
  9141  0C4D                     l3720:	
  9142  0C4D  0020               	movlb	0	; select bank0
  9143  0C4E  083D               	movf	___flmul@temp+1,w
  9144  0C4F  3A80               	xorlw	128
  9145  0C50  00AC               	movwf	??___flmul
  9146  0C51  3080               	movlw	128
  9147  0C52  022C               	subwf	??___flmul,w
  9148  0C53  1D03               	skipz
  9149  0C54  2C57               	goto	u4555
  9150  0C55  3001               	movlw	1
  9151  0C56  023C               	subwf	___flmul@temp,w
  9152  0C57                     u4555:	
  9153  0C57  1803               	skipnc
  9154  0C58  2C64               	goto	l3726
  9155  0C59  3000               	movlw	0
  9156  0C5A  0020               	movlb	0	; select bank0
  9157  0C5B  00BB               	movwf	___flmul@prod+3
  9158  0C5C  3000               	movlw	0
  9159  0C5D  00BA               	movwf	___flmul@prod+2
  9160  0C5E  3000               	movlw	0
  9161  0C5F  00B9               	movwf	___flmul@prod+1
  9162  0C60  3000               	movlw	0
  9163  0C61  00B8               	movwf	___flmul@prod
  9164  0C62  01B1               	clrf	___flmul@sign
  9165  0C63  2C77               	goto	l1182
  9166  0C64                     l3726:	
  9167  0C64  0020               	movlb	0	; select bank0
  9168  0C65  083C               	movf	___flmul@temp,w
  9169  0C66  00AC               	movwf	??___flmul
  9170  0C67  082C               	movf	??___flmul,w
  9171  0C68  00B7               	movwf	___flmul@bexp
  9172  0C69  30FF               	movlw	255
  9173  0C6A  05B8               	andwf	___flmul@prod,f
  9174  0C6B  30FF               	movlw	255
  9175  0C6C  05B9               	andwf	___flmul@prod+1,f
  9176  0C6D  307F               	movlw	127
  9177  0C6E  05BA               	andwf	___flmul@prod+2,f
  9178  0C6F  3000               	movlw	0
  9179  0C70  05BB               	andwf	___flmul@prod+3,f
  9180  0C71  1837               	btfsc	___flmul@bexp,0
  9181  0C72  17BA               	bsf	___flmul@prod+2,7
  9182  0C73  3637               	lsrf	___flmul@bexp,w
  9183  0C74  00AC               	movwf	??___flmul
  9184  0C75  082C               	movf	??___flmul,w
  9185  0C76  00BB               	movwf	___flmul@prod+3
  9186  0C77                     l1182:	
  9187  0C77  0831               	movf	___flmul@sign,w
  9188  0C78  00AC               	movwf	??___flmul
  9189  0C79  082C               	movf	??___flmul,w
  9190  0C7A  04BB               	iorwf	___flmul@prod+3,f
  9191  0C7B  083B               	movf	___flmul@prod+3,w
  9192  0C7C  00A7               	movwf	?___flmul+3
  9193  0C7D  083A               	movf	___flmul@prod+2,w
  9194  0C7E  00A6               	movwf	?___flmul+2
  9195  0C7F  0839               	movf	___flmul@prod+1,w
  9196  0C80  00A5               	movwf	?___flmul+1
  9197  0C81  0838               	movf	___flmul@prod,w
  9198  0C82  00A4               	movwf	?___flmul
  9199  0C83  0008               	return
  9200  0C84                     __end_of___flmul:	
  9201                           
  9202                           	psect	text15
  9203  1E09                     __ptext15:	
  9204 ;; *************** function __Umul8_16 *****************
  9205 ;; Defined at:
  9206 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  multiplier      1    wreg     unsigned char 
  9209 ;;  multiplicand    1    0[COMMON] unsigned char 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  multiplier      1    8[COMMON] unsigned char 
  9212 ;;  word_mpld       2    6[COMMON] unsigned int 
  9213 ;;  product         2    4[COMMON] unsigned int 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  2    0[COMMON] unsigned int 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2, status,0
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;Total ram usage:        9 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		___flmul
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           
  9237                           ;psect for function __Umul8_16
  9238  1E09                     __Umul8_16:	
  9239                           
  9240                           ;incstack = 0
  9241                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9242                           ;__Umul8_16@multiplier stored from wreg
  9243  1E09  00F8               	movwf	__Umul8_16@multiplier
  9244  1E0A  01F4               	clrf	__Umul8_16@product
  9245  1E0B  01F5               	clrf	__Umul8_16@product+1
  9246  1E0C  0870               	movf	__Umul8_16@multiplicand,w
  9247  1E0D  00F2               	movwf	??__Umul8_16
  9248  1E0E  01F3               	clrf	??__Umul8_16+1
  9249  1E0F  0872               	movf	??__Umul8_16,w
  9250  1E10  00F6               	movwf	__Umul8_16@word_mpld
  9251  1E11  0873               	movf	??__Umul8_16+1,w
  9252  1E12  00F7               	movwf	__Umul8_16@word_mpld+1
  9253  1E13                     l3106:	
  9254  1E13  1C78               	btfss	__Umul8_16@multiplier,0
  9255  1E14  2E19               	goto	l1252
  9256  1E15  0876               	movf	__Umul8_16@word_mpld,w
  9257  1E16  07F4               	addwf	__Umul8_16@product,f
  9258  1E17  0877               	movf	__Umul8_16@word_mpld+1,w
  9259  1E18  3DF5               	addwfc	__Umul8_16@product+1,f
  9260  1E19                     l1252:	
  9261  1E19  3001               	movlw	1
  9262  1E1A                     u3215:	
  9263  1E1A  35F6               	lslf	__Umul8_16@word_mpld,f
  9264  1E1B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9265  1E1C  0B89               	decfsz	9,f
  9266  1E1D  2E1A               	goto	u3215
  9267  1E1E  1003               	clrc
  9268  1E1F  0CF8               	rrf	__Umul8_16@multiplier,f
  9269  1E20  0878               	movf	__Umul8_16@multiplier,w
  9270  1E21  1D03               	btfss	3,2
  9271  1E22  2E13               	goto	l3106
  9272  1E23  0875               	movf	__Umul8_16@product+1,w
  9273  1E24  00F1               	movwf	?__Umul8_16+1
  9274  1E25  0874               	movf	__Umul8_16@product,w
  9275  1E26  00F0               	movwf	?__Umul8_16
  9276  1E27  0008               	return
  9277  1E28                     __end_of__Umul8_16:	
  9278                           
  9279                           	psect	text16
  9280  1469                     __ptext16:	
  9281 ;; *************** function __tdiv_to_l_ *****************
  9282 ;; Defined at:
  9283 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  f1              4    0[COMMON] float 
  9286 ;;  f2              4    4[COMMON] float 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  quot            4    0[BANK0 ] unsigned long 
  9289 ;;  exp1            1    5[BANK0 ] unsigned char 
  9290 ;;  cntr            1    4[BANK0 ] unsigned char 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  4    0[COMMON] unsigned long 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;Total ram usage:       18 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		__doprnt
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           
  9314                           ;psect for function __tdiv_to_l_
  9315  1469                     __tdiv_to_l_:	
  9316                           
  9317                           ;incstack = 0
  9318                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  9319  1469  0870               	movf	__tdiv_to_l_@f1,w
  9320  146A  00F8               	movwf	??__tdiv_to_l_
  9321  146B  0871               	movf	__tdiv_to_l_@f1+1,w
  9322  146C  00F9               	movwf	??__tdiv_to_l_+1
  9323  146D  0872               	movf	__tdiv_to_l_@f1+2,w
  9324  146E  00FA               	movwf	??__tdiv_to_l_+2
  9325  146F  1003               	clrc
  9326  1470  0D79               	rlf	??__tdiv_to_l_+1,w
  9327  1471  0D7A               	rlf	??__tdiv_to_l_+2,w
  9328  1472  00FB               	movwf	??__tdiv_to_l_+3
  9329  1473  087B               	movf	??__tdiv_to_l_+3,w
  9330  1474  0020               	movlb	0	; select bank0
  9331  1475  00A5               	movwf	__tdiv_to_l_@exp1
  9332  1476  0825               	movf	__tdiv_to_l_@exp1,w
  9333  1477  1D03               	btfss	3,2
  9334  1478  2C82               	goto	l3882
  9335  1479                     l3878:	
  9336  1479  3000               	movlw	0
  9337  147A  00F3               	movwf	?__tdiv_to_l_+3
  9338  147B  3000               	movlw	0
  9339  147C  00F2               	movwf	?__tdiv_to_l_+2
  9340  147D  3000               	movlw	0
  9341  147E  00F1               	movwf	?__tdiv_to_l_+1
  9342  147F  3000               	movlw	0
  9343  1480  00F0               	movwf	?__tdiv_to_l_
  9344  1481  0008               	return
  9345  1482                     l3882:	
  9346  1482  0874               	movf	__tdiv_to_l_@f2,w
  9347  1483  00F8               	movwf	??__tdiv_to_l_
  9348  1484  0875               	movf	__tdiv_to_l_@f2+1,w
  9349  1485  00F9               	movwf	??__tdiv_to_l_+1
  9350  1486  0876               	movf	__tdiv_to_l_@f2+2,w
  9351  1487  00FA               	movwf	??__tdiv_to_l_+2
  9352  1488  1003               	clrc
  9353  1489  0D79               	rlf	??__tdiv_to_l_+1,w
  9354  148A  0D7A               	rlf	??__tdiv_to_l_+2,w
  9355  148B  00FB               	movwf	??__tdiv_to_l_+3
  9356  148C  087B               	movf	??__tdiv_to_l_+3,w
  9357  148D  00A4               	movwf	__tdiv_to_l_@cntr
  9358  148E  0824               	movf	__tdiv_to_l_@cntr,w
  9359  148F  1903               	btfsc	3,2
  9360  1490  2C79               	goto	l3878
  9361  1491  17F1               	bsf	__tdiv_to_l_@f1+1,7
  9362  1492  30FF               	movlw	255
  9363  1493  05F0               	andwf	__tdiv_to_l_@f1,f
  9364  1494  30FF               	movlw	255
  9365  1495  05F1               	andwf	__tdiv_to_l_@f1+1,f
  9366  1496  3000               	movlw	0
  9367  1497  05F2               	andwf	__tdiv_to_l_@f1+2,f
  9368  1498  17F5               	bsf	__tdiv_to_l_@f2+1,7
  9369  1499  30FF               	movlw	255
  9370  149A  05F4               	andwf	__tdiv_to_l_@f2,f
  9371  149B  30FF               	movlw	255
  9372  149C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  9373  149D  3000               	movlw	0
  9374  149E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  9375  149F  3000               	movlw	0
  9376  14A0  00A3               	movwf	__tdiv_to_l_@quot+3
  9377  14A1  3000               	movlw	0
  9378  14A2  00A2               	movwf	__tdiv_to_l_@quot+2
  9379  14A3  3000               	movlw	0
  9380  14A4  00A1               	movwf	__tdiv_to_l_@quot+1
  9381  14A5  3000               	movlw	0
  9382  14A6  00A0               	movwf	__tdiv_to_l_@quot
  9383  14A7  307F               	movlw	127
  9384  14A8  02A5               	subwf	__tdiv_to_l_@exp1,f
  9385  14A9  3098               	movlw	152
  9386  14AA  0724               	addwf	__tdiv_to_l_@cntr,w
  9387  14AB  00F8               	movwf	??__tdiv_to_l_
  9388  14AC  0878               	movf	??__tdiv_to_l_,w
  9389  14AD  02A5               	subwf	__tdiv_to_l_@exp1,f
  9390  14AE  3018               	movlw	24
  9391  14AF  00F8               	movwf	??__tdiv_to_l_
  9392  14B0  0878               	movf	??__tdiv_to_l_,w
  9393  14B1  00A4               	movwf	__tdiv_to_l_@cntr
  9394  14B2                     l3896:	
  9395  14B2  3001               	movlw	1
  9396  14B3                     u4835:	
  9397  14B3  35A0               	lslf	__tdiv_to_l_@quot,f
  9398  14B4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9399  14B5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9400  14B6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9401  14B7  0B89               	decfsz	9,f
  9402  14B8  2CB3               	goto	u4835
  9403  14B9  0876               	movf	__tdiv_to_l_@f2+2,w
  9404  14BA  0272               	subwf	__tdiv_to_l_@f1+2,w
  9405  14BB  1D03               	skipz
  9406  14BC  2CC3               	goto	u4845
  9407  14BD  0875               	movf	__tdiv_to_l_@f2+1,w
  9408  14BE  0271               	subwf	__tdiv_to_l_@f1+1,w
  9409  14BF  1D03               	skipz
  9410  14C0  2CC3               	goto	u4845
  9411  14C1  0874               	movf	__tdiv_to_l_@f2,w
  9412  14C2  0270               	subwf	__tdiv_to_l_@f1,w
  9413  14C3                     u4845:	
  9414  14C3  1C03               	skipc
  9415  14C4  2CCC               	goto	l3904
  9416  14C5  0874               	movf	__tdiv_to_l_@f2,w
  9417  14C6  02F0               	subwf	__tdiv_to_l_@f1,f
  9418  14C7  0875               	movf	__tdiv_to_l_@f2+1,w
  9419  14C8  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  9420  14C9  0876               	movf	__tdiv_to_l_@f2+2,w
  9421  14CA  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  9422  14CB  1420               	bsf	__tdiv_to_l_@quot,0
  9423  14CC                     l3904:	
  9424  14CC  3001               	movlw	1
  9425  14CD                     u4855:	
  9426  14CD  35F0               	lslf	__tdiv_to_l_@f1,f
  9427  14CE  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  9428  14CF  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  9429  14D0  0B89               	decfsz	9,f
  9430  14D1  2CCD               	goto	u4855
  9431  14D2  3001               	movlw	1
  9432  14D3  02A4               	subwf	__tdiv_to_l_@cntr,f
  9433  14D4  1D03               	btfss	3,2
  9434  14D5  2CB2               	goto	l3896
  9435  14D6  1FA5               	btfss	__tdiv_to_l_@exp1,7
  9436  14D7  2CEB               	goto	l3916
  9437  14D8  0825               	movf	__tdiv_to_l_@exp1,w
  9438  14D9  3A80               	xorlw	128
  9439  14DA  3E97               	addlw	151
  9440  14DB  1C03               	btfss	3,0
  9441  14DC  2C79               	goto	l3878
  9442  14DD                     l3914:	
  9443  14DD  3001               	movlw	1
  9444  14DE                     u4895:	
  9445  14DE  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  9446  14DF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  9447  14E0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  9448  14E1  0CA0               	rrf	__tdiv_to_l_@quot,f
  9449  14E2  0B89               	decfsz	9,f
  9450  14E3  2CDE               	goto	u4895
  9451  14E4  3001               	movlw	1
  9452  14E5  00F8               	movwf	??__tdiv_to_l_
  9453  14E6  0878               	movf	??__tdiv_to_l_,w
  9454  14E7  07A5               	addwf	__tdiv_to_l_@exp1,f
  9455  14E8  1903               	btfsc	3,2
  9456  14E9  2CFC               	goto	l3924
  9457  14EA  2CDD               	goto	l3914
  9458  14EB                     l3916:	
  9459  14EB  3018               	movlw	24
  9460  14EC  0225               	subwf	__tdiv_to_l_@exp1,w
  9461  14ED  1803               	btfsc	3,0
  9462  14EE  2C79               	goto	l3878
  9463  14EF                     l975:	
  9464  14EF  0825               	movf	__tdiv_to_l_@exp1,w
  9465  14F0  1903               	btfsc	3,2
  9466  14F1  2CFC               	goto	l3924
  9467  14F2  3001               	movlw	1
  9468  14F3                     u4925:	
  9469  14F3  35A0               	lslf	__tdiv_to_l_@quot,f
  9470  14F4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9471  14F5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9472  14F6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9473  14F7  0B89               	decfsz	9,f
  9474  14F8  2CF3               	goto	u4925
  9475  14F9  3001               	movlw	1
  9476  14FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  9477  14FB  2CEF               	goto	l975
  9478  14FC                     l3924:	
  9479  14FC  0823               	movf	__tdiv_to_l_@quot+3,w
  9480  14FD  00F3               	movwf	?__tdiv_to_l_+3
  9481  14FE  0822               	movf	__tdiv_to_l_@quot+2,w
  9482  14FF  00F2               	movwf	?__tdiv_to_l_+2
  9483  1500  0821               	movf	__tdiv_to_l_@quot+1,w
  9484  1501  00F1               	movwf	?__tdiv_to_l_+1
  9485  1502  0820               	movf	__tdiv_to_l_@quot,w
  9486  1503  00F0               	movwf	?__tdiv_to_l_
  9487  1504  0008               	return
  9488  1505                     __end_of__tdiv_to_l_:	
  9489                           
  9490                           	psect	text17
  9491  13CE                     __ptext17:	
  9492 ;; *************** function __div_to_l_ *****************
  9493 ;; Defined at:
  9494 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  f1              4    0[COMMON] unsigned long 
  9497 ;;  f2              4    4[COMMON] unsigned long 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  quot            4    0[BANK0 ] unsigned long 
  9500 ;;  exp1            1    5[BANK0 ] unsigned char 
  9501 ;;  cntr            1    4[BANK0 ] unsigned char 
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  4    0[COMMON] unsigned long 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9511 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;Total ram usage:       15 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		__doprnt
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function __div_to_l_
  9526  13CE                     __div_to_l_:	
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  9530  13CE  1003               	clrc
  9531  13CF  0D72               	rlf	__div_to_l_@f1+2,w
  9532  13D0  0D73               	rlf	__div_to_l_@f1+3,w
  9533  13D1  00F8               	movwf	??__div_to_l_
  9534  13D2  0878               	movf	??__div_to_l_,w
  9535  13D3  0020               	movlb	0	; select bank0
  9536  13D4  00A5               	movwf	__div_to_l_@exp1
  9537  13D5  0825               	movf	__div_to_l_@exp1,w
  9538  13D6  1D03               	btfss	3,2
  9539  13D7  2BE1               	goto	l3934
  9540  13D8                     l3930:	
  9541  13D8  3000               	movlw	0
  9542  13D9  00F3               	movwf	?__div_to_l_+3
  9543  13DA  3000               	movlw	0
  9544  13DB  00F2               	movwf	?__div_to_l_+2
  9545  13DC  3000               	movlw	0
  9546  13DD  00F1               	movwf	?__div_to_l_+1
  9547  13DE  3000               	movlw	0
  9548  13DF  00F0               	movwf	?__div_to_l_
  9549  13E0  0008               	return
  9550  13E1                     l3934:	
  9551  13E1  1003               	clrc
  9552  13E2  0D76               	rlf	__div_to_l_@f2+2,w
  9553  13E3  0D77               	rlf	__div_to_l_@f2+3,w
  9554  13E4  00F8               	movwf	??__div_to_l_
  9555  13E5  0878               	movf	??__div_to_l_,w
  9556  13E6  00A4               	movwf	__div_to_l_@cntr
  9557  13E7  0824               	movf	__div_to_l_@cntr,w
  9558  13E8  1903               	btfsc	3,2
  9559  13E9  2BD8               	goto	l3930
  9560  13EA  17F2               	bsf	__div_to_l_@f1+2,7
  9561  13EB  30FF               	movlw	255
  9562  13EC  05F0               	andwf	__div_to_l_@f1,f
  9563  13ED  30FF               	movlw	255
  9564  13EE  05F1               	andwf	__div_to_l_@f1+1,f
  9565  13EF  30FF               	movlw	255
  9566  13F0  05F2               	andwf	__div_to_l_@f1+2,f
  9567  13F1  3000               	movlw	0
  9568  13F2  05F3               	andwf	__div_to_l_@f1+3,f
  9569  13F3  17F6               	bsf	__div_to_l_@f2+2,7
  9570  13F4  30FF               	movlw	255
  9571  13F5  05F4               	andwf	__div_to_l_@f2,f
  9572  13F6  30FF               	movlw	255
  9573  13F7  05F5               	andwf	__div_to_l_@f2+1,f
  9574  13F8  30FF               	movlw	255
  9575  13F9  05F6               	andwf	__div_to_l_@f2+2,f
  9576  13FA  3000               	movlw	0
  9577  13FB  05F7               	andwf	__div_to_l_@f2+3,f
  9578  13FC  3000               	movlw	0
  9579  13FD  00A3               	movwf	__div_to_l_@quot+3
  9580  13FE  3000               	movlw	0
  9581  13FF  00A2               	movwf	__div_to_l_@quot+2
  9582  1400  3000               	movlw	0
  9583  1401  00A1               	movwf	__div_to_l_@quot+1
  9584  1402  3000               	movlw	0
  9585  1403  00A0               	movwf	__div_to_l_@quot
  9586  1404  307F               	movlw	127
  9587  1405  02A5               	subwf	__div_to_l_@exp1,f
  9588  1406  30A0               	movlw	160
  9589  1407  0724               	addwf	__div_to_l_@cntr,w
  9590  1408  00F8               	movwf	??__div_to_l_
  9591  1409  0878               	movf	??__div_to_l_,w
  9592  140A  02A5               	subwf	__div_to_l_@exp1,f
  9593  140B  3020               	movlw	32
  9594  140C  00F8               	movwf	??__div_to_l_
  9595  140D  0878               	movf	??__div_to_l_,w
  9596  140E  00A4               	movwf	__div_to_l_@cntr
  9597  140F                     l3948:	
  9598  140F  3001               	movlw	1
  9599  1410                     u4965:	
  9600  1410  35A0               	lslf	__div_to_l_@quot,f
  9601  1411  0DA1               	rlf	__div_to_l_@quot+1,f
  9602  1412  0DA2               	rlf	__div_to_l_@quot+2,f
  9603  1413  0DA3               	rlf	__div_to_l_@quot+3,f
  9604  1414  0B89               	decfsz	9,f
  9605  1415  2C10               	goto	u4965
  9606  1416  0877               	movf	__div_to_l_@f2+3,w
  9607  1417  0273               	subwf	__div_to_l_@f1+3,w
  9608  1418  1D03               	skipz
  9609  1419  2C24               	goto	u4975
  9610  141A  0876               	movf	__div_to_l_@f2+2,w
  9611  141B  0272               	subwf	__div_to_l_@f1+2,w
  9612  141C  1D03               	skipz
  9613  141D  2C24               	goto	u4975
  9614  141E  0875               	movf	__div_to_l_@f2+1,w
  9615  141F  0271               	subwf	__div_to_l_@f1+1,w
  9616  1420  1D03               	skipz
  9617  1421  2C24               	goto	u4975
  9618  1422  0874               	movf	__div_to_l_@f2,w
  9619  1423  0270               	subwf	__div_to_l_@f1,w
  9620  1424                     u4975:	
  9621  1424  1C03               	skipc
  9622  1425  2C2F               	goto	l3956
  9623  1426  0874               	movf	__div_to_l_@f2,w
  9624  1427  02F0               	subwf	__div_to_l_@f1,f
  9625  1428  0875               	movf	__div_to_l_@f2+1,w
  9626  1429  3BF1               	subwfb	__div_to_l_@f1+1,f
  9627  142A  0876               	movf	__div_to_l_@f2+2,w
  9628  142B  3BF2               	subwfb	__div_to_l_@f1+2,f
  9629  142C  0877               	movf	__div_to_l_@f2+3,w
  9630  142D  3BF3               	subwfb	__div_to_l_@f1+3,f
  9631  142E  1420               	bsf	__div_to_l_@quot,0
  9632  142F                     l3956:	
  9633  142F  3001               	movlw	1
  9634  1430                     u4985:	
  9635  1430  35F0               	lslf	__div_to_l_@f1,f
  9636  1431  0DF1               	rlf	__div_to_l_@f1+1,f
  9637  1432  0DF2               	rlf	__div_to_l_@f1+2,f
  9638  1433  0DF3               	rlf	__div_to_l_@f1+3,f
  9639  1434  0B89               	decfsz	9,f
  9640  1435  2C30               	goto	u4985
  9641  1436  3001               	movlw	1
  9642  1437  02A4               	subwf	__div_to_l_@cntr,f
  9643  1438  1D03               	btfss	3,2
  9644  1439  2C0F               	goto	l3948
  9645  143A  1FA5               	btfss	__div_to_l_@exp1,7
  9646  143B  2C4F               	goto	l3968
  9647  143C  0825               	movf	__div_to_l_@exp1,w
  9648  143D  3A80               	xorlw	128
  9649  143E  3E9F               	addlw	159
  9650  143F  1C03               	btfss	3,0
  9651  1440  2BD8               	goto	l3930
  9652  1441                     l3966:	
  9653  1441  3001               	movlw	1
  9654  1442                     u5025:	
  9655  1442  36A3               	lsrf	__div_to_l_@quot+3,f
  9656  1443  0CA2               	rrf	__div_to_l_@quot+2,f
  9657  1444  0CA1               	rrf	__div_to_l_@quot+1,f
  9658  1445  0CA0               	rrf	__div_to_l_@quot,f
  9659  1446  0B89               	decfsz	9,f
  9660  1447  2C42               	goto	u5025
  9661  1448  3001               	movlw	1
  9662  1449  00F8               	movwf	??__div_to_l_
  9663  144A  0878               	movf	??__div_to_l_,w
  9664  144B  07A5               	addwf	__div_to_l_@exp1,f
  9665  144C  1903               	btfsc	3,2
  9666  144D  2C60               	goto	l3976
  9667  144E  2C41               	goto	l3966
  9668  144F                     l3968:	
  9669  144F  3020               	movlw	32
  9670  1450  0225               	subwf	__div_to_l_@exp1,w
  9671  1451  1803               	btfsc	3,0
  9672  1452  2BD8               	goto	l3930
  9673  1453                     l928:	
  9674  1453  0825               	movf	__div_to_l_@exp1,w
  9675  1454  1903               	btfsc	3,2
  9676  1455  2C60               	goto	l3976
  9677  1456  3001               	movlw	1
  9678  1457                     u5055:	
  9679  1457  35A0               	lslf	__div_to_l_@quot,f
  9680  1458  0DA1               	rlf	__div_to_l_@quot+1,f
  9681  1459  0DA2               	rlf	__div_to_l_@quot+2,f
  9682  145A  0DA3               	rlf	__div_to_l_@quot+3,f
  9683  145B  0B89               	decfsz	9,f
  9684  145C  2C57               	goto	u5055
  9685  145D  3001               	movlw	1
  9686  145E  02A5               	subwf	__div_to_l_@exp1,f
  9687  145F  2C53               	goto	l928
  9688  1460                     l3976:	
  9689  1460  0823               	movf	__div_to_l_@quot+3,w
  9690  1461  00F3               	movwf	?__div_to_l_+3
  9691  1462  0822               	movf	__div_to_l_@quot+2,w
  9692  1463  00F2               	movwf	?__div_to_l_+2
  9693  1464  0821               	movf	__div_to_l_@quot+1,w
  9694  1465  00F1               	movwf	?__div_to_l_+1
  9695  1466  0820               	movf	__div_to_l_@quot,w
  9696  1467  00F0               	movwf	?__div_to_l_
  9697  1468  0008               	return
  9698  1469                     __end_of__div_to_l_:	
  9699                           
  9700                           	psect	text18
  9701  1DD3                     __ptext18:	
  9702 ;; *************** function ___wmul *****************
  9703 ;; Defined at:
  9704 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  multiplier      2    0[COMMON] unsigned int 
  9707 ;;  multiplicand    2    2[COMMON] unsigned int 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  product         2    4[COMMON] unsigned int 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  2    0[COMMON] unsigned int 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;Total ram usage:        6 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		__doprnt
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           
  9733                           ;psect for function ___wmul
  9734  1DD3                     ___wmul:	
  9735                           
  9736                           ;incstack = 0
  9737                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9738  1DD3  01F4               	clrf	___wmul@product
  9739  1DD4  01F5               	clrf	___wmul@product+1
  9740  1DD5                     l3982:	
  9741  1DD5  1C70               	btfss	___wmul@multiplier,0
  9742  1DD6  2DDB               	goto	l747
  9743  1DD7  0872               	movf	___wmul@multiplicand,w
  9744  1DD8  07F4               	addwf	___wmul@product,f
  9745  1DD9  0873               	movf	___wmul@multiplicand+1,w
  9746  1DDA  3DF5               	addwfc	___wmul@product+1,f
  9747  1DDB                     l747:	
  9748  1DDB  3001               	movlw	1
  9749  1DDC                     u5085:	
  9750  1DDC  35F2               	lslf	___wmul@multiplicand,f
  9751  1DDD  0DF3               	rlf	___wmul@multiplicand+1,f
  9752  1DDE  0B89               	decfsz	9,f
  9753  1DDF  2DDC               	goto	u5085
  9754  1DE0  3001               	movlw	1
  9755  1DE1                     u5095:	
  9756  1DE1  36F1               	lsrf	___wmul@multiplier+1,f
  9757  1DE2  0CF0               	rrf	___wmul@multiplier,f
  9758  1DE3  0B89               	decfsz	9,f
  9759  1DE4  2DE1               	goto	u5095
  9760  1DE5  0870               	movf	___wmul@multiplier,w
  9761  1DE6  0471               	iorwf	___wmul@multiplier+1,w
  9762  1DE7  1D03               	btfss	3,2
  9763  1DE8  2DD5               	goto	l3982
  9764  1DE9  0875               	movf	___wmul@product+1,w
  9765  1DEA  00F1               	movwf	?___wmul+1
  9766  1DEB  0874               	movf	___wmul@product,w
  9767  1DEC  00F0               	movwf	?___wmul
  9768  1DED  0008               	return
  9769  1DEE                     __end_of___wmul:	
  9770                           
  9771                           	psect	text19
  9772  1FBD                     __ptext19:	
  9773 ;; *************** function ___llmod *****************
  9774 ;; Defined at:
  9775 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  divisor         4    0[BANK0 ] unsigned long 
  9778 ;;  dividend        4    4[BANK0 ] unsigned long 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  counter         1    9[BANK0 ] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  4    0[BANK0 ] unsigned long 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9790 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;Total ram usage:       10 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		__doprnt
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function ___llmod
  9805  1FBD                     ___llmod:	
  9806                           
  9807                           ;incstack = 0
  9808                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9809  1FBD  0020               	movlb	0	; select bank0
  9810  1FBE  0823               	movf	___llmod@divisor+3,w
  9811  1FBF  0422               	iorwf	___llmod@divisor+2,w
  9812  1FC0  0421               	iorwf	___llmod@divisor+1,w
  9813  1FC1  0420               	iorwf	___llmod@divisor,w
  9814  1FC2  1903               	skipnz
  9815  1FC3  2FF7               	goto	l4110
  9816  1FC4  01A9               	clrf	___llmod@counter
  9817  1FC5  0AA9               	incf	___llmod@counter,f
  9818  1FC6                     l4100:	
  9819  1FC6  1BA3               	btfsc	___llmod@divisor+3,7
  9820  1FC7  2FD4               	goto	l4102
  9821  1FC8  3001               	movlw	1
  9822  1FC9                     u5385:	
  9823  1FC9  35A0               	lslf	___llmod@divisor,f
  9824  1FCA  0DA1               	rlf	___llmod@divisor+1,f
  9825  1FCB  0DA2               	rlf	___llmod@divisor+2,f
  9826  1FCC  0DA3               	rlf	___llmod@divisor+3,f
  9827  1FCD  0B89               	decfsz	9,f
  9828  1FCE  2FC9               	goto	u5385
  9829  1FCF  3001               	movlw	1
  9830  1FD0  00A8               	movwf	??___llmod
  9831  1FD1  0828               	movf	??___llmod,w
  9832  1FD2  07A9               	addwf	___llmod@counter,f
  9833  1FD3  2FC6               	goto	l4100
  9834  1FD4                     l4102:	
  9835  1FD4  0823               	movf	___llmod@divisor+3,w
  9836  1FD5  0227               	subwf	___llmod@dividend+3,w
  9837  1FD6  1D03               	skipz
  9838  1FD7  2FE2               	goto	u5405
  9839  1FD8  0822               	movf	___llmod@divisor+2,w
  9840  1FD9  0226               	subwf	___llmod@dividend+2,w
  9841  1FDA  1D03               	skipz
  9842  1FDB  2FE2               	goto	u5405
  9843  1FDC  0821               	movf	___llmod@divisor+1,w
  9844  1FDD  0225               	subwf	___llmod@dividend+1,w
  9845  1FDE  1D03               	skipz
  9846  1FDF  2FE2               	goto	u5405
  9847  1FE0  0820               	movf	___llmod@divisor,w
  9848  1FE1  0224               	subwf	___llmod@dividend,w
  9849  1FE2                     u5405:	
  9850  1FE2  1C03               	skipc
  9851  1FE3  2FEC               	goto	l4106
  9852  1FE4  0820               	movf	___llmod@divisor,w
  9853  1FE5  02A4               	subwf	___llmod@dividend,f
  9854  1FE6  0821               	movf	___llmod@divisor+1,w
  9855  1FE7  3BA5               	subwfb	___llmod@dividend+1,f
  9856  1FE8  0822               	movf	___llmod@divisor+2,w
  9857  1FE9  3BA6               	subwfb	___llmod@dividend+2,f
  9858  1FEA  0823               	movf	___llmod@divisor+3,w
  9859  1FEB  3BA7               	subwfb	___llmod@dividend+3,f
  9860  1FEC                     l4106:	
  9861  1FEC  3001               	movlw	1
  9862  1FED                     u5415:	
  9863  1FED  36A3               	lsrf	___llmod@divisor+3,f
  9864  1FEE  0CA2               	rrf	___llmod@divisor+2,f
  9865  1FEF  0CA1               	rrf	___llmod@divisor+1,f
  9866  1FF0  0CA0               	rrf	___llmod@divisor,f
  9867  1FF1  0B89               	decfsz	9,f
  9868  1FF2  2FED               	goto	u5415
  9869  1FF3  3001               	movlw	1
  9870  1FF4  02A9               	subwf	___llmod@counter,f
  9871  1FF5  1D03               	btfss	3,2
  9872  1FF6  2FD4               	goto	l4102
  9873  1FF7                     l4110:	
  9874  1FF7  0827               	movf	___llmod@dividend+3,w
  9875  1FF8  00A3               	movwf	?___llmod+3
  9876  1FF9  0826               	movf	___llmod@dividend+2,w
  9877  1FFA  00A2               	movwf	?___llmod+2
  9878  1FFB  0825               	movf	___llmod@dividend+1,w
  9879  1FFC  00A1               	movwf	?___llmod+1
  9880  1FFD  0824               	movf	___llmod@dividend,w
  9881  1FFE  00A0               	movwf	?___llmod
  9882  1FFF  0008               	return
  9883  2000                     __end_of___llmod:	
  9884                           
  9885                           	psect	text20
  9886  106E                     __ptext20:	
  9887 ;; *************** function ___lldiv *****************
  9888 ;; Defined at:
  9889 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  divisor         4    0[COMMON] unsigned long 
  9892 ;;  dividend        4    4[COMMON] unsigned long 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  quotient        4    9[COMMON] unsigned long 
  9895 ;;  counter         1   13[COMMON] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  4    0[COMMON] unsigned long 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:       14 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		__doprnt
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function ___lldiv
  9920  106E                     ___lldiv:	
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9924  106E  3000               	movlw	0
  9925  106F  00FC               	movwf	___lldiv@quotient+3
  9926  1070  3000               	movlw	0
  9927  1071  00FB               	movwf	___lldiv@quotient+2
  9928  1072  3000               	movlw	0
  9929  1073  00FA               	movwf	___lldiv@quotient+1
  9930  1074  3000               	movlw	0
  9931  1075  00F9               	movwf	___lldiv@quotient
  9932  1076  0873               	movf	___lldiv@divisor+3,w
  9933  1077  0472               	iorwf	___lldiv@divisor+2,w
  9934  1078  0471               	iorwf	___lldiv@divisor+1,w
  9935  1079  0470               	iorwf	___lldiv@divisor,w
  9936  107A  1903               	skipnz
  9937  107B  28B7               	goto	l4014
  9938  107C  01FD               	clrf	___lldiv@counter
  9939  107D  0AFD               	incf	___lldiv@counter,f
  9940  107E                     l4000:	
  9941  107E  1BF3               	btfsc	___lldiv@divisor+3,7
  9942  107F  288C               	goto	l4002
  9943  1080  3001               	movlw	1
  9944  1081                     u5125:	
  9945  1081  35F0               	lslf	___lldiv@divisor,f
  9946  1082  0DF1               	rlf	___lldiv@divisor+1,f
  9947  1083  0DF2               	rlf	___lldiv@divisor+2,f
  9948  1084  0DF3               	rlf	___lldiv@divisor+3,f
  9949  1085  0B89               	decfsz	9,f
  9950  1086  2881               	goto	u5125
  9951  1087  3001               	movlw	1
  9952  1088  00F8               	movwf	??___lldiv
  9953  1089  0878               	movf	??___lldiv,w
  9954  108A  07FD               	addwf	___lldiv@counter,f
  9955  108B  287E               	goto	l4000
  9956  108C                     l4002:	
  9957  108C  3001               	movlw	1
  9958  108D                     u5145:	
  9959  108D  35F9               	lslf	___lldiv@quotient,f
  9960  108E  0DFA               	rlf	___lldiv@quotient+1,f
  9961  108F  0DFB               	rlf	___lldiv@quotient+2,f
  9962  1090  0DFC               	rlf	___lldiv@quotient+3,f
  9963  1091  0B89               	decfsz	9,f
  9964  1092  288D               	goto	u5145
  9965  1093  0873               	movf	___lldiv@divisor+3,w
  9966  1094  0277               	subwf	___lldiv@dividend+3,w
  9967  1095  1D03               	skipz
  9968  1096  28A1               	goto	u5155
  9969  1097  0872               	movf	___lldiv@divisor+2,w
  9970  1098  0276               	subwf	___lldiv@dividend+2,w
  9971  1099  1D03               	skipz
  9972  109A  28A1               	goto	u5155
  9973  109B  0871               	movf	___lldiv@divisor+1,w
  9974  109C  0275               	subwf	___lldiv@dividend+1,w
  9975  109D  1D03               	skipz
  9976  109E  28A1               	goto	u5155
  9977  109F  0870               	movf	___lldiv@divisor,w
  9978  10A0  0274               	subwf	___lldiv@dividend,w
  9979  10A1                     u5155:	
  9980  10A1  1C03               	skipc
  9981  10A2  28AC               	goto	l4010
  9982  10A3  0870               	movf	___lldiv@divisor,w
  9983  10A4  02F4               	subwf	___lldiv@dividend,f
  9984  10A5  0871               	movf	___lldiv@divisor+1,w
  9985  10A6  3BF5               	subwfb	___lldiv@dividend+1,f
  9986  10A7  0872               	movf	___lldiv@divisor+2,w
  9987  10A8  3BF6               	subwfb	___lldiv@dividend+2,f
  9988  10A9  0873               	movf	___lldiv@divisor+3,w
  9989  10AA  3BF7               	subwfb	___lldiv@dividend+3,f
  9990  10AB  1479               	bsf	___lldiv@quotient,0
  9991  10AC                     l4010:	
  9992  10AC  3001               	movlw	1
  9993  10AD                     u5165:	
  9994  10AD  36F3               	lsrf	___lldiv@divisor+3,f
  9995  10AE  0CF2               	rrf	___lldiv@divisor+2,f
  9996  10AF  0CF1               	rrf	___lldiv@divisor+1,f
  9997  10B0  0CF0               	rrf	___lldiv@divisor,f
  9998  10B1  0B89               	decfsz	9,f
  9999  10B2  28AD               	goto	u5165
 10000  10B3  3001               	movlw	1
 10001  10B4  02FD               	subwf	___lldiv@counter,f
 10002  10B5  1D03               	btfss	3,2
 10003  10B6  288C               	goto	l4002
 10004  10B7                     l4014:	
 10005  10B7  087C               	movf	___lldiv@quotient+3,w
 10006  10B8  00F3               	movwf	?___lldiv+3
 10007  10B9  087B               	movf	___lldiv@quotient+2,w
 10008  10BA  00F2               	movwf	?___lldiv+2
 10009  10BB  087A               	movf	___lldiv@quotient+1,w
 10010  10BC  00F1               	movwf	?___lldiv+1
 10011  10BD  0879               	movf	___lldiv@quotient,w
 10012  10BE  00F0               	movwf	?___lldiv
 10013  10BF  0008               	return
 10014  10C0                     __end_of___lldiv:	
 10015                           
 10016                           	psect	text21
 10017  1DA5                     __ptext21:	
 10018 ;; *************** function ___flneg *****************
 10019 ;; Defined at:
 10020 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  f1              4    0[COMMON] unsigned long 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  4    0[COMMON] unsigned long 
 10027 ;; Registers used:
 10028 ;;		wreg
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;Total ram usage:        4 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; This function calls:
 10041 ;;		Nothing
 10042 ;; This function is called by:
 10043 ;;		__doprnt
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           
 10048                           ;psect for function ___flneg
 10049  1DA5                     ___flneg:	
 10050                           
 10051                           ;incstack = 0
 10052                           ; Regs used in ___flneg: [wreg]
 10053  1DA5  0873               	movf	___flneg@f1+3,w
 10054  1DA6  0472               	iorwf	___flneg@f1+2,w
 10055  1DA7  0471               	iorwf	___flneg@f1+1,w
 10056  1DA8  0470               	iorwf	___flneg@f1,w
 10057  1DA9  1903               	skipnz
 10058  1DAA  0008               	return
 10059  1DAB  3080               	movlw	128
 10060  1DAC  06F3               	xorwf	___flneg@f1+3,f
 10061  1DAD  0008               	return
 10062  1DAE                     __end_of___flneg:	
 10063                           
 10064                           	psect	text22
 10065  122D                     __ptext22:	
 10066 ;; *************** function ___flge *****************
 10067 ;; Defined at:
 10068 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  ff1             4    0[COMMON] unsigned long 
 10071 ;;  ff2             4    4[COMMON] unsigned long 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;		None               void
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10083 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;Total ram usage:       12 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		__doprnt
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function ___flge
 10098  122D                     ___flge:	
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10102  122D  3000               	movlw	0
 10103  122E  0570               	andwf	___flge@ff1,w
 10104  122F  00F8               	movwf	??___flge
 10105  1230  3000               	movlw	0
 10106  1231  0571               	andwf	___flge@ff1+1,w
 10107  1232  00F9               	movwf	??___flge+1
 10108  1233  3080               	movlw	128
 10109  1234  0572               	andwf	___flge@ff1+2,w
 10110  1235  00FA               	movwf	??___flge+2
 10111  1236  307F               	movlw	127
 10112  1237  0573               	andwf	___flge@ff1+3,w
 10113  1238  00FB               	movwf	??___flge+3
 10114  1239  087B               	movf	??___flge+3,w
 10115  123A  047A               	iorwf	??___flge+2,w
 10116  123B  0479               	iorwf	??___flge+1,w
 10117  123C  0478               	iorwf	??___flge,w
 10118  123D  1D03               	skipz
 10119  123E  2A47               	goto	l938
 10120  123F  3000               	movlw	0
 10121  1240  00F3               	movwf	___flge@ff1+3
 10122  1241  3000               	movlw	0
 10123  1242  00F2               	movwf	___flge@ff1+2
 10124  1243  3000               	movlw	0
 10125  1244  00F1               	movwf	___flge@ff1+1
 10126  1245  3000               	movlw	0
 10127  1246  00F0               	movwf	___flge@ff1
 10128  1247                     l938:	
 10129  1247  3000               	movlw	0
 10130  1248  0574               	andwf	___flge@ff2,w
 10131  1249  00F8               	movwf	??___flge
 10132  124A  3000               	movlw	0
 10133  124B  0575               	andwf	___flge@ff2+1,w
 10134  124C  00F9               	movwf	??___flge+1
 10135  124D  3080               	movlw	128
 10136  124E  0576               	andwf	___flge@ff2+2,w
 10137  124F  00FA               	movwf	??___flge+2
 10138  1250  307F               	movlw	127
 10139  1251  0577               	andwf	___flge@ff2+3,w
 10140  1252  00FB               	movwf	??___flge+3
 10141  1253  087B               	movf	??___flge+3,w
 10142  1254  047A               	iorwf	??___flge+2,w
 10143  1255  0479               	iorwf	??___flge+1,w
 10144  1256  0478               	iorwf	??___flge,w
 10145  1257  1D03               	skipz
 10146  1258  2A61               	goto	l4036
 10147  1259  3000               	movlw	0
 10148  125A  00F7               	movwf	___flge@ff2+3
 10149  125B  3000               	movlw	0
 10150  125C  00F6               	movwf	___flge@ff2+2
 10151  125D  3000               	movlw	0
 10152  125E  00F5               	movwf	___flge@ff2+1
 10153  125F  3000               	movlw	0
 10154  1260  00F4               	movwf	___flge@ff2
 10155  1261                     l4036:	
 10156  1261  1FF3               	btfss	___flge@ff1+3,7
 10157  1262  2A7B               	goto	l4040
 10158  1263  3000               	movlw	0
 10159  1264  00F8               	movwf	??___flge
 10160  1265  3000               	movlw	0
 10161  1266  00F9               	movwf	??___flge+1
 10162  1267  3000               	movlw	0
 10163  1268  00FA               	movwf	??___flge+2
 10164  1269  3080               	movlw	128
 10165  126A  00FB               	movwf	??___flge+3
 10166  126B  0870               	movf	___flge@ff1,w
 10167  126C  02F8               	subwf	??___flge,f
 10168  126D  0871               	movf	___flge@ff1+1,w
 10169  126E  3BF9               	subwfb	??___flge+1,f
 10170  126F  0872               	movf	___flge@ff1+2,w
 10171  1270  3BFA               	subwfb	??___flge+2,f
 10172  1271  0873               	movf	___flge@ff1+3,w
 10173  1272  3BFB               	subwfb	??___flge+3,f
 10174  1273  087B               	movf	??___flge+3,w
 10175  1274  00F3               	movwf	___flge@ff1+3
 10176  1275  087A               	movf	??___flge+2,w
 10177  1276  00F2               	movwf	___flge@ff1+2
 10178  1277  0879               	movf	??___flge+1,w
 10179  1278  00F1               	movwf	___flge@ff1+1
 10180  1279  0878               	movf	??___flge,w
 10181  127A  00F0               	movwf	___flge@ff1
 10182  127B                     l4040:	
 10183  127B  1FF7               	btfss	___flge@ff2+3,7
 10184  127C  2A95               	goto	l941
 10185  127D  3000               	movlw	0
 10186  127E  00F8               	movwf	??___flge
 10187  127F  3000               	movlw	0
 10188  1280  00F9               	movwf	??___flge+1
 10189  1281  3000               	movlw	0
 10190  1282  00FA               	movwf	??___flge+2
 10191  1283  3080               	movlw	128
 10192  1284  00FB               	movwf	??___flge+3
 10193  1285  0874               	movf	___flge@ff2,w
 10194  1286  02F8               	subwf	??___flge,f
 10195  1287  0875               	movf	___flge@ff2+1,w
 10196  1288  3BF9               	subwfb	??___flge+1,f
 10197  1289  0876               	movf	___flge@ff2+2,w
 10198  128A  3BFA               	subwfb	??___flge+2,f
 10199  128B  0877               	movf	___flge@ff2+3,w
 10200  128C  3BFB               	subwfb	??___flge+3,f
 10201  128D  087B               	movf	??___flge+3,w
 10202  128E  00F7               	movwf	___flge@ff2+3
 10203  128F  087A               	movf	??___flge+2,w
 10204  1290  00F6               	movwf	___flge@ff2+2
 10205  1291  0879               	movf	??___flge+1,w
 10206  1292  00F5               	movwf	___flge@ff2+1
 10207  1293  0878               	movf	??___flge,w
 10208  1294  00F4               	movwf	___flge@ff2
 10209  1295                     l941:	
 10210  1295  3080               	movlw	128
 10211  1296  06F3               	xorwf	___flge@ff1+3,f
 10212  1297  3080               	movlw	128
 10213  1298  06F7               	xorwf	___flge@ff2+3,f
 10214  1299  0877               	movf	___flge@ff2+3,w
 10215  129A  0273               	subwf	___flge@ff1+3,w
 10216  129B  1D03               	skipz
 10217  129C  0008               	return
 10218  129D  0876               	movf	___flge@ff2+2,w
 10219  129E  0272               	subwf	___flge@ff1+2,w
 10220  129F  1D03               	skipz
 10221  12A0  0008               	return
 10222  12A1  0875               	movf	___flge@ff2+1,w
 10223  12A2  0271               	subwf	___flge@ff1+1,w
 10224  12A3  1D03               	skipz
 10225  12A4  0008               	return
 10226  12A5  0874               	movf	___flge@ff2,w
 10227  12A6  0270               	subwf	___flge@ff1,w
 10228  12A7  0008               	return
 10229  12A8                     __end_of___flge:	
 10230                           
 10231                           	psect	text23
 10232  0005                     __ptext23:	
 10233 ;; *************** function ___fleq *****************
 10234 ;; Defined at:
 10235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  ff1             4    0[COMMON] unsigned long 
 10238 ;;  ff2             4    4[COMMON] unsigned long 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;		None               void
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10250 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;Total ram usage:       12 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		__doprnt
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           
 10264                           ;psect for function ___fleq
 10265  0005                     ___fleq:	
 10266                           
 10267                           ;incstack = 0
 10268                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10269  0005  3000               	movlw	0
 10270  0006  0570               	andwf	___fleq@ff1,w
 10271  0007  00F8               	movwf	??___fleq
 10272  0008  3000               	movlw	0
 10273  0009  0571               	andwf	___fleq@ff1+1,w
 10274  000A  00F9               	movwf	??___fleq+1
 10275  000B  3080               	movlw	128
 10276  000C  0572               	andwf	___fleq@ff1+2,w
 10277  000D  00FA               	movwf	??___fleq+2
 10278  000E  307F               	movlw	127
 10279  000F  0573               	andwf	___fleq@ff1+3,w
 10280  0010  00FB               	movwf	??___fleq+3
 10281  0011  087B               	movf	??___fleq+3,w
 10282  0012  047A               	iorwf	??___fleq+2,w
 10283  0013  0479               	iorwf	??___fleq+1,w
 10284  0014  0478               	iorwf	??___fleq,w
 10285  0015  1D03               	skipz
 10286  0016  281F               	goto	l933
 10287  0017  3000               	movlw	0
 10288  0018  00F3               	movwf	___fleq@ff1+3
 10289  0019  3000               	movlw	0
 10290  001A  00F2               	movwf	___fleq@ff1+2
 10291  001B  3000               	movlw	0
 10292  001C  00F1               	movwf	___fleq@ff1+1
 10293  001D  3000               	movlw	0
 10294  001E  00F0               	movwf	___fleq@ff1
 10295  001F                     l933:	
 10296  001F  3000               	movlw	0
 10297  0020  0574               	andwf	___fleq@ff2,w
 10298  0021  00F8               	movwf	??___fleq
 10299  0022  3000               	movlw	0
 10300  0023  0575               	andwf	___fleq@ff2+1,w
 10301  0024  00F9               	movwf	??___fleq+1
 10302  0025  3080               	movlw	128
 10303  0026  0576               	andwf	___fleq@ff2+2,w
 10304  0027  00FA               	movwf	??___fleq+2
 10305  0028  307F               	movlw	127
 10306  0029  0577               	andwf	___fleq@ff2+3,w
 10307  002A  00FB               	movwf	??___fleq+3
 10308  002B  087B               	movf	??___fleq+3,w
 10309  002C  047A               	iorwf	??___fleq+2,w
 10310  002D  0479               	iorwf	??___fleq+1,w
 10311  002E  0478               	iorwf	??___fleq,w
 10312  002F  1D03               	skipz
 10313  0030  2839               	goto	l934
 10314  0031  3000               	movlw	0
 10315  0032  00F7               	movwf	___fleq@ff2+3
 10316  0033  3000               	movlw	0
 10317  0034  00F6               	movwf	___fleq@ff2+2
 10318  0035  3000               	movlw	0
 10319  0036  00F5               	movwf	___fleq@ff2+1
 10320  0037  3000               	movlw	0
 10321  0038  00F4               	movwf	___fleq@ff2
 10322  0039                     l934:	
 10323  0039  0877               	movf	___fleq@ff2+3,w
 10324  003A  0673               	xorwf	___fleq@ff1+3,w
 10325  003B  1D03               	skipz
 10326  003C  2847               	goto	u5205
 10327  003D  0876               	movf	___fleq@ff2+2,w
 10328  003E  0672               	xorwf	___fleq@ff1+2,w
 10329  003F  1D03               	skipz
 10330  0040  2847               	goto	u5205
 10331  0041  0875               	movf	___fleq@ff2+1,w
 10332  0042  0671               	xorwf	___fleq@ff1+1,w
 10333  0043  1D03               	skipz
 10334  0044  2847               	goto	u5205
 10335  0045  0874               	movf	___fleq@ff2,w
 10336  0046  0670               	xorwf	___fleq@ff1,w
 10337  0047                     u5205:	
 10338  0047  1903               	skipnz
 10339  0048  284B               	goto	l4026
 10340  0049  1003               	clrc
 10341  004A  0008               	return
 10342  004B                     l4026:	
 10343  004B  1403               	setc
 10344  004C  0008               	return
 10345  004D                     __end_of___fleq:	
 10346                           
 10347                           	psect	text24
 10348  1D9C                     __ptext24:	
 10349 ;; *************** function _SYSTEM_Initialize *****************
 10350 ;; Defined at:
 10351 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;		None
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, status,2, status,0, pclath, cstack
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;Total ram usage:        0 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; Hardware stack levels required when called:    2
 10372 ;; This function calls:
 10373 ;;		_EUSART_Initialize
 10374 ;;		_OSCILLATOR_Initialize
 10375 ;;		_PIN_MANAGER_Initialize
 10376 ;; This function is called by:
 10377 ;;		_main
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           
 10382                           ;psect for function _SYSTEM_Initialize
 10383  1D9C                     _SYSTEM_Initialize:	
 10384                           
 10385                           ;mcc.c: 52: PIN_MANAGER_Initialize();
 10386                           
 10387                           ;incstack = 0
 10388                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10389  1D9C  319E  2675  319D   	fcall	_PIN_MANAGER_Initialize
 10390                           
 10391                           ;mcc.c: 53: OSCILLATOR_Initialize();
 10392  1D9F  319D  2587  319D   	fcall	_OSCILLATOR_Initialize
 10393                           
 10394                           ;mcc.c: 54: EUSART_Initialize();
 10395  1DA2  319E  2628         	fcall	_EUSART_Initialize
 10396  1DA4  0008               	return
 10397  1DA5                     __end_of_SYSTEM_Initialize:	
 10398                           
 10399                           	psect	text25
 10400  1E75                     __ptext25:	
 10401 ;; *************** function _PIN_MANAGER_Initialize *****************
 10402 ;; Defined at:
 10403 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; This function calls:
 10424 ;;		Nothing
 10425 ;; This function is called by:
 10426 ;;		_SYSTEM_Initialize
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           
 10431                           ;psect for function _PIN_MANAGER_Initialize
 10432  1E75                     _PIN_MANAGER_Initialize:	
 10433                           
 10434                           ;pin_manager.c: 60: LATA = 0x00;
 10435                           
 10436                           ;incstack = 0
 10437                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10438  1E75  0022               	movlb	2	; select bank2
 10439  1E76  018C               	clrf	12	;volatile
 10440                           
 10441                           ;pin_manager.c: 61: LATB = 0x00;
 10442  1E77  018D               	clrf	13	;volatile
 10443                           
 10444                           ;pin_manager.c: 62: LATC = 0x00;
 10445  1E78  018E               	clrf	14	;volatile
 10446                           
 10447                           ;pin_manager.c: 67: TRISA = 0x33;
 10448  1E79  3033               	movlw	51
 10449  1E7A  0021               	movlb	1	; select bank1
 10450  1E7B  008C               	movwf	12	;volatile
 10451                           
 10452                           ;pin_manager.c: 68: TRISB = 0xB0;
 10453  1E7C  30B0               	movlw	176
 10454  1E7D  008D               	movwf	13	;volatile
 10455                           
 10456                           ;pin_manager.c: 69: TRISC = 0xFF;
 10457  1E7E  30FF               	movlw	255
 10458  1E7F  008E               	movwf	14	;volatile
 10459                           
 10460                           ;pin_manager.c: 74: ANSELC = 0xCE;
 10461  1E80  30CE               	movlw	206
 10462  1E81  0023               	movlb	3	; select bank3
 10463  1E82  008E               	movwf	14	;volatile
 10464                           
 10465                           ;pin_manager.c: 75: ANSELB = 0x80;
 10466  1E83  3080               	movlw	128
 10467  1E84  008D               	movwf	13	;volatile
 10468                           
 10469                           ;pin_manager.c: 76: ANSELA = 0x13;
 10470  1E85  3013               	movlw	19
 10471  1E86  008C               	movwf	12	;volatile
 10472                           
 10473                           ;pin_manager.c: 81: WPUB = 0x00;
 10474  1E87  0024               	movlb	4	; select bank4
 10475  1E88  018D               	clrf	13	;volatile
 10476                           
 10477                           ;pin_manager.c: 82: WPUA = 0x00;
 10478  1E89  018C               	clrf	12	;volatile
 10479                           
 10480                           ;pin_manager.c: 83: WPUC = 0x00;
 10481  1E8A  018E               	clrf	14	;volatile
 10482                           
 10483                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
 10484  1E8B  0021               	movlb	1	; select bank1
 10485  1E8C  1395               	bcf	21,7	;volatile
 10486                           
 10487                           ;pin_manager.c: 89: ODCONA = 0x00;
 10488  1E8D  0025               	movlb	5	; select bank5
 10489  1E8E  018C               	clrf	12	;volatile
 10490                           
 10491                           ;pin_manager.c: 90: ODCONB = 0x00;
 10492  1E8F  018D               	clrf	13	;volatile
 10493                           
 10494                           ;pin_manager.c: 91: ODCONC = 0x00;
 10495  1E90  018E               	clrf	14	;volatile
 10496                           
 10497                           ;pin_manager.c: 96: SLRCONA = 0x37;
 10498  1E91  3037               	movlw	55
 10499  1E92  0026               	movlb	6	; select bank6
 10500  1E93  008C               	movwf	12	;volatile
 10501                           
 10502                           ;pin_manager.c: 97: SLRCONB = 0xF0;
 10503  1E94  30F0               	movlw	240
 10504  1E95  008D               	movwf	13	;volatile
 10505                           
 10506                           ;pin_manager.c: 98: SLRCONC = 0xFF;
 10507  1E96  30FF               	movlw	255
 10508  1E97  008E               	movwf	14	;volatile
 10509                           
 10510                           ;pin_manager.c: 107: RXPPS = 0x10;
 10511  1E98  3010               	movlw	16
 10512  1E99  003C               	movlb	28	; select bank28
 10513  1E9A  00A4               	movwf	36	;volatile
 10514                           
 10515                           ;pin_manager.c: 108: SSPDATPPS = 0x0D;
 10516  1E9B  300D               	movlw	13
 10517  1E9C  00A1               	movwf	33	;volatile
 10518                           
 10519                           ;pin_manager.c: 109: RB6PPS = 0x10;
 10520  1E9D  3010               	movlw	16
 10521  1E9E  003D               	movlb	29	; select bank29
 10522  1E9F  009E               	movwf	30	;volatile
 10523                           
 10524                           ;pin_manager.c: 110: RA2PPS = 0x12;
 10525  1EA0  3012               	movlw	18
 10526  1EA1  0092               	movwf	18	;volatile
 10527                           
 10528                           ;pin_manager.c: 111: SSPCLKPPS = 0x0E;
 10529  1EA2  300E               	movlw	14
 10530  1EA3  003C               	movlb	28	; select bank28
 10531  1EA4  00A0               	movwf	32	;volatile
 10532  1EA5  0008               	return
 10533  1EA6                     __end_of_PIN_MANAGER_Initialize:	
 10534                           
 10535                           	psect	text26
 10536  1D87                     __ptext26:	
 10537 ;; *************** function _OSCILLATOR_Initialize *****************
 10538 ;; Defined at:
 10539 ;;		line 57 in file "mcc_generated_files/mcc.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;		None
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;Total ram usage:        0 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; This function calls:
 10560 ;;		Nothing
 10561 ;; This function is called by:
 10562 ;;		_SYSTEM_Initialize
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           
 10567                           ;psect for function _OSCILLATOR_Initialize
 10568  1D87                     _OSCILLATOR_Initialize:	
 10569                           
 10570                           ;mcc.c: 60: OSCCON = 0x7A;
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10574  1D87  307A               	movlw	122
 10575  1D88  0021               	movlb	1	; select bank1
 10576  1D89  0099               	movwf	25	;volatile
 10577                           
 10578                           ;mcc.c: 62: OSCTUNE = 0x00;
 10579  1D8A  0198               	clrf	24	;volatile
 10580                           
 10581                           ;mcc.c: 64: BORCON = 0x00;
 10582  1D8B  0022               	movlb	2	; select bank2
 10583  1D8C  0196               	clrf	22	;volatile
 10584  1D8D  0008               	return
 10585  1D8E                     __end_of_OSCILLATOR_Initialize:	
 10586                           
 10587                           	psect	text27
 10588  1E28                     __ptext27:	
 10589 ;; *************** function _EUSART_Initialize *****************
 10590 ;; Defined at:
 10591 ;;		line 65 in file "mcc_generated_files/eusart.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0, pclath, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        0 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    1
 10612 ;; This function calls:
 10613 ;;		_EUSART_SetErrorHandler
 10614 ;;		_EUSART_SetFramingErrorHandler
 10615 ;;		_EUSART_SetOverrunErrorHandler
 10616 ;; This function is called by:
 10617 ;;		_SYSTEM_Initialize
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           
 10622                           ;psect for function _EUSART_Initialize
 10623  1E28                     _EUSART_Initialize:	
 10624                           
 10625                           ;eusart.c: 70: BAUD1CON = 0x08;
 10626                           
 10627                           ;incstack = 0
 10628                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10629  1E28  3008               	movlw	8
 10630  1E29  0023               	movlb	3	; select bank3
 10631  1E2A  009F               	movwf	31	;volatile
 10632                           
 10633                           ;eusart.c: 73: RC1STA = 0x90;
 10634  1E2B  3090               	movlw	144
 10635  1E2C  009D               	movwf	29	;volatile
 10636                           
 10637                           ;eusart.c: 76: TX1STA = 0x24;
 10638  1E2D  3024               	movlw	36
 10639  1E2E  009E               	movwf	30	;volatile
 10640                           
 10641                           ;eusart.c: 79: SPBRGL = 0x22;
 10642  1E2F  3022               	movlw	34
 10643  1E30  009B               	movwf	27	;volatile
 10644                           
 10645                           ;eusart.c: 82: SPBRGH = 0x00;
 10646  1E31  019C               	clrf	28	;volatile
 10647                           
 10648                           ;eusart.c: 85: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
 10649  1E32  3000               	movlw	0
 10650  1E33  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10651  1E34  3000               	movlw	0
 10652  1E35  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10653  1E36  319D  257A  319E   	fcall	_EUSART_SetFramingErrorHandler
 10654                           
 10655                           ;eusart.c: 86: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
 10656  1E39  3000               	movlw	0
 10657  1E3A  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10658  1E3B  3000               	movlw	0
 10659  1E3C  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10660  1E3D  3190  2000  319E   	fcall	_EUSART_SetOverrunErrorHandler
 10661                           
 10662                           ;eusart.c: 87: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
 10663  1E40  3000               	movlw	0
 10664  1E41  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
 10665  1E42  3000               	movlw	0
 10666  1E43  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10667  1E44  319D  2574         	fcall	_EUSART_SetErrorHandler
 10668                           
 10669                           ;eusart.c: 89: eusartRxLastError.status = 0;
 10670  1E46  0021               	movlb	1	; select bank1
 10671  1E47  01E6               	clrf	_eusartRxLastError^(0+128)	;volatile
 10672  1E48  0008               	return
 10673  1E49                     __end_of_EUSART_Initialize:	
 10674                           
 10675                           	psect	text28
 10676  1000                     __ptext28:	
 10677 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10678 ;; Defined at:
 10679 ;;		line 169 in file "mcc_generated_files/eusart.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 10682 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;Total ram usage:        2 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_EUSART_Initialize
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _EUSART_SetOverrunErrorHandler
 10709  1000                     _EUSART_SetOverrunErrorHandler:	
 10710                           
 10711                           ;eusart.c: 170: EUSART_OverrunErrorHandler = interruptHandler;
 10712                           
 10713                           ;incstack = 0
 10714                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10715  1000  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10716  1001  0021               	movlb	1	; select bank1
 10717  1002  00ED               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 10718  1003  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10719  1004  00EC               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 10720  1005  0008               	return
 10721  1006                     __end_of_EUSART_SetOverrunErrorHandler:	
 10722                           
 10723                           	psect	text29
 10724  1D7A                     __ptext29:	
 10725 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10726 ;; Defined at:
 10727 ;;		line 165 in file "mcc_generated_files/eusart.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 10730 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		wreg
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;Total ram usage:        2 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_EUSART_Initialize
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           
 10756                           ;psect for function _EUSART_SetFramingErrorHandler
 10757  1D7A                     _EUSART_SetFramingErrorHandler:	
 10758                           
 10759                           ;eusart.c: 166: EUSART_FramingErrorHandler = interruptHandler;
 10760                           
 10761                           ;incstack = 0
 10762                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10763  1D7A  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10764  1D7B  0021               	movlb	1	; select bank1
 10765  1D7C  00EF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 10766  1D7D  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10767  1D7E  00EE               	movwf	_EUSART_FramingErrorHandler^(0+128)
 10768  1D7F  0008               	return
 10769  1D80                     __end_of_EUSART_SetFramingErrorHandler:	
 10770                           
 10771                           	psect	text30
 10772  1D74                     __ptext30:	
 10773 ;; *************** function _EUSART_SetErrorHandler *****************
 10774 ;; Defined at:
 10775 ;;		line 173 in file "mcc_generated_files/eusart.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 10778 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;Total ram usage:        2 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_EUSART_Initialize
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           
 10804                           ;psect for function _EUSART_SetErrorHandler
 10805  1D74                     _EUSART_SetErrorHandler:	
 10806                           
 10807                           ;eusart.c: 174: EUSART_ErrorHandler = interruptHandler;
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10811  1D74  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10812  1D75  0022               	movlb	2	; select bank2
 10813  1D76  00DB               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 10814  1D77  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10815  1D78  00DA               	movwf	_EUSART_ErrorHandler^(0+256)
 10816  1D79  0008               	return
 10817  1D7A                     __end_of_EUSART_SetErrorHandler:	
 10818                           
 10819                           	psect	text31
 10820  1EA6                     __ptext31:	
 10821 ;; *************** function _HX711_tare *****************
 10822 ;; Defined at:
 10823 ;;		line 207 in file "hx711.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;  times           1    wreg     unsigned char 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  times           1   10[BANK1 ] unsigned char 
 10828 ;;  sum             4    6[BANK1 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      void 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0, pclath, cstack
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;Total ram usage:        5 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:    3
 10845 ;; This function calls:
 10846 ;;		_HX711_read_average
 10847 ;;		_HX711_set_offset
 10848 ;;		___fltol
 10849 ;; This function is called by:
 10850 ;;		_main
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _HX711_tare
 10856  1EA6                     _HX711_tare:	
 10857                           
 10858                           ;incstack = 0
 10859                           ; Regs used in _HX711_tare: [wreg+status,2+status,0+pclath+cstack]
 10860                           ;HX711_tare@times stored from wreg
 10861  1EA6  0021               	movlb	1	; select bank1
 10862  1EA7  00AA               	movwf	HX711_tare@times^(0+128)
 10863                           
 10864                           ;hx711.c: 209: double sum = HX711_read_average(times);
 10865  1EA8  082A               	movf	HX711_tare@times^(0+128),w
 10866  1EA9  3192  22A8  319E   	fcall	_HX711_read_average
 10867  1EAC  0020               	movlb	0	; select bank0
 10868  1EAD  0868               	movf	?_HX711_read_average+3,w
 10869  1EAE  0021               	movlb	1	; select bank1
 10870  1EAF  00A9               	movwf	(HX711_tare@sum+3)^(0+128)
 10871  1EB0  0020               	movlb	0	; select bank0
 10872  1EB1  0867               	movf	?_HX711_read_average+2,w
 10873  1EB2  0021               	movlb	1	; select bank1
 10874  1EB3  00A8               	movwf	(HX711_tare@sum+2)^(0+128)
 10875  1EB4  0020               	movlb	0	; select bank0
 10876  1EB5  0866               	movf	?_HX711_read_average+1,w
 10877  1EB6  0021               	movlb	1	; select bank1
 10878  1EB7  00A7               	movwf	(HX711_tare@sum+1)^(0+128)
 10879  1EB8  0020               	movlb	0	; select bank0
 10880  1EB9  0865               	movf	?_HX711_read_average,w
 10881  1EBA  0021               	movlb	1	; select bank1
 10882  1EBB  00A6               	movwf	HX711_tare@sum^(0+128)
 10883                           
 10884                           ;hx711.c: 210: HX711_set_offset(sum);
 10885  1EBC  0829               	movf	(HX711_tare@sum+3)^(0+128),w
 10886  1EBD  0020               	movlb	0	; select bank0
 10887  1EBE  00D6               	movwf	___fltol@f1+3
 10888  1EBF  0021               	movlb	1	; select bank1
 10889  1EC0  0828               	movf	(HX711_tare@sum+2)^(0+128),w
 10890  1EC1  0020               	movlb	0	; select bank0
 10891  1EC2  00D5               	movwf	___fltol@f1+2
 10892  1EC3  0021               	movlb	1	; select bank1
 10893  1EC4  0827               	movf	(HX711_tare@sum+1)^(0+128),w
 10894  1EC5  0020               	movlb	0	; select bank0
 10895  1EC6  00D4               	movwf	___fltol@f1+1
 10896  1EC7  0021               	movlb	1	; select bank1
 10897  1EC8  0826               	movf	HX711_tare@sum^(0+128),w
 10898  1EC9  0020               	movlb	0	; select bank0
 10899  1ECA  00D3               	movwf	___fltol@f1
 10900  1ECB  3191  21C7  319E   	fcall	___fltol
 10901  1ECE  0020               	movlb	0	; select bank0
 10902  1ECF  0856               	movf	?___fltol+3,w
 10903  1ED0  00E1               	movwf	HX711_set_offset@offset+3
 10904  1ED1  0855               	movf	?___fltol+2,w
 10905  1ED2  00E0               	movwf	HX711_set_offset@offset+2
 10906  1ED3  0854               	movf	?___fltol+1,w
 10907  1ED4  00DF               	movwf	HX711_set_offset@offset+1
 10908  1ED5  0853               	movf	?___fltol,w
 10909  1ED6  00DE               	movwf	HX711_set_offset@offset
 10910  1ED7  319D  25C2         	fcall	_HX711_set_offset
 10911  1ED9  0008               	return
 10912  1EDA                     __end_of_HX711_tare:	
 10913                           
 10914                           	psect	text32
 10915  11C7                     __ptext32:	
 10916 ;; *************** function ___fltol *****************
 10917 ;; Defined at:
 10918 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;  f1              4   51[BANK0 ] void 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;  exp1            1   61[BANK0 ] unsigned char 
 10923 ;;  sign1           1   60[BANK0 ] unsigned char 
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  4   51[BANK0 ] long 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10933 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;Total ram usage:       11 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_HX711_tare
 10943 ;;		__doprnt
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           
 10948                           ;psect for function ___fltol
 10949  11C7                     ___fltol:	
 10950                           
 10951                           ;incstack = 0
 10952                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10953  11C7  1003               	clrc
 10954  11C8  0020               	movlb	0	; select bank0
 10955  11C9  0D55               	rlf	___fltol@f1+2,w
 10956  11CA  0D56               	rlf	___fltol@f1+3,w
 10957  11CB  00D7               	movwf	??___fltol
 10958  11CC  0857               	movf	??___fltol,w
 10959  11CD  00DD               	movwf	___fltol@exp1
 10960  11CE  085D               	movf	___fltol@exp1,w
 10961  11CF  1D03               	btfss	3,2
 10962  11D0  29DA               	goto	l4064
 10963  11D1                     l4060:	
 10964  11D1  3000               	movlw	0
 10965  11D2  00D6               	movwf	?___fltol+3
 10966  11D3  3000               	movlw	0
 10967  11D4  00D5               	movwf	?___fltol+2
 10968  11D5  3000               	movlw	0
 10969  11D6  00D4               	movwf	?___fltol+1
 10970  11D7  3000               	movlw	0
 10971  11D8  00D3               	movwf	?___fltol
 10972  11D9  0008               	return
 10973  11DA                     l4064:	
 10974  11DA  0853               	movf	___fltol@f1,w
 10975  11DB  00D7               	movwf	??___fltol
 10976  11DC  0854               	movf	___fltol@f1+1,w
 10977  11DD  00D8               	movwf	??___fltol+1
 10978  11DE  0855               	movf	___fltol@f1+2,w
 10979  11DF  00D9               	movwf	??___fltol+2
 10980  11E0  0856               	movf	___fltol@f1+3,w
 10981  11E1  00DA               	movwf	??___fltol+3
 10982  11E2  301F               	movlw	31
 10983  11E3                     u5285:	
 10984  11E3  36DA               	lsrf	??___fltol+3,f
 10985  11E4  0CD9               	rrf	??___fltol+2,f
 10986  11E5  0CD8               	rrf	??___fltol+1,f
 10987  11E6  0CD7               	rrf	??___fltol,f
 10988  11E7  0B89               	decfsz	9,f
 10989  11E8  29E3               	goto	u5285
 10990  11E9  0857               	movf	??___fltol,w
 10991  11EA  00DB               	movwf	??___fltol+4
 10992  11EB  085B               	movf	??___fltol+4,w
 10993  11EC  00DC               	movwf	___fltol@sign1
 10994  11ED  17D5               	bsf	___fltol@f1+2,7
 10995  11EE  30FF               	movlw	255
 10996  11EF  05D3               	andwf	___fltol@f1,f
 10997  11F0  30FF               	movlw	255
 10998  11F1  05D4               	andwf	___fltol@f1+1,f
 10999  11F2  30FF               	movlw	255
 11000  11F3  05D5               	andwf	___fltol@f1+2,f
 11001  11F4  3000               	movlw	0
 11002  11F5  05D6               	andwf	___fltol@f1+3,f
 11003  11F6  3096               	movlw	150
 11004  11F7  02DD               	subwf	___fltol@exp1,f
 11005  11F8  1FDD               	btfss	___fltol@exp1,7
 11006  11F9  2A0D               	goto	l4082
 11007  11FA  085D               	movf	___fltol@exp1,w
 11008  11FB  3A80               	xorlw	128
 11009  11FC  3E97               	addlw	151
 11010  11FD  1C03               	btfss	3,0
 11011  11FE  29D1               	goto	l4060
 11012  11FF                     l4080:	
 11013  11FF  3001               	movlw	1
 11014  1200                     u5315:	
 11015  1200  36D6               	lsrf	___fltol@f1+3,f
 11016  1201  0CD5               	rrf	___fltol@f1+2,f
 11017  1202  0CD4               	rrf	___fltol@f1+1,f
 11018  1203  0CD3               	rrf	___fltol@f1,f
 11019  1204  0B89               	decfsz	9,f
 11020  1205  2A00               	goto	u5315
 11021  1206  3001               	movlw	1
 11022  1207  00D7               	movwf	??___fltol
 11023  1208  0857               	movf	??___fltol,w
 11024  1209  07DD               	addwf	___fltol@exp1,f
 11025  120A  1903               	btfsc	3,2
 11026  120B  2A1E               	goto	l4090
 11027  120C  29FF               	goto	l4080
 11028  120D                     l4082:	
 11029  120D  3020               	movlw	32
 11030  120E  025D               	subwf	___fltol@exp1,w
 11031  120F  1803               	btfsc	3,0
 11032  1210  29D1               	goto	l4060
 11033  1211                     l957:	
 11034  1211  085D               	movf	___fltol@exp1,w
 11035  1212  1903               	btfsc	3,2
 11036  1213  2A1E               	goto	l4090
 11037  1214  3001               	movlw	1
 11038  1215                     u5345:	
 11039  1215  35D3               	lslf	___fltol@f1,f
 11040  1216  0DD4               	rlf	___fltol@f1+1,f
 11041  1217  0DD5               	rlf	___fltol@f1+2,f
 11042  1218  0DD6               	rlf	___fltol@f1+3,f
 11043  1219  0B89               	decfsz	9,f
 11044  121A  2A15               	goto	u5345
 11045  121B  3001               	movlw	1
 11046  121C  02DD               	subwf	___fltol@exp1,f
 11047  121D  2A11               	goto	l957
 11048  121E                     l4090:	
 11049  121E  085C               	movf	___fltol@sign1,w
 11050  121F  1903               	btfsc	3,2
 11051  1220  0008               	return
 11052  1221  09D3               	comf	___fltol@f1,f
 11053  1222  09D4               	comf	___fltol@f1+1,f
 11054  1223  09D5               	comf	___fltol@f1+2,f
 11055  1224  09D6               	comf	___fltol@f1+3,f
 11056  1225  0AD3               	incf	___fltol@f1,f
 11057  1226  1903               	skipnz
 11058  1227  0AD4               	incf	___fltol@f1+1,f
 11059  1228  1903               	skipnz
 11060  1229  0AD5               	incf	___fltol@f1+2,f
 11061  122A  1903               	skipnz
 11062  122B  0AD6               	incf	___fltol@f1+3,f
 11063  122C  0008               	return
 11064  122D                     __end_of___fltol:	
 11065                           
 11066                           	psect	text33
 11067  1DC2                     __ptext33:	
 11068 ;; *************** function _HX711_set_offset *****************
 11069 ;; Defined at:
 11070 ;;		line 223 in file "hx711.c"
 11071 ;; Parameters:    Size  Location     Type
 11072 ;;  offset          4   62[BANK0 ] long 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;		None
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		wreg
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;Total ram usage:        4 bytes
 11089 ;; Hardware stack levels used:    1
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_HX711_tare
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           
 11098                           ;psect for function _HX711_set_offset
 11099  1DC2                     _HX711_set_offset:	
 11100                           
 11101                           ;hx711.c: 225: OFFSET = offset;
 11102                           
 11103                           ;incstack = 0
 11104                           ; Regs used in _HX711_set_offset: [wreg]
 11105  1DC2  0020               	movlb	0	; select bank0
 11106  1DC3  0861               	movf	HX711_set_offset@offset+3,w
 11107  1DC4  0021               	movlb	1	; select bank1
 11108  1DC5  00E0               	movwf	(_OFFSET+3)^(0+128)
 11109  1DC6  0020               	movlb	0	; select bank0
 11110  1DC7  0860               	movf	HX711_set_offset@offset+2,w
 11111  1DC8  0021               	movlb	1	; select bank1
 11112  1DC9  00DF               	movwf	(_OFFSET+2)^(0+128)
 11113  1DCA  0020               	movlb	0	; select bank0
 11114  1DCB  085F               	movf	HX711_set_offset@offset+1,w
 11115  1DCC  0021               	movlb	1	; select bank1
 11116  1DCD  00DE               	movwf	(_OFFSET+1)^(0+128)
 11117  1DCE  0020               	movlb	0	; select bank0
 11118  1DCF  085E               	movf	HX711_set_offset@offset,w
 11119  1DD0  0021               	movlb	1	; select bank1
 11120  1DD1  00DD               	movwf	_OFFSET^(0+128)
 11121  1DD2  0008               	return
 11122  1DD3                     __end_of_HX711_set_offset:	
 11123                           
 11124                           	psect	text34
 11125  1DB8                     __ptext34:	
 11126 ;; *************** function _HX711_set_scale *****************
 11127 ;; Defined at:
 11128 ;;		line 213 in file "hx711.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  scale           4    0[COMMON] float 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;Total ram usage:        4 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_main
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           
 11156                           ;psect for function _HX711_set_scale
 11157  1DB8                     _HX711_set_scale:	
 11158                           
 11159                           ;hx711.c: 215: SCALE = scale;
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _HX711_set_scale: [wreg]
 11163  1DB8  0873               	movf	HX711_set_scale@scale+3,w
 11164  1DB9  0021               	movlb	1	; select bank1
 11165  1DBA  00EA               	movwf	(_SCALE+3)^(0+128)
 11166  1DBB  0872               	movf	HX711_set_scale@scale+2,w
 11167  1DBC  00E9               	movwf	(_SCALE+2)^(0+128)
 11168  1DBD  0871               	movf	HX711_set_scale@scale+1,w
 11169  1DBE  00E8               	movwf	(_SCALE+1)^(0+128)
 11170  1DBF  0870               	movf	HX711_set_scale@scale,w
 11171  1DC0  00E7               	movwf	_SCALE^(0+128)
 11172  1DC1  0008               	return
 11173  1DC2                     __end_of_HX711_set_scale:	
 11174                           
 11175                           	psect	text35
 11176  1D80                     __ptext35:	
 11177 ;; *************** function _HX711_is_ready *****************
 11178 ;; Defined at:
 11179 ;;		line 23 in file "hx711.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      unsigned char 
 11186 ;; Registers used:
 11187 ;;		wreg, status,0
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:        0 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_main
 11203 ;;		_HX711_wait_ready
 11204 ;;		_HX711_wait_ready_retry
 11205 ;; This function uses a non-reentrant model
 11206 ;;
 11207                           
 11208                           
 11209                           ;psect for function _HX711_is_ready
 11210  1D80                     _HX711_is_ready:	
 11211                           
 11212                           ;hx711.c: 25: return (!PORTBbits.RB4);
 11213                           
 11214                           ;incstack = 0
 11215                           ; Regs used in _HX711_is_ready: [wreg+status,0]
 11216  1D80  1003               	clrc
 11217  1D81  0020               	movlb	0	; select bank0
 11218  1D82  1E0D               	btfss	13,4	;volatile
 11219  1D83  1403               	setc
 11220  1D84  3000               	movlw	0
 11221  1D85  3D09               	addwfc	9,w
 11222  1D86  0008               	return
 11223  1D87                     __end_of_HX711_is_ready:	
 11224                           
 11225                           	psect	text36
 11226  1F7C                     __ptext36:	
 11227 ;; *************** function _HX711_get_units *****************
 11228 ;; Defined at:
 11229 ;;		line 202 in file "hx711.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  times           1    wreg     unsigned char 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  times           1   28[BANK1 ] unsigned char 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  4   19[BANK1 ] float 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0, pclath, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11243 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;Total ram usage:       10 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    4
 11250 ;; This function calls:
 11251 ;;		_HX711_get_value
 11252 ;;		___fldiv
 11253 ;; This function is called by:
 11254 ;;		_main
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function _HX711_get_units
 11260  1F7C                     _HX711_get_units:	
 11261                           
 11262                           ;incstack = 0
 11263                           ; Regs used in _HX711_get_units: [wreg+status,2+status,0+pclath+cstack]
 11264                           ;HX711_get_units@times stored from wreg
 11265  1F7C  0021               	movlb	1	; select bank1
 11266  1F7D  00BC               	movwf	HX711_get_units@times^(0+128)
 11267                           
 11268                           ;hx711.c: 204: return HX711_get_value(times) / SCALE;
 11269  1F7E  083C               	movf	HX711_get_units@times^(0+128),w
 11270  1F7F  319F  2743  319F   	fcall	_HX711_get_value
 11271  1F82  0021               	movlb	1	; select bank1
 11272  1F83  0831               	movf	(?_HX711_get_value+3)^(0+128),w
 11273  1F84  00BB               	movwf	(_HX711_get_units$1421+3)^(0+128)
 11274  1F85  0830               	movf	(?_HX711_get_value+2)^(0+128),w
 11275  1F86  00BA               	movwf	(_HX711_get_units$1421+2)^(0+128)
 11276  1F87  082F               	movf	(?_HX711_get_value+1)^(0+128),w
 11277  1F88  00B9               	movwf	(_HX711_get_units$1421+1)^(0+128)
 11278  1F89  082E               	movf	?_HX711_get_value^(0+128),w
 11279  1F8A  00B8               	movwf	_HX711_get_units$1421^(0+128)
 11280                           
 11281                           ;hx711.c: 204: return HX711_get_value(times) / SCALE;
 11282  1F8B  086A               	movf	(_SCALE+3)^(0+128),w
 11283  1F8C  0020               	movlb	0	; select bank0
 11284  1F8D  00B7               	movwf	___fldiv@a+3
 11285  1F8E  0021               	movlb	1	; select bank1
 11286  1F8F  0869               	movf	(_SCALE+2)^(0+128),w
 11287  1F90  0020               	movlb	0	; select bank0
 11288  1F91  00B6               	movwf	___fldiv@a+2
 11289  1F92  0021               	movlb	1	; select bank1
 11290  1F93  0868               	movf	(_SCALE+1)^(0+128),w
 11291  1F94  0020               	movlb	0	; select bank0
 11292  1F95  00B5               	movwf	___fldiv@a+1
 11293  1F96  0021               	movlb	1	; select bank1
 11294  1F97  0867               	movf	_SCALE^(0+128),w
 11295  1F98  0020               	movlb	0	; select bank0
 11296  1F99  00B4               	movwf	___fldiv@a
 11297  1F9A  0021               	movlb	1	; select bank1
 11298  1F9B  083B               	movf	(_HX711_get_units$1421+3)^(0+128),w
 11299  1F9C  0020               	movlb	0	; select bank0
 11300  1F9D  00BB               	movwf	___fldiv@b+3
 11301  1F9E  0021               	movlb	1	; select bank1
 11302  1F9F  083A               	movf	(_HX711_get_units$1421+2)^(0+128),w
 11303  1FA0  0020               	movlb	0	; select bank0
 11304  1FA1  00BA               	movwf	___fldiv@b+2
 11305  1FA2  0021               	movlb	1	; select bank1
 11306  1FA3  0839               	movf	(_HX711_get_units$1421+1)^(0+128),w
 11307  1FA4  0020               	movlb	0	; select bank0
 11308  1FA5  00B9               	movwf	___fldiv@b+1
 11309  1FA6  0021               	movlb	1	; select bank1
 11310  1FA7  0838               	movf	_HX711_get_units$1421^(0+128),w
 11311  1FA8  0020               	movlb	0	; select bank0
 11312  1FA9  00B8               	movwf	___fldiv@b
 11313  1FAA  3195  2505         	fcall	___fldiv
 11314  1FAC  0020               	movlb	0	; select bank0
 11315  1FAD  0837               	movf	?___fldiv+3,w
 11316  1FAE  0021               	movlb	1	; select bank1
 11317  1FAF  00B6               	movwf	(?_HX711_get_units+3)^(0+128)
 11318  1FB0  0020               	movlb	0	; select bank0
 11319  1FB1  0836               	movf	?___fldiv+2,w
 11320  1FB2  0021               	movlb	1	; select bank1
 11321  1FB3  00B5               	movwf	(?_HX711_get_units+2)^(0+128)
 11322  1FB4  0020               	movlb	0	; select bank0
 11323  1FB5  0835               	movf	?___fldiv+1,w
 11324  1FB6  0021               	movlb	1	; select bank1
 11325  1FB7  00B4               	movwf	(?_HX711_get_units+1)^(0+128)
 11326  1FB8  0020               	movlb	0	; select bank0
 11327  1FB9  0834               	movf	?___fldiv,w
 11328  1FBA  0021               	movlb	1	; select bank1
 11329  1FBB  00B3               	movwf	?_HX711_get_units^(0+128)
 11330  1FBC  0008               	return
 11331  1FBD                     __end_of_HX711_get_units:	
 11332                           
 11333                           	psect	text37
 11334  1F43                     __ptext37:	
 11335 ;; *************** function _HX711_get_value *****************
 11336 ;; Defined at:
 11337 ;;		line 197 in file "hx711.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  times           1    wreg     unsigned char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  times           1   77[BANK0 ] unsigned char 
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  4   14[BANK1 ] float 
 11344 ;; Registers used:
 11345 ;;		wreg, status,2, status,0, pclath, cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11351 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;Total ram usage:        6 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:    3
 11358 ;; This function calls:
 11359 ;;		_HX711_read_average
 11360 ;;		___flsub
 11361 ;;		___xxtofl
 11362 ;; This function is called by:
 11363 ;;		_HX711_get_units
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           
 11368                           ;psect for function _HX711_get_value
 11369  1F43                     _HX711_get_value:	
 11370                           
 11371                           ;incstack = 0
 11372                           ; Regs used in _HX711_get_value: [wreg+status,2+status,0+pclath+cstack]
 11373                           ;HX711_get_value@times stored from wreg
 11374  1F43  0020               	movlb	0	; select bank0
 11375  1F44  00ED               	movwf	HX711_get_value@times
 11376                           
 11377                           ;hx711.c: 199: return HX711_read_average(times) - OFFSET;
 11378  1F45  0021               	movlb	1	; select bank1
 11379  1F46  0860               	movf	(_OFFSET+3)^(0+128),w
 11380  1F47  00FA               	movwf	___xxtofl@val+3
 11381  1F48  085F               	movf	(_OFFSET+2)^(0+128),w
 11382  1F49  00F9               	movwf	___xxtofl@val+2
 11383  1F4A  085E               	movf	(_OFFSET+1)^(0+128),w
 11384  1F4B  00F8               	movwf	___xxtofl@val+1
 11385  1F4C  085D               	movf	_OFFSET^(0+128),w
 11386  1F4D  00F7               	movwf	___xxtofl@val
 11387  1F4E  3001               	movlw	1
 11388  1F4F  3193  2338  319F   	fcall	___xxtofl
 11389  1F52  087A               	movf	?___xxtofl+3,w
 11390  1F53  0021               	movlb	1	; select bank1
 11391  1F54  00A9               	movwf	(___flsub@a+3)^(0+128)
 11392  1F55  0879               	movf	?___xxtofl+2,w
 11393  1F56  00A8               	movwf	(___flsub@a+2)^(0+128)
 11394  1F57  0878               	movf	?___xxtofl+1,w
 11395  1F58  00A7               	movwf	(___flsub@a+1)^(0+128)
 11396  1F59  0877               	movf	?___xxtofl,w
 11397  1F5A  00A6               	movwf	___flsub@a^(0+128)
 11398  1F5B  0020               	movlb	0	; select bank0
 11399  1F5C  086D               	movf	HX711_get_value@times,w
 11400  1F5D  3192  22A8  319F   	fcall	_HX711_read_average
 11401  1F60  0020               	movlb	0	; select bank0
 11402  1F61  0868               	movf	?_HX711_read_average+3,w
 11403  1F62  0021               	movlb	1	; select bank1
 11404  1F63  00AD               	movwf	(___flsub@b+3)^(0+128)
 11405  1F64  0020               	movlb	0	; select bank0
 11406  1F65  0867               	movf	?_HX711_read_average+2,w
 11407  1F66  0021               	movlb	1	; select bank1
 11408  1F67  00AC               	movwf	(___flsub@b+2)^(0+128)
 11409  1F68  0020               	movlb	0	; select bank0
 11410  1F69  0866               	movf	?_HX711_read_average+1,w
 11411  1F6A  0021               	movlb	1	; select bank1
 11412  1F6B  00AB               	movwf	(___flsub@b+1)^(0+128)
 11413  1F6C  0020               	movlb	0	; select bank0
 11414  1F6D  0865               	movf	?_HX711_read_average,w
 11415  1F6E  0021               	movlb	1	; select bank1
 11416  1F6F  00AA               	movwf	___flsub@b^(0+128)
 11417  1F70  319F  270E         	fcall	___flsub
 11418  1F72  0021               	movlb	1	; select bank1
 11419  1F73  0829               	movf	(?___flsub+3)^(0+128),w
 11420  1F74  00B1               	movwf	(?_HX711_get_value+3)^(0+128)
 11421  1F75  0828               	movf	(?___flsub+2)^(0+128),w
 11422  1F76  00B0               	movwf	(?_HX711_get_value+2)^(0+128)
 11423  1F77  0827               	movf	(?___flsub+1)^(0+128),w
 11424  1F78  00AF               	movwf	(?_HX711_get_value+1)^(0+128)
 11425  1F79  0826               	movf	?___flsub^(0+128),w
 11426  1F7A  00AE               	movwf	?_HX711_get_value^(0+128)
 11427  1F7B  0008               	return
 11428  1F7C                     __end_of_HX711_get_value:	
 11429                           
 11430                           	psect	text38
 11431  1F0E                     __ptext38:	
 11432 ;; *************** function ___flsub *****************
 11433 ;; Defined at:
 11434 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  a               4    6[BANK1 ] float 
 11437 ;;  b               4   10[BANK1 ] float 
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;		None
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  4    6[BANK1 ] float 
 11442 ;; Registers used:
 11443 ;;		wreg, status,2, status,0, pclath, cstack
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11449 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;Total ram usage:        8 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    1
 11456 ;; This function calls:
 11457 ;;		___fladd
 11458 ;; This function is called by:
 11459 ;;		_HX711_get_value
 11460 ;;		__doprnt
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           
 11465                           ;psect for function ___flsub
 11466  1F0E                     ___flsub:	
 11467                           
 11468                           ;incstack = 0
 11469                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11470  1F0E  3080               	movlw	128
 11471  1F0F  0021               	movlb	1	; select bank1
 11472  1F10  06A9               	xorwf	(___flsub@a+3)^(0+128),f
 11473  1F11  082D               	movf	(___flsub@b+3)^(0+128),w
 11474  1F12  0020               	movlb	0	; select bank0
 11475  1F13  00D4               	movwf	___fladd@b+3
 11476  1F14  0021               	movlb	1	; select bank1
 11477  1F15  082C               	movf	(___flsub@b+2)^(0+128),w
 11478  1F16  0020               	movlb	0	; select bank0
 11479  1F17  00D3               	movwf	___fladd@b+2
 11480  1F18  0021               	movlb	1	; select bank1
 11481  1F19  082B               	movf	(___flsub@b+1)^(0+128),w
 11482  1F1A  0020               	movlb	0	; select bank0
 11483  1F1B  00D2               	movwf	___fladd@b+1
 11484  1F1C  0021               	movlb	1	; select bank1
 11485  1F1D  082A               	movf	___flsub@b^(0+128),w
 11486  1F1E  0020               	movlb	0	; select bank0
 11487  1F1F  00D1               	movwf	___fladd@b
 11488  1F20  0021               	movlb	1	; select bank1
 11489  1F21  0829               	movf	(___flsub@a+3)^(0+128),w
 11490  1F22  0020               	movlb	0	; select bank0
 11491  1F23  00D8               	movwf	___fladd@a+3
 11492  1F24  0021               	movlb	1	; select bank1
 11493  1F25  0828               	movf	(___flsub@a+2)^(0+128),w
 11494  1F26  0020               	movlb	0	; select bank0
 11495  1F27  00D7               	movwf	___fladd@a+2
 11496  1F28  0021               	movlb	1	; select bank1
 11497  1F29  0827               	movf	(___flsub@a+1)^(0+128),w
 11498  1F2A  0020               	movlb	0	; select bank0
 11499  1F2B  00D6               	movwf	___fladd@a+1
 11500  1F2C  0021               	movlb	1	; select bank1
 11501  1F2D  0826               	movf	___flsub@a^(0+128),w
 11502  1F2E  0020               	movlb	0	; select bank0
 11503  1F2F  00D5               	movwf	___fladd@a
 11504  1F30  3188  2076         	fcall	___fladd
 11505  1F32  0020               	movlb	0	; select bank0
 11506  1F33  0854               	movf	?___fladd+3,w
 11507  1F34  0021               	movlb	1	; select bank1
 11508  1F35  00A9               	movwf	(?___flsub+3)^(0+128)
 11509  1F36  0020               	movlb	0	; select bank0
 11510  1F37  0853               	movf	?___fladd+2,w
 11511  1F38  0021               	movlb	1	; select bank1
 11512  1F39  00A8               	movwf	(?___flsub+2)^(0+128)
 11513  1F3A  0020               	movlb	0	; select bank0
 11514  1F3B  0852               	movf	?___fladd+1,w
 11515  1F3C  0021               	movlb	1	; select bank1
 11516  1F3D  00A7               	movwf	(?___flsub+1)^(0+128)
 11517  1F3E  0020               	movlb	0	; select bank0
 11518  1F3F  0851               	movf	?___fladd,w
 11519  1F40  0021               	movlb	1	; select bank1
 11520  1F41  00A6               	movwf	?___flsub^(0+128)
 11521  1F42  0008               	return
 11522  1F43                     __end_of___flsub:	
 11523                           
 11524                           	psect	text39
 11525  12A8                     __ptext39:	
 11526 ;; *************** function _HX711_read_average *****************
 11527 ;; Defined at:
 11528 ;;		line 185 in file "hx711.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;  times           1    wreg     unsigned char 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  times           1    1[BANK1 ] unsigned char 
 11533 ;;  i               1    0[BANK1 ] unsigned char 
 11534 ;;  sum             4    2[BANK1 ] float 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  4   69[BANK0 ] float 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2, status,0, pclath, cstack
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;Total ram usage:       14 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; Hardware stack levels required when called:    2
 11551 ;; This function calls:
 11552 ;;		_HX711_read
 11553 ;;		___fladd
 11554 ;;		___fldiv
 11555 ;;		___xxtofl
 11556 ;; This function is called by:
 11557 ;;		_HX711_get_value
 11558 ;;		_HX711_tare
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           
 11563                           ;psect for function _HX711_read_average
 11564  12A8                     _HX711_read_average:	
 11565                           
 11566                           ;incstack = 0
 11567                           ; Regs used in _HX711_read_average: [wreg+status,2+status,0+pclath+cstack]
 11568                           ;HX711_read_average@times stored from wreg
 11569  12A8  0021               	movlb	1	; select bank1
 11570  12A9  00A1               	movwf	HX711_read_average@times^(0+128)
 11571                           
 11572                           ;hx711.c: 187: float sum = 0;
 11573  12AA  3000               	movlw	0
 11574  12AB  00A5               	movwf	(HX711_read_average@sum+3)^(0+128)
 11575  12AC  3000               	movlw	0
 11576  12AD  00A4               	movwf	(HX711_read_average@sum+2)^(0+128)
 11577  12AE  3000               	movlw	0
 11578  12AF  00A3               	movwf	(HX711_read_average@sum+1)^(0+128)
 11579  12B0  3000               	movlw	0
 11580  12B1  00A2               	movwf	HX711_read_average@sum^(0+128)
 11581                           
 11582                           ;hx711.c: 189: for(uint8_t i = 0; i < times; i++)
 11583  12B2  01A0               	clrf	HX711_read_average@i^(0+128)
 11584  12B3                     l3800:	
 11585  12B3  0821               	movf	HX711_read_average@times^(0+128),w
 11586  12B4  0220               	subwf	HX711_read_average@i^(0+128),w
 11587  12B5  1803               	btfsc	3,0
 11588  12B6  2B01               	goto	l3802
 11589                           
 11590                           ;hx711.c: 190: {;hx711.c: 191: sum += HX711_read();
 11591  12B7  3191  216A  3192   	fcall	_HX711_read
 11592  12BA  0874               	movf	?_HX711_read+3,w
 11593  12BB  00FA               	movwf	___xxtofl@val+3
 11594  12BC  0873               	movf	?_HX711_read+2,w
 11595  12BD  00F9               	movwf	___xxtofl@val+2
 11596  12BE  0872               	movf	?_HX711_read+1,w
 11597  12BF  00F8               	movwf	___xxtofl@val+1
 11598  12C0  0871               	movf	?_HX711_read,w
 11599  12C1  00F7               	movwf	___xxtofl@val
 11600  12C2  3001               	movlw	1
 11601  12C3  3193  2338  3192   	fcall	___xxtofl
 11602  12C6  087A               	movf	?___xxtofl+3,w
 11603  12C7  0020               	movlb	0	; select bank0
 11604  12C8  00D4               	movwf	___fladd@b+3
 11605  12C9  0879               	movf	?___xxtofl+2,w
 11606  12CA  00D3               	movwf	___fladd@b+2
 11607  12CB  0878               	movf	?___xxtofl+1,w
 11608  12CC  00D2               	movwf	___fladd@b+1
 11609  12CD  0877               	movf	?___xxtofl,w
 11610  12CE  00D1               	movwf	___fladd@b
 11611  12CF  0021               	movlb	1	; select bank1
 11612  12D0  0825               	movf	(HX711_read_average@sum+3)^(0+128),w
 11613  12D1  0020               	movlb	0	; select bank0
 11614  12D2  00D8               	movwf	___fladd@a+3
 11615  12D3  0021               	movlb	1	; select bank1
 11616  12D4  0824               	movf	(HX711_read_average@sum+2)^(0+128),w
 11617  12D5  0020               	movlb	0	; select bank0
 11618  12D6  00D7               	movwf	___fladd@a+2
 11619  12D7  0021               	movlb	1	; select bank1
 11620  12D8  0823               	movf	(HX711_read_average@sum+1)^(0+128),w
 11621  12D9  0020               	movlb	0	; select bank0
 11622  12DA  00D6               	movwf	___fladd@a+1
 11623  12DB  0021               	movlb	1	; select bank1
 11624  12DC  0822               	movf	HX711_read_average@sum^(0+128),w
 11625  12DD  0020               	movlb	0	; select bank0
 11626  12DE  00D5               	movwf	___fladd@a
 11627  12DF  3188  2076  3192   	fcall	___fladd
 11628  12E2  0020               	movlb	0	; select bank0
 11629  12E3  0854               	movf	?___fladd+3,w
 11630  12E4  0021               	movlb	1	; select bank1
 11631  12E5  00A5               	movwf	(HX711_read_average@sum+3)^(0+128)
 11632  12E6  0020               	movlb	0	; select bank0
 11633  12E7  0853               	movf	?___fladd+2,w
 11634  12E8  0021               	movlb	1	; select bank1
 11635  12E9  00A4               	movwf	(HX711_read_average@sum+2)^(0+128)
 11636  12EA  0020               	movlb	0	; select bank0
 11637  12EB  0852               	movf	?___fladd+1,w
 11638  12EC  0021               	movlb	1	; select bank1
 11639  12ED  00A3               	movwf	(HX711_read_average@sum+1)^(0+128)
 11640  12EE  0020               	movlb	0	; select bank0
 11641  12EF  0851               	movf	?___fladd,w
 11642  12F0  0021               	movlb	1	; select bank1
 11643  12F1  00A2               	movwf	HX711_read_average@sum^(0+128)
 11644                           
 11645                           ;hx711.c: 192: _delay((unsigned long)((30)*(16000000/4000.0)));
 11646  12F2  309C               	movlw	156
 11647  12F3  0020               	movlb	0	; select bank0
 11648  12F4  00E9               	movwf	??_HX711_read_average
 11649  12F5  30D7               	movlw	215
 11650  12F6                     u6237:	
 11651  12F6  0B89               	decfsz	9,f
 11652  12F7  2AF6               	goto	u6237
 11653  12F8  0BE9               	decfsz	??_HX711_read_average,f
 11654  12F9  2AF6               	goto	u6237
 11655  12FA  3001               	movlw	1
 11656  12FB  0020               	movlb	0	; select bank0
 11657  12FC  00E9               	movwf	??_HX711_read_average
 11658  12FD  0869               	movf	??_HX711_read_average,w
 11659  12FE  0021               	movlb	1	; select bank1
 11660  12FF  07A0               	addwf	HX711_read_average@i^(0+128),f
 11661  1300  2AB3               	goto	l3800
 11662  1301                     l3802:	
 11663                           
 11664                           ;hx711.c: 193: };hx711.c: 194: return (sum / times);
 11665  1301  0821               	movf	HX711_read_average@times^(0+128),w
 11666  1302  0020               	movlb	0	; select bank0
 11667  1303  00E9               	movwf	??_HX711_read_average
 11668  1304  01EA               	clrf	??_HX711_read_average+1
 11669  1305  01EB               	clrf	??_HX711_read_average+2
 11670  1306  01EC               	clrf	??_HX711_read_average+3
 11671  1307  086C               	movf	??_HX711_read_average+3,w
 11672  1308  00FA               	movwf	___xxtofl@val+3
 11673  1309  086B               	movf	??_HX711_read_average+2,w
 11674  130A  00F9               	movwf	___xxtofl@val+2
 11675  130B  086A               	movf	??_HX711_read_average+1,w
 11676  130C  00F8               	movwf	___xxtofl@val+1
 11677  130D  0869               	movf	??_HX711_read_average,w
 11678  130E  00F7               	movwf	___xxtofl@val
 11679  130F  3000               	movlw	0
 11680  1310  3193  2338  3192   	fcall	___xxtofl
 11681  1313  087A               	movf	?___xxtofl+3,w
 11682  1314  0020               	movlb	0	; select bank0
 11683  1315  00B7               	movwf	___fldiv@a+3
 11684  1316  0879               	movf	?___xxtofl+2,w
 11685  1317  00B6               	movwf	___fldiv@a+2
 11686  1318  0878               	movf	?___xxtofl+1,w
 11687  1319  00B5               	movwf	___fldiv@a+1
 11688  131A  0877               	movf	?___xxtofl,w
 11689  131B  00B4               	movwf	___fldiv@a
 11690  131C  0021               	movlb	1	; select bank1
 11691  131D  0825               	movf	(HX711_read_average@sum+3)^(0+128),w
 11692  131E  0020               	movlb	0	; select bank0
 11693  131F  00BB               	movwf	___fldiv@b+3
 11694  1320  0021               	movlb	1	; select bank1
 11695  1321  0824               	movf	(HX711_read_average@sum+2)^(0+128),w
 11696  1322  0020               	movlb	0	; select bank0
 11697  1323  00BA               	movwf	___fldiv@b+2
 11698  1324  0021               	movlb	1	; select bank1
 11699  1325  0823               	movf	(HX711_read_average@sum+1)^(0+128),w
 11700  1326  0020               	movlb	0	; select bank0
 11701  1327  00B9               	movwf	___fldiv@b+1
 11702  1328  0021               	movlb	1	; select bank1
 11703  1329  0822               	movf	HX711_read_average@sum^(0+128),w
 11704  132A  0020               	movlb	0	; select bank0
 11705  132B  00B8               	movwf	___fldiv@b
 11706  132C  3195  2505         	fcall	___fldiv
 11707  132E  0020               	movlb	0	; select bank0
 11708  132F  0837               	movf	?___fldiv+3,w
 11709  1330  00E8               	movwf	?_HX711_read_average+3
 11710  1331  0836               	movf	?___fldiv+2,w
 11711  1332  00E7               	movwf	?_HX711_read_average+2
 11712  1333  0835               	movf	?___fldiv+1,w
 11713  1334  00E6               	movwf	?_HX711_read_average+1
 11714  1335  0834               	movf	?___fldiv,w
 11715  1336  00E5               	movwf	?_HX711_read_average
 11716  1337  0008               	return
 11717  1338                     __end_of_HX711_read_average:	
 11718                           
 11719                           	psect	text40
 11720  1338                     __ptext40:	
 11721 ;; *************** function ___xxtofl *****************
 11722 ;; Defined at:
 11723 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  sign            1    wreg     unsigned char 
 11726 ;;  val             4    7[COMMON] long 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  sign            1   14[BANK0 ] unsigned char 
 11729 ;;  arg             4   16[BANK0 ] unsigned long 
 11730 ;;  exp             1   15[BANK0 ] unsigned char 
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  4    7[COMMON] unsigned char 
 11733 ;; Registers used:
 11734 ;;		wreg, status,2, status,0
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;Total ram usage:       14 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_HX711_read_average
 11750 ;;		_HX711_get_value
 11751 ;;		__doprnt
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           
 11756                           ;psect for function ___xxtofl
 11757  1338                     ___xxtofl:	
 11758                           
 11759                           ;incstack = 0
 11760                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11761                           ;___xxtofl@sign stored from wreg
 11762  1338  0020               	movlb	0	; select bank0
 11763  1339  00AE               	movwf	___xxtofl@sign
 11764  133A  082E               	movf	___xxtofl@sign,w
 11765  133B  1D03               	btfss	3,2
 11766  133C  1FFA               	btfss	___xxtofl@val+3,7
 11767  133D  2B4E               	goto	l3744
 11768  133E  0977               	comf	___xxtofl@val,w
 11769  133F  00B0               	movwf	___xxtofl@arg
 11770  1340  0978               	comf	___xxtofl@val+1,w
 11771  1341  00B1               	movwf	___xxtofl@arg+1
 11772  1342  0979               	comf	___xxtofl@val+2,w
 11773  1343  00B2               	movwf	___xxtofl@arg+2
 11774  1344  097A               	comf	___xxtofl@val+3,w
 11775  1345  00B3               	movwf	___xxtofl@arg+3
 11776  1346  0AB0               	incf	___xxtofl@arg,f
 11777  1347  1903               	skipnz
 11778  1348  0AB1               	incf	___xxtofl@arg+1,f
 11779  1349  1903               	skipnz
 11780  134A  0AB2               	incf	___xxtofl@arg+2,f
 11781  134B  1903               	skipnz
 11782  134C  0AB3               	incf	___xxtofl@arg+3,f
 11783  134D  2B56               	goto	l1208
 11784  134E                     l3744:	
 11785  134E  087A               	movf	___xxtofl@val+3,w
 11786  134F  00B3               	movwf	___xxtofl@arg+3
 11787  1350  0879               	movf	___xxtofl@val+2,w
 11788  1351  00B2               	movwf	___xxtofl@arg+2
 11789  1352  0878               	movf	___xxtofl@val+1,w
 11790  1353  00B1               	movwf	___xxtofl@arg+1
 11791  1354  0877               	movf	___xxtofl@val,w
 11792  1355  00B0               	movwf	___xxtofl@arg
 11793  1356                     l1208:	
 11794  1356  087A               	movf	___xxtofl@val+3,w
 11795  1357  0479               	iorwf	___xxtofl@val+2,w
 11796  1358  0478               	iorwf	___xxtofl@val+1,w
 11797  1359  0477               	iorwf	___xxtofl@val,w
 11798  135A  1D03               	skipz
 11799  135B  2B65               	goto	l3750
 11800  135C  3000               	movlw	0
 11801  135D  00FA               	movwf	?___xxtofl+3
 11802  135E  3000               	movlw	0
 11803  135F  00F9               	movwf	?___xxtofl+2
 11804  1360  3000               	movlw	0
 11805  1361  00F8               	movwf	?___xxtofl+1
 11806  1362  3000               	movlw	0
 11807  1363  00F7               	movwf	?___xxtofl
 11808  1364  0008               	return
 11809  1365                     l3750:	
 11810  1365  3096               	movlw	150
 11811  1366  00AA               	movwf	??___xxtofl
 11812  1367  082A               	movf	??___xxtofl,w
 11813  1368  00AF               	movwf	___xxtofl@exp
 11814  1369                     l3754:	
 11815  1369  30FE               	movlw	254
 11816  136A  0533               	andwf	___xxtofl@arg+3,w
 11817  136B  1903               	btfsc	3,2
 11818  136C  2B8C               	goto	l1214
 11819  136D  3001               	movlw	1
 11820  136E  00AA               	movwf	??___xxtofl
 11821  136F  082A               	movf	??___xxtofl,w
 11822  1370  07AF               	addwf	___xxtofl@exp,f
 11823  1371  3001               	movlw	1
 11824  1372                     u4605:	
 11825  1372  36B3               	lsrf	___xxtofl@arg+3,f
 11826  1373  0CB2               	rrf	___xxtofl@arg+2,f
 11827  1374  0CB1               	rrf	___xxtofl@arg+1,f
 11828  1375  0CB0               	rrf	___xxtofl@arg,f
 11829  1376  0B89               	decfsz	9,f
 11830  1377  2B72               	goto	u4605
 11831  1378  2B69               	goto	l3754
 11832  1379                     l3756:	
 11833  1379  3001               	movlw	1
 11834  137A  00AA               	movwf	??___xxtofl
 11835  137B  082A               	movf	??___xxtofl,w
 11836  137C  07AF               	addwf	___xxtofl@exp,f
 11837  137D  3001               	movlw	1
 11838  137E  07B0               	addwf	___xxtofl@arg,f
 11839  137F  3000               	movlw	0
 11840  1380  3DB1               	addwfc	___xxtofl@arg+1,f
 11841  1381  3000               	movlw	0
 11842  1382  3DB2               	addwfc	___xxtofl@arg+2,f
 11843  1383  3000               	movlw	0
 11844  1384  3DB3               	addwfc	___xxtofl@arg+3,f
 11845  1385  3001               	movlw	1
 11846  1386                     u4625:	
 11847  1386  36B3               	lsrf	___xxtofl@arg+3,f
 11848  1387  0CB2               	rrf	___xxtofl@arg+2,f
 11849  1388  0CB1               	rrf	___xxtofl@arg+1,f
 11850  1389  0CB0               	rrf	___xxtofl@arg,f
 11851  138A  0B89               	decfsz	9,f
 11852  138B  2B86               	goto	u4625
 11853  138C                     l1214:	
 11854  138C  30FF               	movlw	255
 11855  138D  0533               	andwf	___xxtofl@arg+3,w
 11856  138E  1903               	btfsc	3,2
 11857  138F  2B9E               	goto	l3764
 11858  1390  2B79               	goto	l3756
 11859  1391                     l3766:	
 11860  1391  3002               	movlw	2
 11861  1392  022F               	subwf	___xxtofl@exp,w
 11862  1393  1C03               	btfss	3,0
 11863  1394  2BA0               	goto	l1221
 11864  1395  3001               	movlw	1
 11865  1396  02AF               	subwf	___xxtofl@exp,f
 11866  1397  3001               	movlw	1
 11867  1398                     u4645:	
 11868  1398  35B0               	lslf	___xxtofl@arg,f
 11869  1399  0DB1               	rlf	___xxtofl@arg+1,f
 11870  139A  0DB2               	rlf	___xxtofl@arg+2,f
 11871  139B  0DB3               	rlf	___xxtofl@arg+3,f
 11872  139C  0B89               	decfsz	9,f
 11873  139D  2B98               	goto	u4645
 11874  139E                     l3764:	
 11875  139E  1FB2               	btfss	___xxtofl@arg+2,7
 11876  139F  2B91               	goto	l3766
 11877  13A0                     l1221:	
 11878  13A0  182F               	btfsc	___xxtofl@exp,0
 11879  13A1  2BAA               	goto	l1222
 11880  13A2  30FF               	movlw	255
 11881  13A3  05B0               	andwf	___xxtofl@arg,f
 11882  13A4  30FF               	movlw	255
 11883  13A5  05B1               	andwf	___xxtofl@arg+1,f
 11884  13A6  307F               	movlw	127
 11885  13A7  05B2               	andwf	___xxtofl@arg+2,f
 11886  13A8  30FF               	movlw	255
 11887  13A9  05B3               	andwf	___xxtofl@arg+3,f
 11888  13AA                     l1222:	
 11889  13AA  1003               	clrc
 11890  13AB  0CAF               	rrf	___xxtofl@exp,f
 11891  13AC  082F               	movf	___xxtofl@exp,w
 11892  13AD  00AA               	movwf	??___xxtofl
 11893  13AE  01AB               	clrf	??___xxtofl+1
 11894  13AF  01AC               	clrf	??___xxtofl+2
 11895  13B0  01AD               	clrf	??___xxtofl+3
 11896  13B1  3018               	movlw	24
 11897  13B2                     u4685:	
 11898  13B2  35AA               	lslf	??___xxtofl,f
 11899  13B3  0DAB               	rlf	??___xxtofl+1,f
 11900  13B4  0DAC               	rlf	??___xxtofl+2,f
 11901  13B5  0DAD               	rlf	??___xxtofl+3,f
 11902  13B6  0B89               	decfsz	9,f
 11903  13B7  2BB2               	goto	u4685
 11904  13B8  082A               	movf	??___xxtofl,w
 11905  13B9  04B0               	iorwf	___xxtofl@arg,f
 11906  13BA  082B               	movf	??___xxtofl+1,w
 11907  13BB  04B1               	iorwf	___xxtofl@arg+1,f
 11908  13BC  082C               	movf	??___xxtofl+2,w
 11909  13BD  04B2               	iorwf	___xxtofl@arg+2,f
 11910  13BE  082D               	movf	??___xxtofl+3,w
 11911  13BF  04B3               	iorwf	___xxtofl@arg+3,f
 11912  13C0  082E               	movf	___xxtofl@sign,w
 11913  13C1  1D03               	btfss	3,2
 11914  13C2  1FFA               	btfss	___xxtofl@val+3,7
 11915  13C3  2BC5               	goto	l3778
 11916  13C4  17B3               	bsf	___xxtofl@arg+3,7
 11917  13C5                     l3778:	
 11918  13C5  0833               	movf	___xxtofl@arg+3,w
 11919  13C6  00FA               	movwf	?___xxtofl+3
 11920  13C7  0832               	movf	___xxtofl@arg+2,w
 11921  13C8  00F9               	movwf	?___xxtofl+2
 11922  13C9  0831               	movf	___xxtofl@arg+1,w
 11923  13CA  00F8               	movwf	?___xxtofl+1
 11924  13CB  0830               	movf	___xxtofl@arg,w
 11925  13CC  00F7               	movwf	?___xxtofl
 11926  13CD  0008               	return
 11927  13CE                     __end_of___xxtofl:	
 11928                           
 11929                           	psect	text41
 11930  1505                     __ptext41:	
 11931 ;; *************** function ___fldiv *****************
 11932 ;; Defined at:
 11933 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;  a               4   20[BANK0 ] unsigned char 
 11936 ;;  b               4   24[BANK0 ] unsigned char 
 11937 ;; Auto vars:     Size  Location     Type
 11938 ;;  grs             4   40[BANK0 ] unsigned long 
 11939 ;;  rem             4   33[BANK0 ] unsigned long 
 11940 ;;  new_exp         2   38[BANK0 ] int 
 11941 ;;  aexp            1   45[BANK0 ] unsigned char 
 11942 ;;  bexp            1   44[BANK0 ] unsigned char 
 11943 ;;  sign            1   37[BANK0 ] unsigned char 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  4   20[BANK0 ] unsigned char 
 11946 ;; Registers used:
 11947 ;;		wreg, status,2, status,0
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11953 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;Total ram usage:       26 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_HX711_read_average
 11963 ;;		_HX711_get_units
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function ___fldiv
 11969  1505                     ___fldiv:	
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11973  1505  0020               	movlb	0	; select bank0
 11974  1506  083B               	movf	___fldiv@b+3,w
 11975  1507  3980               	andlw	128
 11976  1508  00BC               	movwf	??___fldiv
 11977  1509  083C               	movf	??___fldiv,w
 11978  150A  00C5               	movwf	___fldiv@sign
 11979  150B  353B               	lslf	___fldiv@b+3,w
 11980  150C  00BC               	movwf	??___fldiv
 11981  150D  083C               	movf	??___fldiv,w
 11982  150E  00CC               	movwf	___fldiv@bexp
 11983  150F  1BBA               	btfsc	___fldiv@b+2,7
 11984  1510  144C               	bsf	___fldiv@bexp,0
 11985  1511  084C               	movf	___fldiv@bexp,w
 11986  1512  1903               	btfsc	3,2
 11987  1513  2D22               	goto	l3476
 11988  1514  0A4C               	incf	___fldiv@bexp,w
 11989  1515  1D03               	btfss	3,2
 11990  1516  2D1F               	goto	l3472
 11991  1517  3000               	movlw	0
 11992  1518  00BB               	movwf	___fldiv@b+3
 11993  1519  3000               	movlw	0
 11994  151A  00BA               	movwf	___fldiv@b+2
 11995  151B  3000               	movlw	0
 11996  151C  00B9               	movwf	___fldiv@b+1
 11997  151D  3000               	movlw	0
 11998  151E  00B8               	movwf	___fldiv@b
 11999  151F                     l3472:	
 12000  151F  17BA               	bsf	___fldiv@b+2,7
 12001  1520  01BB               	clrf	___fldiv@b+3
 12002  1521  2D2A               	goto	l3478
 12003  1522                     l3476:	
 12004  1522  3000               	movlw	0
 12005  1523  00BB               	movwf	___fldiv@b+3
 12006  1524  3000               	movlw	0
 12007  1525  00BA               	movwf	___fldiv@b+2
 12008  1526  3000               	movlw	0
 12009  1527  00B9               	movwf	___fldiv@b+1
 12010  1528  3000               	movlw	0
 12011  1529  00B8               	movwf	___fldiv@b
 12012  152A                     l3478:	
 12013  152A  0837               	movf	___fldiv@a+3,w
 12014  152B  3980               	andlw	128
 12015  152C  00BC               	movwf	??___fldiv
 12016  152D  083C               	movf	??___fldiv,w
 12017  152E  06C5               	xorwf	___fldiv@sign,f
 12018  152F  3537               	lslf	___fldiv@a+3,w
 12019  1530  00BC               	movwf	??___fldiv
 12020  1531  083C               	movf	??___fldiv,w
 12021  1532  00CD               	movwf	___fldiv@aexp
 12022  1533  1BB6               	btfsc	___fldiv@a+2,7
 12023  1534  144D               	bsf	___fldiv@aexp,0
 12024  1535  084D               	movf	___fldiv@aexp,w
 12025  1536  1903               	btfsc	3,2
 12026  1537  2D46               	goto	l3496
 12027  1538  0A4D               	incf	___fldiv@aexp,w
 12028  1539  1D03               	btfss	3,2
 12029  153A  2D43               	goto	l3492
 12030  153B  3000               	movlw	0
 12031  153C  00B7               	movwf	___fldiv@a+3
 12032  153D  3000               	movlw	0
 12033  153E  00B6               	movwf	___fldiv@a+2
 12034  153F  3000               	movlw	0
 12035  1540  00B5               	movwf	___fldiv@a+1
 12036  1541  3000               	movlw	0
 12037  1542  00B4               	movwf	___fldiv@a
 12038  1543                     l3492:	
 12039  1543  17B6               	bsf	___fldiv@a+2,7
 12040  1544  01B7               	clrf	___fldiv@a+3
 12041  1545  2D4E               	goto	l1130
 12042  1546                     l3496:	
 12043  1546  3000               	movlw	0
 12044  1547  00B7               	movwf	___fldiv@a+3
 12045  1548  3000               	movlw	0
 12046  1549  00B6               	movwf	___fldiv@a+2
 12047  154A  3000               	movlw	0
 12048  154B  00B5               	movwf	___fldiv@a+1
 12049  154C  3000               	movlw	0
 12050  154D  00B4               	movwf	___fldiv@a
 12051  154E                     l1130:	
 12052  154E  0837               	movf	___fldiv@a+3,w
 12053  154F  0436               	iorwf	___fldiv@a+2,w
 12054  1550  0435               	iorwf	___fldiv@a+1,w
 12055  1551  0434               	iorwf	___fldiv@a,w
 12056  1552  1D03               	skipz
 12057  1553  2D6D               	goto	l3506
 12058  1554  3000               	movlw	0
 12059  1555  00BB               	movwf	___fldiv@b+3
 12060  1556  3000               	movlw	0
 12061  1557  00BA               	movwf	___fldiv@b+2
 12062  1558  3000               	movlw	0
 12063  1559  00B9               	movwf	___fldiv@b+1
 12064  155A  3000               	movlw	0
 12065  155B  00B8               	movwf	___fldiv@b
 12066  155C  3080               	movlw	128
 12067  155D  04BA               	iorwf	___fldiv@b+2,f
 12068  155E  307F               	movlw	127
 12069  155F  04BB               	iorwf	___fldiv@b+3,f
 12070  1560                     L9:	
 12071  1560  0845               	movf	___fldiv@sign,w
 12072  1561  00BC               	movwf	??___fldiv
 12073  1562  083C               	movf	??___fldiv,w
 12074  1563  04BB               	iorwf	___fldiv@b+3,f
 12075  1564  083B               	movf	___fldiv@b+3,w
 12076  1565  00B7               	movwf	?___fldiv+3
 12077  1566  083A               	movf	___fldiv@b+2,w
 12078  1567  00B6               	movwf	?___fldiv+2
 12079  1568  0839               	movf	___fldiv@b+1,w
 12080  1569  00B5               	movwf	?___fldiv+1
 12081  156A  0838               	movf	___fldiv@b,w
 12082  156B  00B4               	movwf	?___fldiv
 12083  156C  0008               	return
 12084  156D                     l3506:	
 12085  156D  084C               	movf	___fldiv@bexp,w
 12086  156E  1D03               	btfss	3,2
 12087  156F  2D79               	goto	l3512
 12088  1570  3000               	movlw	0
 12089  1571  00B7               	movwf	?___fldiv+3
 12090  1572  3000               	movlw	0
 12091  1573  00B6               	movwf	?___fldiv+2
 12092  1574  3000               	movlw	0
 12093  1575  00B5               	movwf	?___fldiv+1
 12094  1576  3000               	movlw	0
 12095  1577  00B4               	movwf	?___fldiv
 12096  1578  0008               	return
 12097  1579                     l3512:	
 12098  1579  084C               	movf	___fldiv@bexp,w
 12099  157A  00BC               	movwf	??___fldiv
 12100  157B  01BD               	clrf	??___fldiv+1
 12101  157C  083D               	movf	??___fldiv+1,w
 12102  157D  00BF               	movwf	??___fldiv+3
 12103  157E  084D               	movf	___fldiv@aexp,w
 12104  157F  023C               	subwf	??___fldiv,w
 12105  1580  00BE               	movwf	??___fldiv+2
 12106  1581  1C03               	skipc
 12107  1582  03BF               	decf	??___fldiv+3,f
 12108  1583  083E               	movf	??___fldiv+2,w
 12109  1584  3E7F               	addlw	127
 12110  1585  00C6               	movwf	___fldiv@new_exp
 12111  1586  3000               	movlw	0
 12112  1587  3D3F               	addwfc	??___fldiv+3,w
 12113  1588  00C7               	movwf	___fldiv@new_exp+1
 12114  1589  083B               	movf	___fldiv@b+3,w
 12115  158A  00C4               	movwf	___fldiv@rem+3
 12116  158B  083A               	movf	___fldiv@b+2,w
 12117  158C  00C3               	movwf	___fldiv@rem+2
 12118  158D  0839               	movf	___fldiv@b+1,w
 12119  158E  00C2               	movwf	___fldiv@rem+1
 12120  158F  0838               	movf	___fldiv@b,w
 12121  1590  00C1               	movwf	___fldiv@rem
 12122  1591  3000               	movlw	0
 12123  1592  00BB               	movwf	___fldiv@b+3
 12124  1593  3000               	movlw	0
 12125  1594  00BA               	movwf	___fldiv@b+2
 12126  1595  3000               	movlw	0
 12127  1596  00B9               	movwf	___fldiv@b+1
 12128  1597  3000               	movlw	0
 12129  1598  00B8               	movwf	___fldiv@b
 12130  1599  3000               	movlw	0
 12131  159A  00CB               	movwf	___fldiv@grs+3
 12132  159B  3000               	movlw	0
 12133  159C  00CA               	movwf	___fldiv@grs+2
 12134  159D  3000               	movlw	0
 12135  159E  00C9               	movwf	___fldiv@grs+1
 12136  159F  3000               	movlw	0
 12137  15A0  00C8               	movwf	___fldiv@grs
 12138  15A1  01CD               	clrf	___fldiv@aexp
 12139  15A2                     l3540:	
 12140  15A2  301A               	movlw	26
 12141  15A3  024D               	subwf	___fldiv@aexp,w
 12142  15A4  1803               	btfsc	3,0
 12143  15A5  2DDE               	goto	l3542
 12144  15A6  084D               	movf	___fldiv@aexp,w
 12145  15A7  1903               	btfsc	3,2
 12146  15A8  2DC0               	goto	l3532
 12147  15A9  3001               	movlw	1
 12148  15AA                     u4115:	
 12149  15AA  35C1               	lslf	___fldiv@rem,f
 12150  15AB  0DC2               	rlf	___fldiv@rem+1,f
 12151  15AC  0DC3               	rlf	___fldiv@rem+2,f
 12152  15AD  0DC4               	rlf	___fldiv@rem+3,f
 12153  15AE  0B89               	decfsz	9,f
 12154  15AF  2DAA               	goto	u4115
 12155  15B0  3001               	movlw	1
 12156  15B1                     u4125:	
 12157  15B1  35B8               	lslf	___fldiv@b,f
 12158  15B2  0DB9               	rlf	___fldiv@b+1,f
 12159  15B3  0DBA               	rlf	___fldiv@b+2,f
 12160  15B4  0DBB               	rlf	___fldiv@b+3,f
 12161  15B5  0B89               	decfsz	9,f
 12162  15B6  2DB1               	goto	u4125
 12163  15B7  1BCB               	btfsc	___fldiv@grs+3,7
 12164  15B8  1438               	bsf	___fldiv@b,0
 12165  15B9  3001               	movlw	1
 12166  15BA                     u4145:	
 12167  15BA  35C8               	lslf	___fldiv@grs,f
 12168  15BB  0DC9               	rlf	___fldiv@grs+1,f
 12169  15BC  0DCA               	rlf	___fldiv@grs+2,f
 12170  15BD  0DCB               	rlf	___fldiv@grs+3,f
 12171  15BE  0B89               	decfsz	9,f
 12172  15BF  2DBA               	goto	u4145
 12173  15C0                     l3532:	
 12174  15C0  0837               	movf	___fldiv@a+3,w
 12175  15C1  0244               	subwf	___fldiv@rem+3,w
 12176  15C2  1D03               	skipz
 12177  15C3  2DCE               	goto	u4155
 12178  15C4  0836               	movf	___fldiv@a+2,w
 12179  15C5  0243               	subwf	___fldiv@rem+2,w
 12180  15C6  1D03               	skipz
 12181  15C7  2DCE               	goto	u4155
 12182  15C8  0835               	movf	___fldiv@a+1,w
 12183  15C9  0242               	subwf	___fldiv@rem+1,w
 12184  15CA  1D03               	skipz
 12185  15CB  2DCE               	goto	u4155
 12186  15CC  0834               	movf	___fldiv@a,w
 12187  15CD  0241               	subwf	___fldiv@rem,w
 12188  15CE                     u4155:	
 12189  15CE  1C03               	skipc
 12190  15CF  2DD9               	goto	l3538
 12191  15D0  174B               	bsf	___fldiv@grs+3,6
 12192  15D1  0834               	movf	___fldiv@a,w
 12193  15D2  02C1               	subwf	___fldiv@rem,f
 12194  15D3  0835               	movf	___fldiv@a+1,w
 12195  15D4  3BC2               	subwfb	___fldiv@rem+1,f
 12196  15D5  0836               	movf	___fldiv@a+2,w
 12197  15D6  3BC3               	subwfb	___fldiv@rem+2,f
 12198  15D7  0837               	movf	___fldiv@a+3,w
 12199  15D8  3BC4               	subwfb	___fldiv@rem+3,f
 12200  15D9                     l3538:	
 12201  15D9  3001               	movlw	1
 12202  15DA  00BC               	movwf	??___fldiv
 12203  15DB  083C               	movf	??___fldiv,w
 12204  15DC  07CD               	addwf	___fldiv@aexp,f
 12205  15DD  2DA2               	goto	l3540
 12206  15DE                     l3542:	
 12207  15DE  0844               	movf	___fldiv@rem+3,w
 12208  15DF  0443               	iorwf	___fldiv@rem+2,w
 12209  15E0  0442               	iorwf	___fldiv@rem+1,w
 12210  15E1  0441               	iorwf	___fldiv@rem,w
 12211  15E2  1D03               	btfss	3,2
 12212  15E3  1448               	bsf	___fldiv@grs,0
 12213  15E4                     l3556:	
 12214  15E4  1BBA               	btfsc	___fldiv@b+2,7
 12215  15E5  2DFB               	goto	l3558
 12216  15E6  3001               	movlw	1
 12217  15E7                     u4185:	
 12218  15E7  35B8               	lslf	___fldiv@b,f
 12219  15E8  0DB9               	rlf	___fldiv@b+1,f
 12220  15E9  0DBA               	rlf	___fldiv@b+2,f
 12221  15EA  0DBB               	rlf	___fldiv@b+3,f
 12222  15EB  0B89               	decfsz	9,f
 12223  15EC  2DE7               	goto	u4185
 12224  15ED  1BCB               	btfsc	___fldiv@grs+3,7
 12225  15EE  1438               	bsf	___fldiv@b,0
 12226  15EF  3001               	movlw	1
 12227  15F0                     u4205:	
 12228  15F0  35C8               	lslf	___fldiv@grs,f
 12229  15F1  0DC9               	rlf	___fldiv@grs+1,f
 12230  15F2  0DCA               	rlf	___fldiv@grs+2,f
 12231  15F3  0DCB               	rlf	___fldiv@grs+3,f
 12232  15F4  0B89               	decfsz	9,f
 12233  15F5  2DF0               	goto	u4205
 12234  15F6  30FF               	movlw	255
 12235  15F7  07C6               	addwf	___fldiv@new_exp,f
 12236  15F8  30FF               	movlw	255
 12237  15F9  3DC7               	addwfc	___fldiv@new_exp+1,f
 12238  15FA  2DE4               	goto	l3556
 12239  15FB                     l3558:	
 12240  15FB  01CD               	clrf	___fldiv@aexp
 12241  15FC  1FCB               	btfss	___fldiv@grs+3,7
 12242  15FD  2E14               	goto	l3568
 12243  15FE  30FF               	movlw	255
 12244  15FF  0548               	andwf	___fldiv@grs,w
 12245  1600  00BC               	movwf	??___fldiv
 12246  1601  30FF               	movlw	255
 12247  1602  0549               	andwf	___fldiv@grs+1,w
 12248  1603  00BD               	movwf	??___fldiv+1
 12249  1604  30FF               	movlw	255
 12250  1605  054A               	andwf	___fldiv@grs+2,w
 12251  1606  00BE               	movwf	??___fldiv+2
 12252  1607  307F               	movlw	127
 12253  1608  054B               	andwf	___fldiv@grs+3,w
 12254  1609  00BF               	movwf	??___fldiv+3
 12255  160A  083F               	movf	??___fldiv+3,w
 12256  160B  043E               	iorwf	??___fldiv+2,w
 12257  160C  043D               	iorwf	??___fldiv+1,w
 12258  160D  043C               	iorwf	??___fldiv,w
 12259  160E  1903               	skipnz
 12260  160F  1838               	btfsc	___fldiv@b,0
 12261  1610  2E12               	goto	l3564
 12262  1611  2E14               	goto	l3568
 12263  1612                     l3564:	
 12264  1612  01CD               	clrf	___fldiv@aexp
 12265  1613  0ACD               	incf	___fldiv@aexp,f
 12266  1614                     l3568:	
 12267  1614  084D               	movf	___fldiv@aexp,w
 12268  1615  1903               	btfsc	3,2
 12269  1616  2E3D               	goto	l3578
 12270  1617  3001               	movlw	1
 12271  1618  07B8               	addwf	___fldiv@b,f
 12272  1619  3000               	movlw	0
 12273  161A  3DB9               	addwfc	___fldiv@b+1,f
 12274  161B  3000               	movlw	0
 12275  161C  3DBA               	addwfc	___fldiv@b+2,f
 12276  161D  3000               	movlw	0
 12277  161E  3DBB               	addwfc	___fldiv@b+3,f
 12278  161F  1C3B               	btfss	___fldiv@b+3,0
 12279  1620  2E3D               	goto	l3578
 12280  1621  0838               	movf	___fldiv@b,w
 12281  1622  00BC               	movwf	??___fldiv
 12282  1623  0839               	movf	___fldiv@b+1,w
 12283  1624  00BD               	movwf	??___fldiv+1
 12284  1625  083A               	movf	___fldiv@b+2,w
 12285  1626  00BE               	movwf	??___fldiv+2
 12286  1627  083B               	movf	___fldiv@b+3,w
 12287  1628  00BF               	movwf	??___fldiv+3
 12288  1629  3001               	movlw	1
 12289  162A  00C0               	movwf	??___fldiv+4
 12290  162B                     u4275:	
 12291  162B  37BF               	asrf	??___fldiv+3,f
 12292  162C  0CBE               	rrf	??___fldiv+2,f
 12293  162D  0CBD               	rrf	??___fldiv+1,f
 12294  162E  0CBC               	rrf	??___fldiv,f
 12295  162F  0BC0               	decfsz	??___fldiv+4,f
 12296  1630  2E2B               	goto	u4275
 12297  1631  083F               	movf	??___fldiv+3,w
 12298  1632  00BB               	movwf	___fldiv@b+3
 12299  1633  083E               	movf	??___fldiv+2,w
 12300  1634  00BA               	movwf	___fldiv@b+2
 12301  1635  083D               	movf	??___fldiv+1,w
 12302  1636  00B9               	movwf	___fldiv@b+1
 12303  1637  083C               	movf	??___fldiv,w
 12304  1638  00B8               	movwf	___fldiv@b
 12305  1639  3001               	movlw	1
 12306  163A  07C6               	addwf	___fldiv@new_exp,f
 12307  163B  3000               	movlw	0
 12308  163C  3DC7               	addwfc	___fldiv@new_exp+1,f
 12309  163D                     l3578:	
 12310  163D  0847               	movf	___fldiv@new_exp+1,w
 12311  163E  3A80               	xorlw	128
 12312  163F  00BC               	movwf	??___fldiv
 12313  1640  3080               	movlw	128
 12314  1641  023C               	subwf	??___fldiv,w
 12315  1642  1D03               	skipz
 12316  1643  2E46               	goto	u4285
 12317  1644  30FF               	movlw	255
 12318  1645  0246               	subwf	___fldiv@new_exp,w
 12319  1646                     u4285:	
 12320  1646  1C03               	skipc
 12321  1647  2E55               	goto	l1151
 12322  1648  30FF               	movlw	255
 12323  1649  0020               	movlb	0	; select bank0
 12324  164A  00C6               	movwf	___fldiv@new_exp
 12325  164B  3000               	movlw	0
 12326  164C  00C7               	movwf	___fldiv@new_exp+1
 12327  164D  3000               	movlw	0
 12328  164E  00BB               	movwf	___fldiv@b+3
 12329  164F  3000               	movlw	0
 12330  1650  00BA               	movwf	___fldiv@b+2
 12331  1651  3000               	movlw	0
 12332  1652  00B9               	movwf	___fldiv@b+1
 12333  1653  3000               	movlw	0
 12334  1654  00B8               	movwf	___fldiv@b
 12335  1655                     l1151:	
 12336  1655  0020               	movlb	0	; select bank0
 12337  1656  0847               	movf	___fldiv@new_exp+1,w
 12338  1657  3A80               	xorlw	128
 12339  1658  00BC               	movwf	??___fldiv
 12340  1659  3080               	movlw	128
 12341  165A  023C               	subwf	??___fldiv,w
 12342  165B  1D03               	skipz
 12343  165C  2E5F               	goto	u4295
 12344  165D  3001               	movlw	1
 12345  165E  0246               	subwf	___fldiv@new_exp,w
 12346  165F                     u4295:	
 12347  165F  1803               	skipnc
 12348  1660  2E6D               	goto	l1152
 12349  1661  0020               	movlb	0	; select bank0
 12350  1662  01C6               	clrf	___fldiv@new_exp
 12351  1663  01C7               	clrf	___fldiv@new_exp+1
 12352  1664  3000               	movlw	0
 12353  1665  00BB               	movwf	___fldiv@b+3
 12354  1666  3000               	movlw	0
 12355  1667  00BA               	movwf	___fldiv@b+2
 12356  1668  3000               	movlw	0
 12357  1669  00B9               	movwf	___fldiv@b+1
 12358  166A  3000               	movlw	0
 12359  166B  00B8               	movwf	___fldiv@b
 12360  166C  01C5               	clrf	___fldiv@sign
 12361  166D                     l1152:	
 12362  166D  0020               	movlb	0	; select bank0
 12363  166E  0846               	movf	___fldiv@new_exp,w
 12364  166F  00BC               	movwf	??___fldiv
 12365  1670  083C               	movf	??___fldiv,w
 12366  1671  00CC               	movwf	___fldiv@bexp
 12367  1672  1C4C               	btfss	___fldiv@bexp,0
 12368  1673  2E76               	goto	l3592
 12369  1674  17BA               	bsf	___fldiv@b+2,7
 12370  1675  2E7A               	goto	l1154
 12371  1676                     l3592:	
 12372  1676  307F               	movlw	127
 12373  1677  00BC               	movwf	??___fldiv
 12374  1678  083C               	movf	??___fldiv,w
 12375  1679  05BA               	andwf	___fldiv@b+2,f
 12376  167A                     l1154:	
 12377  167A  364C               	lsrf	___fldiv@bexp,w
 12378  167B  00BC               	movwf	??___fldiv
 12379  167C  083C               	movf	??___fldiv,w
 12380  167D  00BB               	movwf	___fldiv@b+3
 12381  167E  2D60               	goto	L9
 12382  167F                     __end_of___fldiv:	
 12383                           
 12384                           	psect	text42
 12385  0876                     __ptext42:	
 12386 ;; *************** function ___fladd *****************
 12387 ;; Defined at:
 12388 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  b               4   49[BANK0 ] unsigned char 
 12391 ;;  a               4   53[BANK0 ] unsigned char 
 12392 ;; Auto vars:     Size  Location     Type
 12393 ;;  grs             1   68[BANK0 ] unsigned char 
 12394 ;;  bexp            1   67[BANK0 ] unsigned char 
 12395 ;;  aexp            1   66[BANK0 ] unsigned char 
 12396 ;;  signs           1   65[BANK0 ] unsigned char 
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  4   49[BANK0 ] unsigned char 
 12399 ;; Registers used:
 12400 ;;		wreg, status,2, status,0
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12410 ;;Total ram usage:       20 bytes
 12411 ;; Hardware stack levels used:    1
 12412 ;; This function calls:
 12413 ;;		Nothing
 12414 ;; This function is called by:
 12415 ;;		_HX711_read_average
 12416 ;;		__doprnt
 12417 ;;		___flsub
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           
 12422                           ;psect for function ___fladd
 12423  0876                     ___fladd:	
 12424                           
 12425                           ;incstack = 0
 12426                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 12427  0876  0020               	movlb	0	; select bank0
 12428  0877  0854               	movf	___fladd@b+3,w
 12429  0878  3980               	andlw	128
 12430  0879  00D9               	movwf	??___fladd
 12431  087A  0859               	movf	??___fladd,w
 12432  087B  00E1               	movwf	___fladd@signs
 12433  087C  3554               	lslf	___fladd@b+3,w
 12434  087D  00D9               	movwf	??___fladd
 12435  087E  0859               	movf	??___fladd,w
 12436  087F  00E3               	movwf	___fladd@bexp
 12437  0880  1BD3               	btfsc	___fladd@b+2,7
 12438  0881  1463               	bsf	___fladd@bexp,0
 12439  0882  0863               	movf	___fladd@bexp,w
 12440  0883  1903               	btfsc	3,2
 12441  0884  2893               	goto	l3282
 12442  0885  0A63               	incf	___fladd@bexp,w
 12443  0886  1D03               	btfss	3,2
 12444  0887  2890               	goto	l3278
 12445  0888  3000               	movlw	0
 12446  0889  00D4               	movwf	___fladd@b+3
 12447  088A  3000               	movlw	0
 12448  088B  00D3               	movwf	___fladd@b+2
 12449  088C  3000               	movlw	0
 12450  088D  00D2               	movwf	___fladd@b+1
 12451  088E  3000               	movlw	0
 12452  088F  00D1               	movwf	___fladd@b
 12453  0890                     l3278:	
 12454  0890  17D3               	bsf	___fladd@b+2,7
 12455  0891  01D4               	clrf	___fladd@b+3
 12456  0892  289B               	goto	l3284
 12457  0893                     l3282:	
 12458  0893  3000               	movlw	0
 12459  0894  00D4               	movwf	___fladd@b+3
 12460  0895  3000               	movlw	0
 12461  0896  00D3               	movwf	___fladd@b+2
 12462  0897  3000               	movlw	0
 12463  0898  00D2               	movwf	___fladd@b+1
 12464  0899  3000               	movlw	0
 12465  089A  00D1               	movwf	___fladd@b
 12466  089B                     l3284:	
 12467  089B  0858               	movf	___fladd@a+3,w
 12468  089C  3980               	andlw	128
 12469  089D  00D9               	movwf	??___fladd
 12470  089E  0859               	movf	??___fladd,w
 12471  089F  00E2               	movwf	___fladd@aexp
 12472  08A0  0862               	movf	___fladd@aexp,w
 12473  08A1  0661               	xorwf	___fladd@signs,w
 12474  08A2  1D03               	btfss	3,2
 12475  08A3  1761               	bsf	___fladd@signs,6
 12476  08A4  3558               	lslf	___fladd@a+3,w
 12477  08A5  00D9               	movwf	??___fladd
 12478  08A6  0859               	movf	??___fladd,w
 12479  08A7  00E2               	movwf	___fladd@aexp
 12480  08A8  1BD7               	btfsc	___fladd@a+2,7
 12481  08A9  1462               	bsf	___fladd@aexp,0
 12482  08AA  0862               	movf	___fladd@aexp,w
 12483  08AB  1903               	btfsc	3,2
 12484  08AC  28BB               	goto	l3306
 12485  08AD  0A62               	incf	___fladd@aexp,w
 12486  08AE  1D03               	btfss	3,2
 12487  08AF  28B8               	goto	l3302
 12488  08B0  3000               	movlw	0
 12489  08B1  00D8               	movwf	___fladd@a+3
 12490  08B2  3000               	movlw	0
 12491  08B3  00D7               	movwf	___fladd@a+2
 12492  08B4  3000               	movlw	0
 12493  08B5  00D6               	movwf	___fladd@a+1
 12494  08B6  3000               	movlw	0
 12495  08B7  00D5               	movwf	___fladd@a
 12496  08B8                     l3302:	
 12497  08B8  17D7               	bsf	___fladd@a+2,7
 12498  08B9  01D8               	clrf	___fladd@a+3
 12499  08BA  28C3               	goto	l1074
 12500  08BB                     l3306:	
 12501  08BB  3000               	movlw	0
 12502  08BC  00D8               	movwf	___fladd@a+3
 12503  08BD  3000               	movlw	0
 12504  08BE  00D7               	movwf	___fladd@a+2
 12505  08BF  3000               	movlw	0
 12506  08C0  00D6               	movwf	___fladd@a+1
 12507  08C1  3000               	movlw	0
 12508  08C2  00D5               	movwf	___fladd@a
 12509  08C3                     l1074:	
 12510  08C3  0863               	movf	___fladd@bexp,w
 12511  08C4  0262               	subwf	___fladd@aexp,w
 12512  08C5  1803               	skipnc
 12513  08C6  2909               	goto	l3342
 12514  08C7  1F61               	btfss	___fladd@signs,6
 12515  08C8  28CD               	goto	l3312
 12516  08C9  3080               	movlw	128
 12517  08CA  00D9               	movwf	??___fladd
 12518  08CB  0859               	movf	??___fladd,w
 12519  08CC  06E1               	xorwf	___fladd@signs,f
 12520  08CD                     l3312:	
 12521  08CD  0863               	movf	___fladd@bexp,w
 12522  08CE  00D9               	movwf	??___fladd
 12523  08CF  0859               	movf	??___fladd,w
 12524  08D0  00E4               	movwf	___fladd@grs
 12525  08D1  0862               	movf	___fladd@aexp,w
 12526  08D2  00D9               	movwf	??___fladd
 12527  08D3  0859               	movf	??___fladd,w
 12528  08D4  00E3               	movwf	___fladd@bexp
 12529  08D5  0864               	movf	___fladd@grs,w
 12530  08D6  00D9               	movwf	??___fladd
 12531  08D7  0859               	movf	??___fladd,w
 12532  08D8  00E2               	movwf	___fladd@aexp
 12533  08D9  0851               	movf	___fladd@b,w
 12534  08DA  00D9               	movwf	??___fladd
 12535  08DB  0859               	movf	??___fladd,w
 12536  08DC  00E4               	movwf	___fladd@grs
 12537  08DD  0855               	movf	___fladd@a,w
 12538  08DE  00D9               	movwf	??___fladd
 12539  08DF  0859               	movf	??___fladd,w
 12540  08E0  00D1               	movwf	___fladd@b
 12541  08E1  0864               	movf	___fladd@grs,w
 12542  08E2  00D9               	movwf	??___fladd
 12543  08E3  0859               	movf	??___fladd,w
 12544  08E4  00D5               	movwf	___fladd@a
 12545  08E5  0852               	movf	___fladd@b+1,w
 12546  08E6  00D9               	movwf	??___fladd
 12547  08E7  0859               	movf	??___fladd,w
 12548  08E8  00E4               	movwf	___fladd@grs
 12549  08E9  0856               	movf	___fladd@a+1,w
 12550  08EA  00D9               	movwf	??___fladd
 12551  08EB  0859               	movf	??___fladd,w
 12552  08EC  00D2               	movwf	___fladd@b+1
 12553  08ED  0864               	movf	___fladd@grs,w
 12554  08EE  00D9               	movwf	??___fladd
 12555  08EF  0859               	movf	??___fladd,w
 12556  08F0  00D6               	movwf	___fladd@a+1
 12557  08F1  0853               	movf	___fladd@b+2,w
 12558  08F2  00D9               	movwf	??___fladd
 12559  08F3  0859               	movf	??___fladd,w
 12560  08F4  00E4               	movwf	___fladd@grs
 12561  08F5  0857               	movf	___fladd@a+2,w
 12562  08F6  00D9               	movwf	??___fladd
 12563  08F7  0859               	movf	??___fladd,w
 12564  08F8  00D3               	movwf	___fladd@b+2
 12565  08F9  0864               	movf	___fladd@grs,w
 12566  08FA  00D9               	movwf	??___fladd
 12567  08FB  0859               	movf	??___fladd,w
 12568  08FC  00D7               	movwf	___fladd@a+2
 12569  08FD  0854               	movf	___fladd@b+3,w
 12570  08FE  00D9               	movwf	??___fladd
 12571  08FF  0859               	movf	??___fladd,w
 12572  0900  00E4               	movwf	___fladd@grs
 12573  0901  0858               	movf	___fladd@a+3,w
 12574  0902  00D9               	movwf	??___fladd
 12575  0903  0859               	movf	??___fladd,w
 12576  0904  00D4               	movwf	___fladd@b+3
 12577  0905  0864               	movf	___fladd@grs,w
 12578  0906  00D9               	movwf	??___fladd
 12579  0907  0859               	movf	??___fladd,w
 12580  0908  00D8               	movwf	___fladd@a+3
 12581  0909                     l3342:	
 12582  0909  01E4               	clrf	___fladd@grs
 12583  090A  0862               	movf	___fladd@aexp,w
 12584  090B  00D9               	movwf	??___fladd
 12585  090C  01DA               	clrf	??___fladd+1
 12586  090D  085A               	movf	??___fladd+1,w
 12587  090E  00DC               	movwf	??___fladd+3
 12588  090F  0863               	movf	___fladd@bexp,w
 12589  0910  0259               	subwf	??___fladd,w
 12590  0911  00DB               	movwf	??___fladd+2
 12591  0912  1C03               	skipc
 12592  0913  03DC               	decf	??___fladd+3,f
 12593  0914  085C               	movf	??___fladd+3,w
 12594  0915  3A80               	xorlw	128
 12595  0916  00DD               	movwf	??___fladd+4
 12596  0917  3080               	movlw	128
 12597  0918  025D               	subwf	??___fladd+4,w
 12598  0919  1D03               	skipz
 12599  091A  291D               	goto	u3685
 12600  091B  301A               	movlw	26
 12601  091C  025B               	subwf	??___fladd+2,w
 12602  091D                     u3685:	
 12603  091D  1C03               	skipc
 12604  091E  2951               	goto	l3360
 12605  091F  0020               	movlb	0	; select bank0
 12606  0920  0854               	movf	___fladd@b+3,w
 12607  0921  0453               	iorwf	___fladd@b+2,w
 12608  0922  0452               	iorwf	___fladd@b+1,w
 12609  0923  0451               	iorwf	___fladd@b,w
 12610  0924  1903               	btfsc	3,2
 12611  0925  2928               	goto	u3690
 12612  0926  3001               	movlw	1
 12613  0927  2929               	goto	u3700
 12614  0928                     u3690:	
 12615  0928  3000               	movlw	0
 12616  0929                     u3700:	
 12617  0929  00D9               	movwf	??___fladd
 12618  092A  0859               	movf	??___fladd,w
 12619  092B  00E4               	movwf	___fladd@grs
 12620  092C  3000               	movlw	0
 12621  092D  00D4               	movwf	___fladd@b+3
 12622  092E  3000               	movlw	0
 12623  092F  00D3               	movwf	___fladd@b+2
 12624  0930  3000               	movlw	0
 12625  0931  00D2               	movwf	___fladd@b+1
 12626  0932  3000               	movlw	0
 12627  0933  00D1               	movwf	___fladd@b
 12628  0934  0862               	movf	___fladd@aexp,w
 12629  0935  00D9               	movwf	??___fladd
 12630  0936  0859               	movf	??___fladd,w
 12631  0937  00E3               	movwf	___fladd@bexp
 12632  0938  2956               	goto	l1078
 12633  0939                     l1080:	
 12634  0939  1C64               	btfss	___fladd@grs,0
 12635  093A  2941               	goto	l3350
 12636  093B  3664               	lsrf	___fladd@grs,w
 12637  093C  3801               	iorlw	1
 12638  093D  00D9               	movwf	??___fladd
 12639  093E  0859               	movf	??___fladd,w
 12640  093F  00E4               	movwf	___fladd@grs
 12641  0940  2943               	goto	l3352
 12642  0941                     l3350:	
 12643  0941  1003               	clrc
 12644  0942  0CE4               	rrf	___fladd@grs,f
 12645  0943                     l3352:	
 12646  0943  1851               	btfsc	___fladd@b,0
 12647  0944  17E4               	bsf	___fladd@grs,7
 12648  0945  3001               	movlw	1
 12649  0946  00D9               	movwf	??___fladd
 12650  0947                     u3735:	
 12651  0947  37D4               	asrf	___fladd@b+3,f
 12652  0948  0CD3               	rrf	___fladd@b+2,f
 12653  0949  0CD2               	rrf	___fladd@b+1,f
 12654  094A  0CD1               	rrf	___fladd@b,f
 12655  094B  0BD9               	decfsz	??___fladd& (0+127),f
 12656  094C  2947               	goto	u3735
 12657  094D  3001               	movlw	1
 12658  094E  00D9               	movwf	??___fladd
 12659  094F  0859               	movf	??___fladd,w
 12660  0950  07E3               	addwf	___fladd@bexp,f
 12661  0951                     l3360:	
 12662  0951  0020               	movlb	0	; select bank0
 12663  0952  0862               	movf	___fladd@aexp,w
 12664  0953  0263               	subwf	___fladd@bexp,w
 12665  0954  1C03               	skipc
 12666  0955  2939               	goto	l1080
 12667  0956                     l1078:	
 12668  0956  1B61               	btfsc	___fladd@signs,6
 12669  0957  2987               	goto	l3386
 12670  0958  0863               	movf	___fladd@bexp,w
 12671  0959  1D03               	btfss	3,2
 12672  095A  2964               	goto	l3368
 12673  095B  3000               	movlw	0
 12674  095C  00D4               	movwf	?___fladd+3
 12675  095D  3000               	movlw	0
 12676  095E  00D3               	movwf	?___fladd+2
 12677  095F  3000               	movlw	0
 12678  0960  00D2               	movwf	?___fladd+1
 12679  0961  3000               	movlw	0
 12680  0962  00D1               	movwf	?___fladd
 12681  0963  0008               	return
 12682  0964                     l3368:	
 12683  0964  0855               	movf	___fladd@a,w
 12684  0965  07D1               	addwf	___fladd@b,f
 12685  0966  0856               	movf	___fladd@a+1,w
 12686  0967  3DD2               	addwfc	___fladd@b+1,f
 12687  0968  0857               	movf	___fladd@a+2,w
 12688  0969  3DD3               	addwfc	___fladd@b+2,f
 12689  096A  0858               	movf	___fladd@a+3,w
 12690  096B  3DD4               	addwfc	___fladd@b+3,f
 12691  096C  1C54               	btfss	___fladd@b+3,0
 12692  096D  2A01               	goto	l3420
 12693  096E  1C64               	btfss	___fladd@grs,0
 12694  096F  2976               	goto	l3376
 12695  0970  3664               	lsrf	___fladd@grs,w
 12696  0971  3801               	iorlw	1
 12697  0972  00D9               	movwf	??___fladd
 12698  0973  0859               	movf	??___fladd,w
 12699  0974  00E4               	movwf	___fladd@grs
 12700  0975  2978               	goto	l3378
 12701  0976                     l3376:	
 12702  0976  1003               	clrc
 12703  0977  0CE4               	rrf	___fladd@grs,f
 12704  0978                     l3378:	
 12705  0978  1851               	btfsc	___fladd@b,0
 12706  0979  17E4               	bsf	___fladd@grs,7
 12707  097A  3001               	movlw	1
 12708  097B  00D9               	movwf	??___fladd
 12709  097C                     u3805:	
 12710  097C  37D4               	asrf	___fladd@b+3,f
 12711  097D  0CD3               	rrf	___fladd@b+2,f
 12712  097E  0CD2               	rrf	___fladd@b+1,f
 12713  097F  0CD1               	rrf	___fladd@b,f
 12714  0980  0BD9               	decfsz	??___fladd& (0+127),f
 12715  0981  297C               	goto	u3805
 12716  0982  3001               	movlw	1
 12717  0983  00D9               	movwf	??___fladd
 12718  0984  0859               	movf	??___fladd,w
 12719  0985  07E3               	addwf	___fladd@bexp,f
 12720  0986  2A01               	goto	l3420
 12721  0987                     l3386:	
 12722  0987  0854               	movf	___fladd@b+3,w
 12723  0988  3A80               	xorlw	128
 12724  0989  00D9               	movwf	??___fladd
 12725  098A  0858               	movf	___fladd@a+3,w
 12726  098B  3A80               	xorlw	128
 12727  098C  0259               	subwf	??___fladd,w
 12728  098D  1D03               	skipz
 12729  098E  2999               	goto	u3813
 12730  098F  0857               	movf	___fladd@a+2,w
 12731  0990  0253               	subwf	___fladd@b+2,w
 12732  0991  1D03               	skipz
 12733  0992  2999               	goto	u3813
 12734  0993  0856               	movf	___fladd@a+1,w
 12735  0994  0252               	subwf	___fladd@b+1,w
 12736  0995  1D03               	skipz
 12737  0996  2999               	goto	u3813
 12738  0997  0855               	movf	___fladd@a,w
 12739  0998  0251               	subwf	___fladd@b,w
 12740  0999                     u3813:	
 12741  0999  1803               	skipnc
 12742  099A  29D1               	goto	l3396
 12743  099B  30FF               	movlw	255
 12744  099C  00D9               	movwf	??___fladd
 12745  099D  30FF               	movlw	255
 12746  099E  00DA               	movwf	??___fladd+1
 12747  099F  30FF               	movlw	255
 12748  09A0  00DB               	movwf	??___fladd+2
 12749  09A1  30FF               	movlw	255
 12750  09A2  00DC               	movwf	??___fladd+3
 12751  09A3  0851               	movf	___fladd@b,w
 12752  09A4  0255               	subwf	___fladd@a,w
 12753  09A5  00DD               	movwf	??___fladd+4
 12754  09A6  0852               	movf	___fladd@b+1,w
 12755  09A7  3B56               	subwfb	___fladd@a+1,w
 12756  09A8  00DE               	movwf	??___fladd+5
 12757  09A9  0853               	movf	___fladd@b+2,w
 12758  09AA  3B57               	subwfb	___fladd@a+2,w
 12759  09AB  00DF               	movwf	??___fladd+6
 12760  09AC  0854               	movf	___fladd@b+3,w
 12761  09AD  3B58               	subwfb	___fladd@a+3,w
 12762  09AE  00E0               	movwf	??___fladd+7
 12763  09AF  085D               	movf	??___fladd+4,w
 12764  09B0  07D9               	addwf	??___fladd,f
 12765  09B1  085E               	movf	??___fladd+5,w
 12766  09B2  3DDA               	addwfc	??___fladd+1,f
 12767  09B3  085F               	movf	??___fladd+6,w
 12768  09B4  3DDB               	addwfc	??___fladd+2,f
 12769  09B5  0860               	movf	??___fladd+7,w
 12770  09B6  3DDC               	addwfc	??___fladd+3,f
 12771  09B7  085C               	movf	??___fladd+3,w
 12772  09B8  00D4               	movwf	___fladd@b+3
 12773  09B9  085B               	movf	??___fladd+2,w
 12774  09BA  00D3               	movwf	___fladd@b+2
 12775  09BB  085A               	movf	??___fladd+1,w
 12776  09BC  00D2               	movwf	___fladd@b+1
 12777  09BD  0859               	movf	??___fladd,w
 12778  09BE  00D1               	movwf	___fladd@b
 12779  09BF  3080               	movlw	128
 12780  09C0  00D9               	movwf	??___fladd
 12781  09C1  0859               	movf	??___fladd,w
 12782  09C2  06E1               	xorwf	___fladd@signs,f
 12783  09C3  09E4               	comf	___fladd@grs,f
 12784  09C4  0AE4               	incf	___fladd@grs,f
 12785  09C5  0864               	movf	___fladd@grs,w
 12786  09C6  1D03               	btfss	3,2
 12787  09C7  29D9               	goto	l1095
 12788  09C8  3001               	movlw	1
 12789  09C9  07D1               	addwf	___fladd@b,f
 12790  09CA  3000               	movlw	0
 12791  09CB  3DD2               	addwfc	___fladd@b+1,f
 12792  09CC  3000               	movlw	0
 12793  09CD  3DD3               	addwfc	___fladd@b+2,f
 12794  09CE  3000               	movlw	0
 12795  09CF  3DD4               	addwfc	___fladd@b+3,f
 12796  09D0  29D9               	goto	l1095
 12797  09D1                     l3396:	
 12798  09D1  0855               	movf	___fladd@a,w
 12799  09D2  02D1               	subwf	___fladd@b,f
 12800  09D3  0856               	movf	___fladd@a+1,w
 12801  09D4  3BD2               	subwfb	___fladd@b+1,f
 12802  09D5  0857               	movf	___fladd@a+2,w
 12803  09D6  3BD3               	subwfb	___fladd@b+2,f
 12804  09D7  0858               	movf	___fladd@a+3,w
 12805  09D8  3BD4               	subwfb	___fladd@b+3,f
 12806  09D9                     l1095:	
 12807  09D9  0854               	movf	___fladd@b+3,w
 12808  09DA  0453               	iorwf	___fladd@b+2,w
 12809  09DB  0452               	iorwf	___fladd@b+1,w
 12810  09DC  0451               	iorwf	___fladd@b,w
 12811  09DD  1D03               	skipz
 12812  09DE  29FF               	goto	l3418
 12813  09DF  0864               	movf	___fladd@grs,w
 12814  09E0  1D03               	btfss	3,2
 12815  09E1  29FF               	goto	l3418
 12816  09E2  3000               	movlw	0
 12817  09E3  00D4               	movwf	?___fladd+3
 12818  09E4  3000               	movlw	0
 12819  09E5  00D3               	movwf	?___fladd+2
 12820  09E6  3000               	movlw	0
 12821  09E7  00D2               	movwf	?___fladd+1
 12822  09E8  3000               	movlw	0
 12823  09E9  00D1               	movwf	?___fladd
 12824  09EA  0008               	return
 12825  09EB                     l3404:	
 12826  09EB  3001               	movlw	1
 12827  09EC                     u3855:	
 12828  09EC  35D1               	lslf	___fladd@b,f
 12829  09ED  0DD2               	rlf	___fladd@b+1,f
 12830  09EE  0DD3               	rlf	___fladd@b+2,f
 12831  09EF  0DD4               	rlf	___fladd@b+3,f
 12832  09F0  0B89               	decfsz	9,f
 12833  09F1  29EC               	goto	u3855
 12834  09F2  1BE4               	btfsc	___fladd@grs,7
 12835  09F3  1451               	bsf	___fladd@b,0
 12836  09F4  1C64               	btfss	___fladd@grs,0
 12837  09F5  29F8               	goto	l3412
 12838  09F6  1403               	setc
 12839  09F7  29F9               	goto	L10
 12840  09F8                     l3412:	
 12841  09F8  1003               	clrc
 12842  09F9                     L10:	
 12843  09F9  0DE4               	rlf	___fladd@grs,f
 12844  09FA  0863               	movf	___fladd@bexp,w
 12845  09FB  1903               	btfsc	3,2
 12846  09FC  29FF               	goto	l3418
 12847  09FD  3001               	movlw	1
 12848  09FE  02E3               	subwf	___fladd@bexp,f
 12849  09FF                     l3418:	
 12850  09FF  1FD3               	btfss	___fladd@b+2,7
 12851  0A00  29EB               	goto	l3404
 12852  0A01                     l3420:	
 12853  0A01  01E2               	clrf	___fladd@aexp
 12854  0A02  1FE4               	btfss	___fladd@grs,7
 12855  0A03  2A0C               	goto	l3430
 12856  0A04  0864               	movf	___fladd@grs,w
 12857  0A05  397F               	andlw	127
 12858  0A06  1903               	btfsc	3,2
 12859  0A07  1851               	btfsc	___fladd@b,0
 12860  0A08  2A0A               	goto	l3426
 12861  0A09  2A0C               	goto	l3430
 12862  0A0A                     l3426:	
 12863  0A0A  01E2               	clrf	___fladd@aexp
 12864  0A0B  0AE2               	incf	___fladd@aexp,f
 12865  0A0C                     l3430:	
 12866  0A0C  0862               	movf	___fladd@aexp,w
 12867  0A0D  1903               	btfsc	3,2
 12868  0A0E  2A38               	goto	l1108
 12869  0A0F  3001               	movlw	1
 12870  0A10  07D1               	addwf	___fladd@b,f
 12871  0A11  3000               	movlw	0
 12872  0A12  3DD2               	addwfc	___fladd@b+1,f
 12873  0A13  3000               	movlw	0
 12874  0A14  3DD3               	addwfc	___fladd@b+2,f
 12875  0A15  3000               	movlw	0
 12876  0A16  3DD4               	addwfc	___fladd@b+3,f
 12877  0A17  1C54               	btfss	___fladd@b+3,0
 12878  0A18  2A38               	goto	l1108
 12879  0A19  0851               	movf	___fladd@b,w
 12880  0A1A  00D9               	movwf	??___fladd
 12881  0A1B  0852               	movf	___fladd@b+1,w
 12882  0A1C  00DA               	movwf	??___fladd+1
 12883  0A1D  0853               	movf	___fladd@b+2,w
 12884  0A1E  00DB               	movwf	??___fladd+2
 12885  0A1F  0854               	movf	___fladd@b+3,w
 12886  0A20  00DC               	movwf	??___fladd+3
 12887  0A21  3001               	movlw	1
 12888  0A22  00DD               	movwf	??___fladd+4
 12889  0A23                     u3955:	
 12890  0A23  37DC               	asrf	??___fladd+3,f
 12891  0A24  0CDB               	rrf	??___fladd+2,f
 12892  0A25  0CDA               	rrf	??___fladd+1,f
 12893  0A26  0CD9               	rrf	??___fladd,f
 12894  0A27  0BDD               	decfsz	??___fladd+4,f
 12895  0A28  2A23               	goto	u3955
 12896  0A29  085C               	movf	??___fladd+3,w
 12897  0A2A  00D4               	movwf	___fladd@b+3
 12898  0A2B  085B               	movf	??___fladd+2,w
 12899  0A2C  00D3               	movwf	___fladd@b+2
 12900  0A2D  085A               	movf	??___fladd+1,w
 12901  0A2E  00D2               	movwf	___fladd@b+1
 12902  0A2F  0859               	movf	??___fladd,w
 12903  0A30  00D1               	movwf	___fladd@b
 12904  0A31  0A63               	incf	___fladd@bexp,w
 12905  0A32  1903               	btfsc	3,2
 12906  0A33  2A38               	goto	l1108
 12907  0A34  3001               	movlw	1
 12908  0A35  00D9               	movwf	??___fladd
 12909  0A36  0859               	movf	??___fladd,w
 12910  0A37  07E3               	addwf	___fladd@bexp,f
 12911  0A38                     l1108:	
 12912  0A38  0A63               	incf	___fladd@bexp,w
 12913  0A39  1D03               	btfss	3,2
 12914  0A3A  0863               	movf	___fladd@bexp,w
 12915  0A3B  1D03               	btfss	3,2
 12916  0A3C  2A48               	goto	l3448
 12917  0A3D  3000               	movlw	0
 12918  0A3E  00D4               	movwf	___fladd@b+3
 12919  0A3F  3000               	movlw	0
 12920  0A40  00D3               	movwf	___fladd@b+2
 12921  0A41  3000               	movlw	0
 12922  0A42  00D2               	movwf	___fladd@b+1
 12923  0A43  3000               	movlw	0
 12924  0A44  00D1               	movwf	___fladd@b
 12925  0A45  0863               	movf	___fladd@bexp,w
 12926  0A46  1903               	btfsc	3,2
 12927  0A47  01E1               	clrf	___fladd@signs
 12928  0A48                     l3448:	
 12929  0A48  1C63               	btfss	___fladd@bexp,0
 12930  0A49  2A4C               	goto	l3452
 12931  0A4A  17D3               	bsf	___fladd@b+2,7
 12932  0A4B  2A50               	goto	l1116
 12933  0A4C                     l3452:	
 12934  0A4C  307F               	movlw	127
 12935  0A4D  00D9               	movwf	??___fladd
 12936  0A4E  0859               	movf	??___fladd,w
 12937  0A4F  05D3               	andwf	___fladd@b+2,f
 12938  0A50                     l1116:	
 12939  0A50  3663               	lsrf	___fladd@bexp,w
 12940  0A51  00D9               	movwf	??___fladd
 12941  0A52  0859               	movf	??___fladd,w
 12942  0A53  00D4               	movwf	___fladd@b+3
 12943  0A54  1FE1               	btfss	___fladd@signs,7
 12944  0A55  0008               	return
 12945  0A56  17D4               	bsf	___fladd@b+3,7
 12946  0A57  0008               	return
 12947  0A58                     __end_of___fladd:	
 12948                           
 12949                           	psect	text43
 12950  116A                     __ptext43:	
 12951 ;; *************** function _HX711_read *****************
 12952 ;; Defined at:
 12953 ;;		line 96 in file "hx711.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  i               2    4[BANK0 ] unsigned int 
 12958 ;;  value           4    6[BANK0 ] struct charto32bits
 12959 ;;  value_32aux     4    0[BANK0 ] long 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  4    1[COMMON] long 
 12962 ;; Registers used:
 12963 ;;		wreg, status,2, status,0, pclath, cstack
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;Total ram usage:       16 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    1
 12976 ;; This function calls:
 12977 ;;		_spi_exchangeByte
 12978 ;; This function is called by:
 12979 ;;		_HX711_read_average
 12980 ;;		_HX711_set_gain
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           
 12985                           ;psect for function _HX711_read
 12986  116A                     _HX711_read:	
 12987  116A                     l416:	
 12988                           ;hx711.c: 98: int32_t value_32aux;;hx711.c: 100: union charto32bits;hx711.c: 101: {;hx71
      +                          1.c: 102: uint32_t value_32;;hx711.c: 103: uint8_t value_8[3];;hx711.c: 104: } value;;hx
      +                          711.c: 107: while(PORTBbits.RB4);
 12989                           
 12990                           ;incstack = 0
 12991                           ; Regs used in _HX711_read: [wreg+status,2+status,0+pclath+cstack]
 12992                           
 12993  116A  0020               	movlb	0	; select bank0
 12994  116B  1A0D               	btfsc	13,4	;volatile
 12995  116C  296A               	goto	l416
 12996                           
 12997                           ;hx711.c: 109: _delay((unsigned long)((1)*(16000000/4000000.0)));
 12998  116D  3200               	nop2	;2 cycle nop
 12999  116E  3200               	nop2	;2 cycle nop
 13000                           
 13001                           ;hx711.c: 112: value.value_8[2] = spi_exchangeByte(0);
 13002  116F  01F0               	clrf	spi_exchangeByte@b
 13003  1170  319D  25AE  3191   	fcall	_spi_exchangeByte
 13004  1173  00F5               	movwf	??_HX711_read
 13005  1174  0875               	movf	??_HX711_read,w
 13006  1175  0020               	movlb	0	; select bank0
 13007  1176  00A8               	movwf	HX711_read@value+2
 13008                           
 13009                           ;hx711.c: 113: value.value_8[1] = spi_exchangeByte(0);
 13010  1177  01F0               	clrf	spi_exchangeByte@b
 13011  1178  319D  25AE  3191   	fcall	_spi_exchangeByte
 13012  117B  00F5               	movwf	??_HX711_read
 13013  117C  0875               	movf	??_HX711_read,w
 13014  117D  0020               	movlb	0	; select bank0
 13015  117E  00A7               	movwf	HX711_read@value+1
 13016                           
 13017                           ;hx711.c: 114: value.value_8[0] = spi_exchangeByte(0);
 13018  117F  01F0               	clrf	spi_exchangeByte@b
 13019  1180  319D  25AE  3191   	fcall	_spi_exchangeByte
 13020  1183  00F5               	movwf	??_HX711_read
 13021  1184  0875               	movf	??_HX711_read,w
 13022  1185  0020               	movlb	0	; select bank0
 13023  1186  00A6               	movwf	HX711_read@value
 13024                           
 13025                           ;hx711.c: 117: for(uint16_t i = 0; i < GAIN; i++)
 13026  1187  01A4               	clrf	HX711_read@i
 13027  1188  01A5               	clrf	HX711_read@i+1
 13028  1189                     l419:	
 13029  1189  0021               	movlb	1	; select bank1
 13030  118A  086B               	movf	_GAIN^(0+128),w
 13031  118B  00F5               	movwf	??_HX711_read
 13032  118C  01F6               	clrf	??_HX711_read+1
 13033  118D  0876               	movf	??_HX711_read+1,w
 13034  118E  0020               	movlb	0	; select bank0
 13035  118F  0225               	subwf	HX711_read@i+1,w
 13036  1190  1D03               	skipz
 13037  1191  2994               	goto	u3255
 13038  1192  0875               	movf	??_HX711_read,w
 13039  1193  0224               	subwf	HX711_read@i,w
 13040  1194                     u3255:	
 13041  1194  1803               	btfsc	3,0
 13042  1195  29A4               	goto	l421
 13043                           
 13044                           ;hx711.c: 118: {;hx711.c: 119: LATBbits.LATB6 = 1;
 13045  1196  0022               	movlb	2	; select bank2
 13046  1197  170D               	bsf	13,6	;volatile
 13047                           
 13048                           ;hx711.c: 120: _delay((unsigned long)((1)*(16000000/4000000.0)));
 13049  1198  3200               	nop2	;2 cycle nop
 13050  1199  3200               	nop2	;2 cycle nop
 13051                           
 13052                           ;hx711.c: 121: LATBbits.LATB6 = 0;
 13053  119A  0022               	movlb	2	; select bank2
 13054  119B  130D               	bcf	13,6	;volatile
 13055                           
 13056                           ;hx711.c: 122: _delay((unsigned long)((1)*(16000000/4000000.0)));
 13057  119C  3200               	nop2	;2 cycle nop
 13058  119D  3200               	nop2	;2 cycle nop
 13059  119E  3001               	movlw	1
 13060  119F  0020               	movlb	0	; select bank0
 13061  11A0  07A4               	addwf	HX711_read@i,f
 13062  11A1  3000               	movlw	0
 13063  11A2  3DA5               	addwfc	HX711_read@i+1,f
 13064  11A3  2989               	goto	l419
 13065  11A4                     l421:	
 13066                           
 13067                           ;hx711.c: 123: };hx711.c: 126: if(value.value_8[2] & 0x80)
 13068  11A4  1FA8               	btfss	HX711_read@value+2,7
 13069  11A5  29B6               	goto	l3130
 13070                           
 13071                           ;hx711.c: 127: {;hx711.c: 128: value_32aux = value.value_32 * (-1);
 13072  11A6  0926               	comf	HX711_read@value,w
 13073  11A7  00A0               	movwf	HX711_read@value_32aux
 13074  11A8  0927               	comf	HX711_read@value+1,w
 13075  11A9  00A1               	movwf	HX711_read@value_32aux+1
 13076  11AA  0928               	comf	HX711_read@value+2,w
 13077  11AB  00A2               	movwf	HX711_read@value_32aux+2
 13078  11AC  0929               	comf	HX711_read@value+3,w
 13079  11AD  00A3               	movwf	HX711_read@value_32aux+3
 13080  11AE  0AA0               	incf	HX711_read@value_32aux,f
 13081  11AF  1903               	skipnz
 13082  11B0  0AA1               	incf	HX711_read@value_32aux+1,f
 13083  11B1  1903               	skipnz
 13084  11B2  0AA2               	incf	HX711_read@value_32aux+2,f
 13085  11B3  1903               	skipnz
 13086  11B4  0AA3               	incf	HX711_read@value_32aux+3,f
 13087                           
 13088                           ;hx711.c: 129: }
 13089  11B5  29BE               	goto	l423
 13090  11B6                     l3130:	
 13091                           
 13092                           ;hx711.c: 130: else;hx711.c: 131: {;hx711.c: 132: value_32aux = value.value_32;
 13093  11B6  0829               	movf	HX711_read@value+3,w
 13094  11B7  00A3               	movwf	HX711_read@value_32aux+3
 13095  11B8  0828               	movf	HX711_read@value+2,w
 13096  11B9  00A2               	movwf	HX711_read@value_32aux+2
 13097  11BA  0827               	movf	HX711_read@value+1,w
 13098  11BB  00A1               	movwf	HX711_read@value_32aux+1
 13099  11BC  0826               	movf	HX711_read@value,w
 13100  11BD  00A0               	movwf	HX711_read@value_32aux
 13101  11BE                     l423:	
 13102                           
 13103                           ;hx711.c: 133: };hx711.c: 135: return value_32aux;
 13104  11BE  0823               	movf	HX711_read@value_32aux+3,w
 13105  11BF  00F4               	movwf	?_HX711_read+3
 13106  11C0  0822               	movf	HX711_read@value_32aux+2,w
 13107  11C1  00F3               	movwf	?_HX711_read+2
 13108  11C2  0821               	movf	HX711_read@value_32aux+1,w
 13109  11C3  00F2               	movwf	?_HX711_read+1
 13110  11C4  0820               	movf	HX711_read@value_32aux,w
 13111  11C5  00F1               	movwf	?_HX711_read
 13112  11C6  0008               	return
 13113  11C7                     __end_of_HX711_read:	
 13114                           
 13115                           	psect	text44
 13116  1DAE                     __ptext44:	
 13117 ;; *************** function _spi_exchangeByte *****************
 13118 ;; Defined at:
 13119 ;;		line 68 in file "mcc_generated_files/spi_driver.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;  b               1    0[COMMON] unsigned char 
 13122 ;; Auto vars:     Size  Location     Type
 13123 ;;		None
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      unsigned char 
 13126 ;; Registers used:
 13127 ;;		wreg
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13137 ;;Total ram usage:        1 bytes
 13138 ;; Hardware stack levels used:    1
 13139 ;; This function calls:
 13140 ;;		Nothing
 13141 ;; This function is called by:
 13142 ;;		_HX711_read
 13143 ;;		_spi_exchangeBlock
 13144 ;;		_spi_writeBlock
 13145 ;;		_spi_readBlock
 13146 ;;		_HX711_read_new
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           
 13151                           ;psect for function _spi_exchangeByte
 13152  1DAE                     _spi_exchangeByte:	
 13153                           
 13154                           ;spi_driver.c: 70: SSP1BUF = b;
 13155                           
 13156                           ;incstack = 0
 13157                           ; Regs used in _spi_exchangeByte: [wreg]
 13158  1DAE  0870               	movf	spi_exchangeByte@b,w
 13159  1DAF  0024               	movlb	4	; select bank4
 13160  1DB0  0091               	movwf	17	;volatile
 13161  1DB1                     l178:	
 13162                           ;spi_driver.c: 71: while(!PIR1bits.SSP1IF);
 13163                           
 13164  1DB1  0020               	movlb	0	; select bank0
 13165  1DB2  1D90               	btfss	16,3	;volatile
 13166  1DB3  2DB1               	goto	l178
 13167                           
 13168                           ;spi_driver.c: 72: PIR1bits.SSP1IF = 0;
 13169  1DB4  1190               	bcf	16,3	;volatile
 13170                           
 13171                           ;spi_driver.c: 73: return SSP1BUF;
 13172  1DB5  0024               	movlb	4	; select bank4
 13173  1DB6  0811               	movf	17,w	;volatile
 13174  1DB7  0008               	return
 13175  1DB8                     __end_of_spi_exchangeByte:	
 13176  007E                     btemp	set	126	;btemp
 13177  007E                     wtemp0	set	126
 13178                           
 13179                           	psect	text4_split_1
 13180  0C84                     l4390:	
 13181  0C84  0021               	movlb	1	; select bank1
 13182  0C85  0A50               	incf	__doprnt@pb^(0+128),w
 13183  0C86  0086               	movwf	6
 13184  0C87  0187               	clrf	7
 13185  0C88  0016               	moviw fsr1++
 13186  0C89  0401               	iorwf	1,w
 13187  0C8A  1903               	btfsc	3,2
 13188  0C8B  2C99               	goto	l4394
 13189  0C8C  3030               	movlw	48
 13190  0C8D  00AE               	movwf	??__doprnt^(0+128)
 13191  0C8E  082E               	movf	??__doprnt^(0+128),w
 13192  0C8F  00F1               	movwf	putch@txData
 13193  0C90  0A50               	incf	__doprnt@pb^(0+128),w
 13194  0C91  0086               	movwf	6
 13195  0C92  0187               	clrf	7
 13196  0C93  3F41               	moviw [1]fsr1
 13197  0C94  008A               	movwf	10
 13198  0C95  3F40               	moviw [0]fsr1
 13199  0C96  000A               	callw
 13200  0C97  318C               	pagesel	$
 13201  0C98  2CAB               	goto	l4398
 13202  0C99                     l4394:	
 13203  0C99  3030               	movlw	48
 13204  0C9A  00AE               	movwf	??__doprnt^(0+128)
 13205  0C9B  0850               	movf	__doprnt@pb^(0+128),w
 13206  0C9C  0086               	movwf	6
 13207  0C9D  0187               	clrf	7
 13208  0C9E  0801               	movf	1,w
 13209  0C9F  0086               	movwf	6
 13210  0CA0  3001               	movlw	1	; select bank2/3
 13211  0CA1  0087               	movwf	7
 13212  0CA2  082E               	movf	??__doprnt^(0+128),w
 13213  0CA3  0081               	movwf	1
 13214  0CA4  3001               	movlw	1
 13215  0CA5  00AE               	movwf	??__doprnt^(0+128)
 13216  0CA6  0850               	movf	__doprnt@pb^(0+128),w
 13217  0CA7  0086               	movwf	6
 13218  0CA8  0187               	clrf	7
 13219  0CA9  082E               	movf	??__doprnt^(0+128),w
 13220  0CAA  0781               	addwf	1,f
 13221  0CAB                     l4398:	
 13222                           
 13223                           ;doprnt.c: 1228: eexp--;
 13224  0CAB  30FF               	movlw	255
 13225  0CAC  0021               	movlb	1	; select bank1
 13226  0CAD  07C3               	addwf	__doprnt@eexp^(0+128),f
 13227  0CAE  30FF               	movlw	255
 13228  0CAF  3DC4               	addwfc	(__doprnt@eexp+1)^(0+128),f
 13229  0CB0                     l4400:	
 13230  0CB0  0844               	movf	(__doprnt@eexp+1)^(0+128),w
 13231  0CB1  3A80               	xorlw	128
 13232  0CB2  00AE               	movwf	??__doprnt^(0+128)
 13233  0CB3  3080               	movlw	128
 13234  0CB4  022E               	subwf	??__doprnt^(0+128),w
 13235  0CB5  1D03               	skipz
 13236  0CB6  2CB9               	goto	u5815
 13237  0CB7  3001               	movlw	1
 13238  0CB8  0243               	subwf	__doprnt@eexp^(0+128),w
 13239  0CB9                     u5815:	
 13240  0CB9  1803               	skipnc
 13241  0CBA  2C84               	goto	l4390
 13242                           
 13243                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 13244  0CBB  0021               	movlb	1	; select bank1
 13245  0CBC  083C               	movf	(__doprnt@prec+1)^(0+128),w
 13246  0CBD  3A80               	xorlw	128
 13247  0CBE  00AE               	movwf	??__doprnt^(0+128)
 13248  0CBF  3080               	movlw	128
 13249  0CC0  022E               	subwf	??__doprnt^(0+128),w
 13250  0CC1  1D03               	skipz
 13251  0CC2  2CC5               	goto	u5825
 13252  0CC3  3009               	movlw	9
 13253  0CC4  023B               	subwf	__doprnt@prec^(0+128),w
 13254  0CC5                     u5825:	
 13255  0CC5  1C03               	skipc
 13256  0CC6  2CCA               	goto	l4406
 13257                           
 13258                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13259  0CC7  3008               	movlw	8
 13260  0CC8  0021               	movlb	1	; select bank1
 13261  0CC9  2CCC               	goto	L5
 13262  0CCA                     l4406:	
 13263                           
 13264                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 13265  0CCA  0021               	movlb	1	; select bank1
 13266  0CCB  083B               	movf	__doprnt@prec^(0+128),w
 13267  0CCC                     L5:	
 13268  0CCC  00AE               	movwf	??__doprnt^(0+128)
 13269  0CCD  082E               	movf	??__doprnt^(0+128),w
 13270  0CCE  00CF               	movwf	__doprnt@c^(0+128)
 13271                           
 13272                           ;doprnt.c: 1234: prec -= (int)c;
 13273  0CCF  084F               	movf	__doprnt@c^(0+128),w
 13274  0CD0  00AE               	movwf	??__doprnt^(0+128)
 13275  0CD1  01AF               	clrf	(??__doprnt^(0+128)+1)
 13276  0CD2  082E               	movf	??__doprnt^(0+128),w
 13277  0CD3  02BB               	subwf	__doprnt@prec^(0+128),f
 13278  0CD4  082F               	movf	(??__doprnt+1)^(0+128),w
 13279  0CD5  3BBC               	subwfb	(__doprnt@prec+1)^(0+128),f
 13280                           
 13281                           ;doprnt.c: 1238: if(c)
 13282  0CD6  084F               	movf	__doprnt@c^(0+128),w
 13283  0CD7  1903               	btfsc	3,2
 13284  0CD8  2CFF               	goto	l4418
 13285  0CD9  0A50               	incf	__doprnt@pb^(0+128),w
 13286  0CDA  0086               	movwf	6
 13287  0CDB  0187               	clrf	7
 13288  0CDC  0016               	moviw fsr1++
 13289  0CDD  0401               	iorwf	1,w
 13290  0CDE  1903               	btfsc	3,2
 13291  0CDF  2CED               	goto	l4414
 13292  0CE0  302E               	movlw	46
 13293  0CE1  00AE               	movwf	??__doprnt^(0+128)
 13294  0CE2  082E               	movf	??__doprnt^(0+128),w
 13295  0CE3  00F1               	movwf	putch@txData
 13296  0CE4  0A50               	incf	__doprnt@pb^(0+128),w
 13297  0CE5  0086               	movwf	6
 13298  0CE6  0187               	clrf	7
 13299  0CE7  3F41               	moviw [1]fsr1
 13300  0CE8  008A               	movwf	10
 13301  0CE9  3F40               	moviw [0]fsr1
 13302  0CEA  000A               	callw
 13303  0CEB  318C               	pagesel	$
 13304  0CEC  2CFF               	goto	l4418
 13305  0CED                     l4414:	
 13306  0CED  302E               	movlw	46
 13307  0CEE  00AE               	movwf	??__doprnt^(0+128)
 13308  0CEF  0850               	movf	__doprnt@pb^(0+128),w
 13309  0CF0  0086               	movwf	6
 13310  0CF1  0187               	clrf	7
 13311  0CF2  0801               	movf	1,w
 13312  0CF3  0086               	movwf	6
 13313  0CF4  3001               	movlw	1	; select bank2/3
 13314  0CF5  0087               	movwf	7
 13315  0CF6  082E               	movf	??__doprnt^(0+128),w
 13316  0CF7  0081               	movwf	1
 13317  0CF8  3001               	movlw	1
 13318  0CF9  00AE               	movwf	??__doprnt^(0+128)
 13319  0CFA  0850               	movf	__doprnt@pb^(0+128),w
 13320  0CFB  0086               	movwf	6
 13321  0CFC  0187               	clrf	7
 13322  0CFD  082E               	movf	??__doprnt^(0+128),w
 13323  0CFE  0781               	addwf	1,f
 13324  0CFF                     l4418:	
 13325                           
 13326                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 13327  0CFF  0021               	movlb	1	; select bank1
 13328  0D00  084F               	movf	__doprnt@c^(0+128),w
 13329  0D01  3180  204D  318C   	fcall	_scale
 13330  0D04  0020               	movlb	0	; select bank0
 13331  0D05  0841               	movf	?_scale+3,w
 13332  0D06  0021               	movlb	1	; select bank1
 13333  0D07  00B7               	movwf	(__doprnt$1425+3)^(0+128)
 13334  0D08  0020               	movlb	0	; select bank0
 13335  0D09  0840               	movf	?_scale+2,w
 13336  0D0A  0021               	movlb	1	; select bank1
 13337  0D0B  00B6               	movwf	(__doprnt$1425+2)^(0+128)
 13338  0D0C  0020               	movlb	0	; select bank0
 13339  0D0D  083F               	movf	?_scale+1,w
 13340  0D0E  0021               	movlb	1	; select bank1
 13341  0D0F  00B5               	movwf	(__doprnt$1425+1)^(0+128)
 13342  0D10  0020               	movlb	0	; select bank0
 13343  0D11  083E               	movf	?_scale,w
 13344  0D12  0021               	movlb	1	; select bank1
 13345  0D13  00B4               	movwf	__doprnt$1425^(0+128)
 13346                           
 13347                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 13348  0D14  0837               	movf	(__doprnt$1425+3)^(0+128),w
 13349  0D15  0020               	movlb	0	; select bank0
 13350  0D16  00AB               	movwf	___flmul@a+3
 13351  0D17  0021               	movlb	1	; select bank1
 13352  0D18  0836               	movf	(__doprnt$1425+2)^(0+128),w
 13353  0D19  0020               	movlb	0	; select bank0
 13354  0D1A  00AA               	movwf	___flmul@a+2
 13355  0D1B  0021               	movlb	1	; select bank1
 13356  0D1C  0835               	movf	(__doprnt$1425+1)^(0+128),w
 13357  0D1D  0020               	movlb	0	; select bank0
 13358  0D1E  00A9               	movwf	___flmul@a+1
 13359  0D1F  0021               	movlb	1	; select bank1
 13360  0D20  0834               	movf	__doprnt$1425^(0+128),w
 13361  0D21  0020               	movlb	0	; select bank0
 13362  0D22  00A8               	movwf	___flmul@a
 13363  0D23  0021               	movlb	1	; select bank1
 13364  0D24  084C               	movf	(__doprnt@fval+3)^(0+128),w
 13365  0D25  0020               	movlb	0	; select bank0
 13366  0D26  00A7               	movwf	___flmul@b+3
 13367  0D27  0021               	movlb	1	; select bank1
 13368  0D28  084B               	movf	(__doprnt@fval+2)^(0+128),w
 13369  0D29  0020               	movlb	0	; select bank0
 13370  0D2A  00A6               	movwf	___flmul@b+2
 13371  0D2B  0021               	movlb	1	; select bank1
 13372  0D2C  084A               	movf	(__doprnt@fval+1)^(0+128),w
 13373  0D2D  0020               	movlb	0	; select bank0
 13374  0D2E  00A5               	movwf	___flmul@b+1
 13375  0D2F  0021               	movlb	1	; select bank1
 13376  0D30  0849               	movf	__doprnt@fval^(0+128),w
 13377  0D31  0020               	movlb	0	; select bank0
 13378  0D32  00A4               	movwf	___flmul@b
 13379  0D33  318A  2258  318C   	fcall	___flmul
 13380  0D36  0020               	movlb	0	; select bank0
 13381  0D37  0827               	movf	?___flmul+3,w
 13382  0D38  00D6               	movwf	___fltol@f1+3
 13383  0D39  0826               	movf	?___flmul+2,w
 13384  0D3A  00D5               	movwf	___fltol@f1+2
 13385  0D3B  0825               	movf	?___flmul+1,w
 13386  0D3C  00D4               	movwf	___fltol@f1+1
 13387  0D3D  0824               	movf	?___flmul,w
 13388  0D3E  00D3               	movwf	___fltol@f1
 13389  0D3F  3191  21C7  318C   	fcall	___fltol
 13390  0D42  0020               	movlb	0	; select bank0
 13391  0D43  0856               	movf	?___fltol+3,w
 13392  0D44  0021               	movlb	1	; select bank1
 13393  0D45  00C2               	movwf	(__doprnt@val+3)^(0+128)
 13394  0D46  0020               	movlb	0	; select bank0
 13395  0D47  0855               	movf	?___fltol+2,w
 13396  0D48  0021               	movlb	1	; select bank1
 13397  0D49  00C1               	movwf	(__doprnt@val+2)^(0+128)
 13398  0D4A  0020               	movlb	0	; select bank0
 13399  0D4B  0854               	movf	?___fltol+1,w
 13400  0D4C  0021               	movlb	1	; select bank1
 13401  0D4D  00C0               	movwf	(__doprnt@val+1)^(0+128)
 13402  0D4E  0020               	movlb	0	; select bank0
 13403  0D4F  0853               	movf	?___fltol,w
 13404  0D50                     L6:	
 13405  0D50  0021               	movlb	1	; select bank1
 13406  0D51  00BF               	movwf	__doprnt@val^(0+128)
 13407  0D52  3001               	movlw	1
 13408  0D53  02CF               	subwf	__doprnt@c^(0+128),f
 13409  0D54  0A4F               	incf	__doprnt@c^(0+128),w
 13410  0D55  1903               	btfsc	3,2
 13411  0D56  2E38               	goto	l695
 13412                           
 13413                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 13414                           
 13415                           ;doprnt.c: 1247: while(c--) {
 13416  0D57  084F               	movf	__doprnt@c^(0+128),w
 13417  0D58  00AE               	movwf	??__doprnt^(0+128)
 13418  0D59  01AF               	clrf	(??__doprnt^(0+128)+1)
 13419  0D5A  35AE               	lslf	??__doprnt^(0+128),f
 13420  0D5B  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13421  0D5C  35AE               	lslf	??__doprnt^(0+128),f
 13422  0D5D  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13423  0D5E  3068               	movlw	low (_dpowers| (0+32768))
 13424  0D5F  072E               	addwf	??__doprnt^(0+128),w
 13425  0D60  0084               	movwf	4
 13426  0D61  3098               	movlw	high (_dpowers| (0+32768))
 13427  0D62  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
 13428  0D63  0085               	movwf	5
 13429  0D64  3F00               	moviw [0]fsr0
 13430  0D65  00F0               	movwf	___lldiv@divisor
 13431  0D66  3F01               	moviw [1]fsr0
 13432  0D67  00F1               	movwf	___lldiv@divisor+1
 13433  0D68  3F02               	moviw [2]fsr0
 13434  0D69  00F2               	movwf	___lldiv@divisor+2
 13435  0D6A  3F03               	moviw [3]fsr0
 13436  0D6B  00F3               	movwf	___lldiv@divisor+3
 13437  0D6C  0842               	movf	(__doprnt@val+3)^(0+128),w
 13438  0D6D  00F7               	movwf	___lldiv@dividend+3
 13439  0D6E  0841               	movf	(__doprnt@val+2)^(0+128),w
 13440  0D6F  00F6               	movwf	___lldiv@dividend+2
 13441  0D70  0840               	movf	(__doprnt@val+1)^(0+128),w
 13442  0D71  00F5               	movwf	___lldiv@dividend+1
 13443  0D72  083F               	movf	__doprnt@val^(0+128),w
 13444  0D73  00F4               	movwf	___lldiv@dividend
 13445  0D74  3190  206E  318C   	fcall	___lldiv
 13446  0D77  0873               	movf	?___lldiv+3,w
 13447  0D78  0021               	movlb	1	; select bank1
 13448  0D79  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
 13449  0D7A  0872               	movf	?___lldiv+2,w
 13450  0D7B  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
 13451  0D7C  0871               	movf	?___lldiv+1,w
 13452  0D7D  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
 13453  0D7E  0870               	movf	?___lldiv,w
 13454  0D7F  00C5               	movwf	__doprnt@tmpval^(0+128)
 13455                           
 13456                           ;doprnt.c: 1249: tmpval.vd %= 10;
 13457  0D80  3000               	movlw	0
 13458  0D81  0020               	movlb	0	; select bank0
 13459  0D82  00A3               	movwf	___llmod@divisor+3
 13460  0D83  3000               	movlw	0
 13461  0D84  00A2               	movwf	___llmod@divisor+2
 13462  0D85  3000               	movlw	0
 13463  0D86  00A1               	movwf	___llmod@divisor+1
 13464  0D87  300A               	movlw	10
 13465  0D88  00A0               	movwf	___llmod@divisor
 13466  0D89  0021               	movlb	1	; select bank1
 13467  0D8A  0848               	movf	(__doprnt@tmpval+3)^(0+128),w
 13468  0D8B  0020               	movlb	0	; select bank0
 13469  0D8C  00A7               	movwf	___llmod@dividend+3
 13470  0D8D  0021               	movlb	1	; select bank1
 13471  0D8E  0847               	movf	(__doprnt@tmpval+2)^(0+128),w
 13472  0D8F  0020               	movlb	0	; select bank0
 13473  0D90  00A6               	movwf	___llmod@dividend+2
 13474  0D91  0021               	movlb	1	; select bank1
 13475  0D92  0846               	movf	(__doprnt@tmpval+1)^(0+128),w
 13476  0D93  0020               	movlb	0	; select bank0
 13477  0D94  00A5               	movwf	___llmod@dividend+1
 13478  0D95  0021               	movlb	1	; select bank1
 13479  0D96  0845               	movf	__doprnt@tmpval^(0+128),w
 13480  0D97  0020               	movlb	0	; select bank0
 13481  0D98  00A4               	movwf	___llmod@dividend
 13482  0D99  319F  27BD  318C   	fcall	___llmod
 13483  0D9C  0020               	movlb	0	; select bank0
 13484  0D9D  0823               	movf	?___llmod+3,w
 13485  0D9E  0021               	movlb	1	; select bank1
 13486  0D9F  00C8               	movwf	(__doprnt@tmpval+3)^(0+128)
 13487  0DA0  0020               	movlb	0	; select bank0
 13488  0DA1  0822               	movf	?___llmod+2,w
 13489  0DA2  0021               	movlb	1	; select bank1
 13490  0DA3  00C7               	movwf	(__doprnt@tmpval+2)^(0+128)
 13491  0DA4  0020               	movlb	0	; select bank0
 13492  0DA5  0821               	movf	?___llmod+1,w
 13493  0DA6  0021               	movlb	1	; select bank1
 13494  0DA7  00C6               	movwf	(__doprnt@tmpval+1)^(0+128)
 13495  0DA8  0020               	movlb	0	; select bank0
 13496  0DA9  0820               	movf	?___llmod,w
 13497  0DAA  0021               	movlb	1	; select bank1
 13498  0DAB  00C5               	movwf	__doprnt@tmpval^(0+128)
 13499  0DAC  0A50               	incf	__doprnt@pb^(0+128),w
 13500  0DAD  0086               	movwf	6
 13501  0DAE  0187               	clrf	7
 13502  0DAF  0016               	moviw fsr1++
 13503  0DB0  0401               	iorwf	1,w
 13504  0DB1  1903               	btfsc	3,2
 13505  0DB2  2DC1               	goto	l4430
 13506  0DB3  0845               	movf	__doprnt@tmpval^(0+128),w
 13507  0DB4  3E30               	addlw	48
 13508  0DB5  00AE               	movwf	??__doprnt^(0+128)
 13509  0DB6  082E               	movf	??__doprnt^(0+128),w
 13510  0DB7  00F1               	movwf	putch@txData
 13511  0DB8  0A50               	incf	__doprnt@pb^(0+128),w
 13512  0DB9  0086               	movwf	6
 13513  0DBA  0187               	clrf	7
 13514  0DBB  3F41               	moviw [1]fsr1
 13515  0DBC  008A               	movwf	10
 13516  0DBD  3F40               	moviw [0]fsr1
 13517  0DBE  000A               	callw
 13518  0DBF  318C               	pagesel	$
 13519  0DC0  2DD4               	goto	l4432
 13520  0DC1                     l4430:	
 13521  0DC1  0845               	movf	__doprnt@tmpval^(0+128),w
 13522  0DC2  3E30               	addlw	48
 13523  0DC3  00AE               	movwf	??__doprnt^(0+128)
 13524  0DC4  0850               	movf	__doprnt@pb^(0+128),w
 13525  0DC5  0086               	movwf	6
 13526  0DC6  0187               	clrf	7
 13527  0DC7  0801               	movf	1,w
 13528  0DC8  0086               	movwf	6
 13529  0DC9  3001               	movlw	1	; select bank2/3
 13530  0DCA  0087               	movwf	7
 13531  0DCB  082E               	movf	??__doprnt^(0+128),w
 13532  0DCC  0081               	movwf	1
 13533  0DCD  3001               	movlw	1
 13534  0DCE  00AE               	movwf	??__doprnt^(0+128)
 13535  0DCF  0850               	movf	__doprnt@pb^(0+128),w
 13536  0DD0  0086               	movwf	6
 13537  0DD1  0187               	clrf	7
 13538  0DD2  082E               	movf	??__doprnt^(0+128),w
 13539  0DD3  0781               	addwf	1,f
 13540  0DD4                     l4432:	
 13541                           
 13542                           ;doprnt.c: 1251: val %= dpowers[c];
 13543  0DD4  0021               	movlb	1	; select bank1
 13544  0DD5  084F               	movf	__doprnt@c^(0+128),w
 13545  0DD6  00AE               	movwf	??__doprnt^(0+128)
 13546  0DD7  01AF               	clrf	(??__doprnt^(0+128)+1)
 13547  0DD8  35AE               	lslf	??__doprnt^(0+128),f
 13548  0DD9  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13549  0DDA  35AE               	lslf	??__doprnt^(0+128),f
 13550  0DDB  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13551  0DDC  3068               	movlw	low (_dpowers| (0+32768))
 13552  0DDD  072E               	addwf	??__doprnt^(0+128),w
 13553  0DDE  0084               	movwf	4
 13554  0DDF  3098               	movlw	high (_dpowers| (0+32768))
 13555  0DE0  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
 13556  0DE1  0085               	movwf	5
 13557  0DE2  3F00               	moviw [0]fsr0
 13558  0DE3  0020               	movlb	0	; select bank0
 13559  0DE4  00A0               	movwf	___llmod@divisor
 13560  0DE5  3F01               	moviw [1]fsr0
 13561  0DE6  00A1               	movwf	___llmod@divisor+1
 13562  0DE7  3F02               	moviw [2]fsr0
 13563  0DE8  00A2               	movwf	___llmod@divisor+2
 13564  0DE9  3F03               	moviw [3]fsr0
 13565  0DEA  00A3               	movwf	___llmod@divisor+3
 13566  0DEB  0021               	movlb	1	; select bank1
 13567  0DEC  0842               	movf	(__doprnt@val+3)^(0+128),w
 13568  0DED  0020               	movlb	0	; select bank0
 13569  0DEE  00A7               	movwf	___llmod@dividend+3
 13570  0DEF  0021               	movlb	1	; select bank1
 13571  0DF0  0841               	movf	(__doprnt@val+2)^(0+128),w
 13572  0DF1  0020               	movlb	0	; select bank0
 13573  0DF2  00A6               	movwf	___llmod@dividend+2
 13574  0DF3  0021               	movlb	1	; select bank1
 13575  0DF4  0840               	movf	(__doprnt@val+1)^(0+128),w
 13576  0DF5  0020               	movlb	0	; select bank0
 13577  0DF6  00A5               	movwf	___llmod@dividend+1
 13578  0DF7  0021               	movlb	1	; select bank1
 13579  0DF8  083F               	movf	__doprnt@val^(0+128),w
 13580  0DF9  0020               	movlb	0	; select bank0
 13581  0DFA  00A4               	movwf	___llmod@dividend
 13582  0DFB  319F  27BD  318C   	fcall	___llmod
 13583  0DFE  0020               	movlb	0	; select bank0
 13584  0DFF  0823               	movf	?___llmod+3,w
 13585  0E00  0021               	movlb	1	; select bank1
 13586  0E01  00C2               	movwf	(__doprnt@val+3)^(0+128)
 13587  0E02  0020               	movlb	0	; select bank0
 13588  0E03  0822               	movf	?___llmod+2,w
 13589  0E04  0021               	movlb	1	; select bank1
 13590  0E05  00C1               	movwf	(__doprnt@val+2)^(0+128)
 13591  0E06  0020               	movlb	0	; select bank0
 13592  0E07  0821               	movf	?___llmod+1,w
 13593  0E08  0021               	movlb	1	; select bank1
 13594  0E09  00C0               	movwf	(__doprnt@val+1)^(0+128)
 13595  0E0A  0020               	movlb	0	; select bank0
 13596  0E0B  0820               	movf	?___llmod,w
 13597  0E0C  2D50               	goto	L6
 13598  0E0D                     l4436:	
 13599  0E0D  0A50               	incf	__doprnt@pb^(0+128),w
 13600  0E0E  0086               	movwf	6
 13601  0E0F  0187               	clrf	7
 13602  0E10  0016               	moviw fsr1++
 13603  0E11  0401               	iorwf	1,w
 13604  0E12  1903               	btfsc	3,2
 13605  0E13  2E21               	goto	l4440
 13606  0E14  3030               	movlw	48
 13607  0E15  00AE               	movwf	??__doprnt^(0+128)
 13608  0E16  082E               	movf	??__doprnt^(0+128),w
 13609  0E17  00F1               	movwf	putch@txData
 13610  0E18  0A50               	incf	__doprnt@pb^(0+128),w
 13611  0E19  0086               	movwf	6
 13612  0E1A  0187               	clrf	7
 13613  0E1B  3F41               	moviw [1]fsr1
 13614  0E1C  008A               	movwf	10
 13615  0E1D  3F40               	moviw [0]fsr1
 13616  0E1E  000A               	callw
 13617  0E1F  318C               	pagesel	$
 13618  0E20  2E33               	goto	l4444
 13619  0E21                     l4440:	
 13620  0E21  3030               	movlw	48
 13621  0E22  00AE               	movwf	??__doprnt^(0+128)
 13622  0E23  0850               	movf	__doprnt@pb^(0+128),w
 13623  0E24  0086               	movwf	6
 13624  0E25  0187               	clrf	7
 13625  0E26  0801               	movf	1,w
 13626  0E27  0086               	movwf	6
 13627  0E28  3001               	movlw	1	; select bank2/3
 13628  0E29  0087               	movwf	7
 13629  0E2A  082E               	movf	??__doprnt^(0+128),w
 13630  0E2B  0081               	movwf	1
 13631  0E2C  3001               	movlw	1
 13632  0E2D  00AE               	movwf	??__doprnt^(0+128)
 13633  0E2E  0850               	movf	__doprnt@pb^(0+128),w
 13634  0E2F  0086               	movwf	6
 13635  0E30  0187               	clrf	7
 13636  0E31  082E               	movf	??__doprnt^(0+128),w
 13637  0E32  0781               	addwf	1,f
 13638  0E33                     l4444:	
 13639                           
 13640                           ;doprnt.c: 1256: prec--;
 13641  0E33  30FF               	movlw	255
 13642  0E34  0021               	movlb	1	; select bank1
 13643  0E35  07BB               	addwf	__doprnt@prec^(0+128),f
 13644  0E36  30FF               	movlw	255
 13645  0E37  3DBC               	addwfc	(__doprnt@prec+1)^(0+128),f
 13646  0E38                     l695:	
 13647  0E38  083B               	movf	__doprnt@prec^(0+128),w
 13648  0E39  043C               	iorwf	(__doprnt@prec+1)^(0+128),w
 13649  0E3A  1903               	btfsc	3,2
 13650  0E3B  2FFE               	goto	L13
 13651  0E3C  2E0D               	goto	l4436
 13652  0E3D                     l4446:	
 13653                           
 13654                           ;doprnt.c: 1265: };doprnt.c: 1272: {;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
 13655  0E3D  0020               	movlb	0	; select bank0
 13656  0E3E  086F               	movf	__doprnt@ap,w
 13657  0E3F  0086               	movwf	6
 13658  0E40  0187               	clrf	7
 13659  0E41  0801               	movf	1,w
 13660  0E42  0084               	movwf	4
 13661  0E43  0185               	clrf	5
 13662  0E44  3002               	movlw	2
 13663  0E45  0781               	addwf	1,f
 13664  0E46  3F00               	moviw [0]fsr0
 13665  0E47  0021               	movlb	1	; select bank1
 13666  0E48  00AE               	movwf	??__doprnt^(0+128)
 13667  0E49  3F01               	moviw [1]fsr0
 13668  0E4A  00AF               	movwf	(??__doprnt^(0+128)+1)
 13669  0E4B  082E               	movf	??__doprnt^(0+128),w
 13670  0E4C  00BF               	movwf	__doprnt@val^(0+128)
 13671  0E4D  082F               	movf	(??__doprnt+1)^(0+128),w
 13672  0E4E  00C0               	movwf	(__doprnt@val+1)^(0+128)
 13673  0E4F  0D89               	rlf	9,f
 13674  0E50  3B89               	subwfb	9,f
 13675  0E51  0989               	comf	9,f
 13676  0E52  00C1               	movwf	(__doprnt@val+2)^(0+128)
 13677  0E53  00C2               	movwf	(__doprnt@val+3)^(0+128)
 13678                           
 13679                           ;doprnt.c: 1280: if((long)val < 0) {
 13680  0E54  1FC2               	btfss	(__doprnt@val+3)^(0+128),7
 13681  0E55  2E65               	goto	l4454
 13682                           
 13683                           ;doprnt.c: 1281: flag |= 0x03;
 13684  0E56  3003               	movlw	3
 13685  0E57  04BD               	iorwf	__doprnt@flag^(0+128),f
 13686  0E58  3000               	movlw	0
 13687  0E59  04BE               	iorwf	(__doprnt@flag+1)^(0+128),f
 13688                           
 13689                           ;doprnt.c: 1282: val = -val;
 13690  0E5A  09BF               	comf	__doprnt@val^(0+128),f
 13691  0E5B  09C0               	comf	(__doprnt@val+1)^(0+128),f
 13692  0E5C  09C1               	comf	(__doprnt@val+2)^(0+128),f
 13693  0E5D  09C2               	comf	(__doprnt@val+3)^(0+128),f
 13694  0E5E  0ABF               	incf	__doprnt@val^(0+128),f
 13695  0E5F  1903               	skipnz
 13696  0E60  0AC0               	incf	(__doprnt@val+1)^(0+128),f
 13697  0E61  1903               	skipnz
 13698  0E62  0AC1               	incf	(__doprnt@val+2)^(0+128),f
 13699  0E63  1903               	skipnz
 13700  0E64  0AC2               	incf	(__doprnt@val+3)^(0+128),f
 13701  0E65                     l4454:	
 13702                           
 13703                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13704  0E65  01CF               	clrf	__doprnt@c^(0+128)
 13705  0E66  0ACF               	incf	__doprnt@c^(0+128),f
 13706  0E67  300A               	movlw	10
 13707  0E68  064F               	xorwf	__doprnt@c^(0+128),w
 13708  0E69  1903               	btfsc	3,2
 13709  0E6A  2E98               	goto	l4466
 13710  0E6B                     l4460:	
 13711                           
 13712                           ;doprnt.c: 1325: if(val < dpowers[c])
 13713  0E6B  084F               	movf	__doprnt@c^(0+128),w
 13714  0E6C  00AE               	movwf	??__doprnt^(0+128)
 13715  0E6D  01AF               	clrf	(??__doprnt^(0+128)+1)
 13716  0E6E  35AE               	lslf	??__doprnt^(0+128),f
 13717  0E6F  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13718  0E70  35AE               	lslf	??__doprnt^(0+128),f
 13719  0E71  0DAF               	rlf	(??__doprnt^(0+128)+1),f
 13720  0E72  3068               	movlw	low (_dpowers| (0+32768))
 13721  0E73  072E               	addwf	??__doprnt^(0+128),w
 13722  0E74  0084               	movwf	4
 13723  0E75  3098               	movlw	high (_dpowers| (0+32768))
 13724  0E76  3D2F               	addwfc	(??__doprnt+1)^(0+128),w
 13725  0E77  0085               	movwf	5
 13726  0E78  3F00               	moviw [0]fsr0
 13727  0E79  00B0               	movwf	(??__doprnt+2)^(0+128)
 13728  0E7A  3F01               	moviw [1]fsr0
 13729  0E7B  00B1               	movwf	((??__doprnt+2)^(0+128)+1)
 13730  0E7C  3F02               	moviw [2]fsr0
 13731  0E7D  00B2               	movwf	((??__doprnt+2)^(0+128)+2)
 13732  0E7E  3F03               	moviw [3]fsr0
 13733  0E7F  00B3               	movwf	((??__doprnt+2)^(0+128)+3)
 13734  0E80  0833               	movf	(??__doprnt+5)^(0+128),w
 13735  0E81  0242               	subwf	(__doprnt@val+3)^(0+128),w
 13736  0E82  1D03               	skipz
 13737  0E83  2E8E               	goto	u5915
 13738  0E84  0832               	movf	(??__doprnt+4)^(0+128),w
 13739  0E85  0241               	subwf	(__doprnt@val+2)^(0+128),w
 13740  0E86  1D03               	skipz
 13741  0E87  2E8E               	goto	u5915
 13742  0E88  0831               	movf	(??__doprnt+3)^(0+128),w
 13743  0E89  0240               	subwf	(__doprnt@val+1)^(0+128),w
 13744  0E8A  1D03               	skipz
 13745  0E8B  2E8E               	goto	u5915
 13746  0E8C  0830               	movf	(??__doprnt+2)^(0+128),w
 13747  0E8D  023F               	subwf	__doprnt@val^(0+128),w
 13748  0E8E                     u5915:	
 13749  0E8E  1C03               	btfss	3,0
 13750  0E8F  2E98               	goto	l4466
 13751  0E90  3001               	movlw	1
 13752  0E91  00AE               	movwf	??__doprnt^(0+128)
 13753  0E92  082E               	movf	??__doprnt^(0+128),w
 13754  0E93  07CF               	addwf	__doprnt@c^(0+128),f
 13755  0E94  300A               	movlw	10
 13756  0E95  064F               	xorwf	__doprnt@c^(0+128),w
 13757  0E96  1D03               	btfss	3,2
 13758  0E97  2E6B               	goto	l4460
 13759  0E98                     l4466:	
 13760                           
 13761                           ;doprnt.c: 1364: if(width && flag & 0x03)
 13762  0E98  084D               	movf	__doprnt@width^(0+128),w
 13763  0E99  044E               	iorwf	(__doprnt@width+1)^(0+128),w
 13764  0E9A  1903               	btfsc	3,2
 13765  0E9B  2EAA               	goto	l706
 13766  0E9C  3003               	movlw	3
 13767  0E9D  053D               	andwf	__doprnt@flag^(0+128),w
 13768  0E9E  00AE               	movwf	??__doprnt^(0+128)
 13769  0E9F  3000               	movlw	0
 13770  0EA0  053E               	andwf	(__doprnt@flag+1)^(0+128),w
 13771  0EA1  00AF               	movwf	(??__doprnt+1)^(0+128)
 13772  0EA2  082E               	movf	??__doprnt^(0+128),w
 13773  0EA3  042F               	iorwf	(??__doprnt^(0+128)+1),w
 13774  0EA4  1903               	btfsc	3,2
 13775  0EA5  2EAA               	goto	l706
 13776                           
 13777                           ;doprnt.c: 1365: width--;
 13778  0EA6  30FF               	movlw	255
 13779  0EA7  07CD               	addwf	__doprnt@width^(0+128),f
 13780  0EA8  30FF               	movlw	255
 13781  0EA9  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
 13782  0EAA                     l706:	
 13783                           
 13784                           ;doprnt.c: 1400: if(width > c)
 13785  0EAA  084E               	movf	(__doprnt@width+1)^(0+128),w
 13786  0EAB  3A80               	xorlw	128
 13787  0EAC  3C80               	sublw	128
 13788  0EAD  1D03               	skipz
 13789  0EAE  2EB1               	goto	u5955
 13790  0EAF  084D               	movf	__doprnt@width^(0+128),w
 13791  0EB0  024F               	subwf	__doprnt@c^(0+128),w
 13792  0EB1                     u5955:	
 13793  0EB1  1803               	skipnc
 13794  0EB2  2EBC               	goto	l4474
 13795                           
 13796                           ;doprnt.c: 1401: width -= c;
 13797  0EB3  0021               	movlb	1	; select bank1
 13798  0EB4  084F               	movf	__doprnt@c^(0+128),w
 13799  0EB5  00AE               	movwf	??__doprnt^(0+128)
 13800  0EB6  01AF               	clrf	(??__doprnt^(0+128)+1)
 13801  0EB7  082E               	movf	??__doprnt^(0+128),w
 13802  0EB8  02CD               	subwf	__doprnt@width^(0+128),f
 13803  0EB9  082F               	movf	(??__doprnt+1)^(0+128),w
 13804  0EBA  3BCE               	subwfb	(__doprnt@width+1)^(0+128),f
 13805  0EBB  2EBF               	goto	l4476
 13806  0EBC                     l4474:	
 13807                           
 13808                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 13809  0EBC  0021               	movlb	1	; select bank1
 13810  0EBD  01CD               	clrf	__doprnt@width^(0+128)
 13811  0EBE  01CE               	clrf	(__doprnt@width+1)^(0+128)
 13812  0EBF                     l4476:	
 13813                           
 13814                           ;doprnt.c: 1406: if(flag & 0x04) {
 13815  0EBF  1D3D               	btfss	__doprnt@flag^(0+128),2
 13816  0EC0  2F22               	goto	l4500
 13817                           
 13818                           ;doprnt.c: 1411: if(flag & 0x03)
 13819  0EC1  3003               	movlw	3
 13820  0EC2  053D               	andwf	__doprnt@flag^(0+128),w
 13821  0EC3  00AE               	movwf	??__doprnt^(0+128)
 13822  0EC4  3000               	movlw	0
 13823  0EC5  053E               	andwf	(__doprnt@flag+1)^(0+128),w
 13824  0EC6  00AF               	movwf	(??__doprnt+1)^(0+128)
 13825  0EC7  082E               	movf	??__doprnt^(0+128),w
 13826  0EC8  042F               	iorwf	(??__doprnt^(0+128)+1),w
 13827  0EC9  1903               	btfsc	3,2
 13828  0ECA  2EF1               	goto	l4488
 13829  0ECB  0A50               	incf	__doprnt@pb^(0+128),w
 13830  0ECC  0086               	movwf	6
 13831  0ECD  0187               	clrf	7
 13832  0ECE  0016               	moviw fsr1++
 13833  0ECF  0401               	iorwf	1,w
 13834  0ED0  1903               	btfsc	3,2
 13835  0ED1  2EDF               	goto	l4484
 13836  0ED2  302D               	movlw	45
 13837  0ED3  00AE               	movwf	??__doprnt^(0+128)
 13838  0ED4  082E               	movf	??__doprnt^(0+128),w
 13839  0ED5  00F1               	movwf	putch@txData
 13840  0ED6  0A50               	incf	__doprnt@pb^(0+128),w
 13841  0ED7  0086               	movwf	6
 13842  0ED8  0187               	clrf	7
 13843  0ED9  3F41               	moviw [1]fsr1
 13844  0EDA  008A               	movwf	10
 13845  0EDB  3F40               	moviw [0]fsr1
 13846  0EDC  000A               	callw
 13847  0EDD  318C               	pagesel	$
 13848  0EDE  2EF1               	goto	l4488
 13849  0EDF                     l4484:	
 13850  0EDF  302D               	movlw	45
 13851  0EE0  00AE               	movwf	??__doprnt^(0+128)
 13852  0EE1  0850               	movf	__doprnt@pb^(0+128),w
 13853  0EE2  0086               	movwf	6
 13854  0EE3  0187               	clrf	7
 13855  0EE4  0801               	movf	1,w
 13856  0EE5  0086               	movwf	6
 13857  0EE6  3001               	movlw	1	; select bank2/3
 13858  0EE7  0087               	movwf	7
 13859  0EE8  082E               	movf	??__doprnt^(0+128),w
 13860  0EE9  0081               	movwf	1
 13861  0EEA  3001               	movlw	1
 13862  0EEB  00AE               	movwf	??__doprnt^(0+128)
 13863  0EEC  0850               	movf	__doprnt@pb^(0+128),w
 13864  0EED  0086               	movwf	6
 13865  0EEE  0187               	clrf	7
 13866  0EEF  082E               	movf	??__doprnt^(0+128),w
 13867  0EF0  0781               	addwf	1,f
 13868  0EF1                     l4488:	
 13869                           
 13870                           ;doprnt.c: 1434: if(width)
 13871  0EF1  0021               	movlb	1	; select bank1
 13872  0EF2                     L7:	
 13873  0EF2  084D               	movf	__doprnt@width^(0+128),w
 13874  0EF3  044E               	iorwf	(__doprnt@width+1)^(0+128),w
 13875  0EF4  1903               	btfsc	3,2
 13876  0EF5  2F85               	goto	l4522
 13877  0EF6  0A50               	incf	__doprnt@pb^(0+128),w
 13878  0EF7  0086               	movwf	6
 13879  0EF8  0187               	clrf	7
 13880  0EF9  0016               	moviw fsr1++
 13881  0EFA  0401               	iorwf	1,w
 13882  0EFB  1903               	btfsc	3,2
 13883  0EFC  2F0A               	goto	l4494
 13884  0EFD  3030               	movlw	48
 13885  0EFE  00AE               	movwf	??__doprnt^(0+128)
 13886  0EFF  082E               	movf	??__doprnt^(0+128),w
 13887  0F00  00F1               	movwf	putch@txData
 13888  0F01  0A50               	incf	__doprnt@pb^(0+128),w
 13889  0F02  0086               	movwf	6
 13890  0F03  0187               	clrf	7
 13891  0F04  3F41               	moviw [1]fsr1
 13892  0F05  008A               	movwf	10
 13893  0F06  3F40               	moviw [0]fsr1
 13894  0F07  000A               	callw
 13895  0F08  318C               	pagesel	$
 13896  0F09  2F1C               	goto	l4498
 13897  0F0A                     l4494:	
 13898  0F0A  3030               	movlw	48
 13899  0F0B  00AE               	movwf	??__doprnt^(0+128)
 13900  0F0C  0850               	movf	__doprnt@pb^(0+128),w
 13901  0F0D  0086               	movwf	6
 13902  0F0E  0187               	clrf	7
 13903  0F0F  0801               	movf	1,w
 13904  0F10  0086               	movwf	6
 13905  0F11  3001               	movlw	1	; select bank2/3
 13906  0F12  0087               	movwf	7
 13907  0F13  082E               	movf	??__doprnt^(0+128),w
 13908  0F14  0081               	movwf	1
 13909  0F15  3001               	movlw	1
 13910  0F16  00AE               	movwf	??__doprnt^(0+128)
 13911  0F17  0850               	movf	__doprnt@pb^(0+128),w
 13912  0F18  0086               	movwf	6
 13913  0F19  0187               	clrf	7
 13914  0F1A  082E               	movf	??__doprnt^(0+128),w
 13915  0F1B  0781               	addwf	1,f
 13916  0F1C                     l4498:	
 13917                           
 13918                           ;doprnt.c: 1437: while(--width);
 13919  0F1C  30FF               	movlw	255
 13920  0F1D  0021               	movlb	1	; select bank1
 13921  0F1E  07CD               	addwf	__doprnt@width^(0+128),f
 13922  0F1F  30FF               	movlw	255
 13923  0F20  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
 13924  0F21  2EF2               	goto	L7
 13925  0F22                     l4500:	
 13926                           
 13927                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 13928  0F22  084D               	movf	__doprnt@width^(0+128),w
 13929  0F23  044E               	iorwf	(__doprnt@width+1)^(0+128),w
 13930  0F24  1903               	btfsc	3,2
 13931  0F25  2F55               	goto	l4512
 13932  0F26                     l4502:	
 13933  0F26  0A50               	incf	__doprnt@pb^(0+128),w
 13934  0F27  0086               	movwf	6
 13935  0F28  0187               	clrf	7
 13936  0F29  0016               	moviw fsr1++
 13937  0F2A  0401               	iorwf	1,w
 13938  0F2B  1903               	btfsc	3,2
 13939  0F2C  2F3A               	goto	l4506
 13940  0F2D  3020               	movlw	32
 13941  0F2E  00AE               	movwf	??__doprnt^(0+128)
 13942  0F2F  082E               	movf	??__doprnt^(0+128),w
 13943  0F30  00F1               	movwf	putch@txData
 13944  0F31  0A50               	incf	__doprnt@pb^(0+128),w
 13945  0F32  0086               	movwf	6
 13946  0F33  0187               	clrf	7
 13947  0F34  3F41               	moviw [1]fsr1
 13948  0F35  008A               	movwf	10
 13949  0F36  3F40               	moviw [0]fsr1
 13950  0F37  000A               	callw
 13951  0F38  318C               	pagesel	$
 13952  0F39  2F4C               	goto	l4510
 13953  0F3A                     l4506:	
 13954  0F3A  3020               	movlw	32
 13955  0F3B  00AE               	movwf	??__doprnt^(0+128)
 13956  0F3C  0850               	movf	__doprnt@pb^(0+128),w
 13957  0F3D  0086               	movwf	6
 13958  0F3E  0187               	clrf	7
 13959  0F3F  0801               	movf	1,w
 13960  0F40  0086               	movwf	6
 13961  0F41  3001               	movlw	1	; select bank2/3
 13962  0F42  0087               	movwf	7
 13963  0F43  082E               	movf	??__doprnt^(0+128),w
 13964  0F44  0081               	movwf	1
 13965  0F45  3001               	movlw	1
 13966  0F46  00AE               	movwf	??__doprnt^(0+128)
 13967  0F47  0850               	movf	__doprnt@pb^(0+128),w
 13968  0F48  0086               	movwf	6
 13969  0F49  0187               	clrf	7
 13970  0F4A  082E               	movf	??__doprnt^(0+128),w
 13971  0F4B  0781               	addwf	1,f
 13972  0F4C                     l4510:	
 13973                           
 13974                           ;doprnt.c: 1450: while(--width);
 13975  0F4C  30FF               	movlw	255
 13976  0F4D  0021               	movlb	1	; select bank1
 13977  0F4E  07CD               	addwf	__doprnt@width^(0+128),f
 13978  0F4F  30FF               	movlw	255
 13979  0F50  3DCE               	addwfc	(__doprnt@width+1)^(0+128),f
 13980  0F51  084D               	movf	__doprnt@width^(0+128),w
 13981  0F52  044E               	iorwf	(__doprnt@width+1)^(0+128),w
 13982  0F53  1D03               	btfss	3,2
 13983  0F54  2F26               	goto	l4502
 13984  0F55                     l4512:	
 13985                           
 13986                           ;doprnt.c: 1457: if(flag & 0x03)
 13987  0F55  3003               	movlw	3
 13988  0F56  053D               	andwf	__doprnt@flag^(0+128),w
 13989  0F57  00AE               	movwf	??__doprnt^(0+128)
 13990  0F58  3000               	movlw	0
 13991  0F59  053E               	andwf	(__doprnt@flag+1)^(0+128),w
 13992  0F5A  00AF               	movwf	(??__doprnt+1)^(0+128)
 13993  0F5B  082E               	movf	??__doprnt^(0+128),w
 13994  0F5C  042F               	iorwf	(??__doprnt^(0+128)+1),w
 13995  0F5D  1903               	btfsc	3,2
 13996  0F5E  2F85               	goto	l4522
 13997  0F5F  0A50               	incf	__doprnt@pb^(0+128),w
 13998  0F60  0086               	movwf	6
 13999  0F61  0187               	clrf	7
 14000  0F62  0016               	moviw fsr1++
 14001  0F63  0401               	iorwf	1,w
 14002  0F64  1903               	btfsc	3,2
 14003  0F65  2F73               	goto	l4518
 14004  0F66  302D               	movlw	45
 14005  0F67  00AE               	movwf	??__doprnt^(0+128)
 14006  0F68  082E               	movf	??__doprnt^(0+128),w
 14007  0F69  00F1               	movwf	putch@txData
 14008  0F6A  0A50               	incf	__doprnt@pb^(0+128),w
 14009  0F6B  0086               	movwf	6
 14010  0F6C  0187               	clrf	7
 14011  0F6D  3F41               	moviw [1]fsr1
 14012  0F6E  008A               	movwf	10
 14013  0F6F  3F40               	moviw [0]fsr1
 14014  0F70  000A               	callw
 14015  0F71  318C               	pagesel	$
 14016  0F72  2F85               	goto	l4522
 14017  0F73                     l4518:	
 14018  0F73  302D               	movlw	45
 14019  0F74  00AE               	movwf	??__doprnt^(0+128)
 14020  0F75  0850               	movf	__doprnt@pb^(0+128),w
 14021  0F76  0086               	movwf	6
 14022  0F77  0187               	clrf	7
 14023  0F78  0801               	movf	1,w
 14024  0F79  0086               	movwf	6
 14025  0F7A  3001               	movlw	1	; select bank2/3
 14026  0F7B  0087               	movwf	7
 14027  0F7C  082E               	movf	??__doprnt^(0+128),w
 14028  0F7D  0081               	movwf	1
 14029  0F7E  3001               	movlw	1
 14030  0F7F  00AE               	movwf	??__doprnt^(0+128)
 14031  0F80  0850               	movf	__doprnt@pb^(0+128),w
 14032  0F81  0086               	movwf	6
 14033  0F82  0187               	clrf	7
 14034  0F83  082E               	movf	??__doprnt^(0+128),w
 14035  0F84  0781               	addwf	1,f
 14036  0F85                     l4522:	
 14037                           
 14038                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
 14039  0F85  0021               	movlb	1	; select bank1
 14040  0F86  084F               	movf	__doprnt@c^(0+128),w
 14041  0F87  00AE               	movwf	??__doprnt^(0+128)
 14042  0F88  01AF               	clrf	(??__doprnt^(0+128)+1)
 14043  0F89  082E               	movf	??__doprnt^(0+128),w
 14044  0F8A  00BB               	movwf	__doprnt@prec^(0+128)
 14045  0F8B  082F               	movf	(??__doprnt+1)^(0+128),w
 14046  0F8C  00BC               	movwf	(__doprnt@prec+1)^(0+128)
 14047  0F8D                     l4534:	
 14048                           ;doprnt.c: 1493: while(prec--) {
 14049                           
 14050  0F8D  30FF               	movlw	255
 14051  0F8E  0021               	movlb	1	; select bank1
 14052  0F8F  07BB               	addwf	__doprnt@prec^(0+128),f
 14053  0F90  30FF               	movlw	255
 14054  0F91  3DBC               	addwfc	(__doprnt@prec+1)^(0+128),f
 14055  0F92  0A3B               	incf	__doprnt@prec^(0+128),w
 14056  0F93  1903               	btfsc	3,2
 14057  0F94  0A3C               	incf	(__doprnt@prec+1)^(0+128),w
 14058  0F95  1903               	btfsc	3,2
 14059  0F96  2FFE               	goto	L13
 14060                           
 14061                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 14062  0F97  3000               	movlw	0
 14063  0F98  0020               	movlb	0	; select bank0
 14064  0F99  00A3               	movwf	___llmod@divisor+3
 14065  0F9A  3000               	movlw	0
 14066  0F9B  00A2               	movwf	___llmod@divisor+2
 14067  0F9C  3000               	movlw	0
 14068  0F9D  00A1               	movwf	___llmod@divisor+1
 14069  0F9E  300A               	movlw	10
 14070  0F9F  00A0               	movwf	___llmod@divisor
 14071  0FA0  0021               	movlb	1	; select bank1
 14072  0FA1  083C               	movf	(__doprnt@prec+1)^(0+128),w
 14073  0FA2  0085               	movwf	5
 14074  0FA3  083B               	movf	__doprnt@prec^(0+128),w
 14075  0FA4  0084               	movwf	4
 14076  0FA5  3584               	lslf	4,f
 14077  0FA6  0D85               	rlf	5,f
 14078  0FA7  3584               	lslf	4,f
 14079  0FA8  0D85               	rlf	5,f
 14080  0FA9  3068               	movlw	low (_dpowers| (0+32768))
 14081  0FAA  0784               	addwf	4,f
 14082  0FAB  3098               	movlw	high (_dpowers| (0+32768))
 14083  0FAC  3D85               	addwfc	5,f
 14084  0FAD  3F00               	moviw [0]fsr0
 14085  0FAE  00F0               	movwf	___lldiv@divisor
 14086  0FAF  3F01               	moviw [1]fsr0
 14087  0FB0  00F1               	movwf	___lldiv@divisor+1
 14088  0FB1  3F02               	moviw [2]fsr0
 14089  0FB2  00F2               	movwf	___lldiv@divisor+2
 14090  0FB3  3F03               	moviw [3]fsr0
 14091  0FB4  00F3               	movwf	___lldiv@divisor+3
 14092  0FB5  0842               	movf	(__doprnt@val+3)^(0+128),w
 14093  0FB6  00F7               	movwf	___lldiv@dividend+3
 14094  0FB7  0841               	movf	(__doprnt@val+2)^(0+128),w
 14095  0FB8  00F6               	movwf	___lldiv@dividend+2
 14096  0FB9  0840               	movf	(__doprnt@val+1)^(0+128),w
 14097  0FBA  00F5               	movwf	___lldiv@dividend+1
 14098  0FBB  083F               	movf	__doprnt@val^(0+128),w
 14099  0FBC  00F4               	movwf	___lldiv@dividend
 14100  0FBD  3190  206E  318C   	fcall	___lldiv
 14101  0FC0  0873               	movf	?___lldiv+3,w
 14102  0FC1  0020               	movlb	0	; select bank0
 14103  0FC2  00A7               	movwf	___llmod@dividend+3
 14104  0FC3  0872               	movf	?___lldiv+2,w
 14105  0FC4  00A6               	movwf	___llmod@dividend+2
 14106  0FC5  0871               	movf	?___lldiv+1,w
 14107  0FC6  00A5               	movwf	___llmod@dividend+1
 14108  0FC7  0870               	movf	?___lldiv,w
 14109  0FC8  00A4               	movwf	___llmod@dividend
 14110  0FC9  319F  27BD  318C   	fcall	___llmod
 14111  0FCC  0020               	movlb	0	; select bank0
 14112  0FCD  0820               	movf	?___llmod,w
 14113  0FCE  3E30               	addlw	48
 14114  0FCF  0021               	movlb	1	; select bank1
 14115  0FD0  00AE               	movwf	??__doprnt^(0+128)
 14116  0FD1  082E               	movf	??__doprnt^(0+128),w
 14117  0FD2  00CF               	movwf	__doprnt@c^(0+128)
 14118  0FD3  0A50               	incf	__doprnt@pb^(0+128),w
 14119  0FD4  0086               	movwf	6
 14120  0FD5  0187               	clrf	7
 14121  0FD6  0016               	moviw fsr1++
 14122  0FD7  0401               	iorwf	1,w
 14123  0FD8  1903               	btfsc	3,2
 14124  0FD9  2FE7               	goto	l4530
 14125  0FDA  084F               	movf	__doprnt@c^(0+128),w
 14126  0FDB  00AE               	movwf	??__doprnt^(0+128)
 14127  0FDC  082E               	movf	??__doprnt^(0+128),w
 14128  0FDD  00F1               	movwf	putch@txData
 14129  0FDE  0A50               	incf	__doprnt@pb^(0+128),w
 14130  0FDF  0086               	movwf	6
 14131  0FE0  0187               	clrf	7
 14132  0FE1  3F41               	moviw [1]fsr1
 14133  0FE2  008A               	movwf	10
 14134  0FE3  3F40               	moviw [0]fsr1
 14135  0FE4  000A               	callw
 14136  0FE5  318C               	pagesel	$
 14137  0FE6  2F8D               	goto	l4534
 14138  0FE7                     l4530:	
 14139  0FE7  084F               	movf	__doprnt@c^(0+128),w
 14140  0FE8  00AE               	movwf	??__doprnt^(0+128)
 14141  0FE9  0850               	movf	__doprnt@pb^(0+128),w
 14142  0FEA  0086               	movwf	6
 14143  0FEB  0187               	clrf	7
 14144  0FEC  0801               	movf	1,w
 14145  0FED  0086               	movwf	6
 14146  0FEE  3001               	movlw	1	; select bank2/3
 14147  0FEF  0087               	movwf	7
 14148  0FF0  082E               	movf	??__doprnt^(0+128),w
 14149  0FF1  0081               	movwf	1
 14150  0FF2  3001               	movlw	1
 14151  0FF3  00AE               	movwf	??__doprnt^(0+128)
 14152  0FF4  0850               	movf	__doprnt@pb^(0+128),w
 14153  0FF5  0086               	movwf	6
 14154  0FF6  0187               	clrf	7
 14155  0FF7  082E               	movf	??__doprnt^(0+128),w
 14156  0FF8  0781               	addwf	1,f
 14157  0FF9  2F8D               	goto	l4534
 14158  0FFA                     l4538:	
 14159                           
 14160                           ;doprnt.c: 1559: return 0;
 14161  0FFA  0020               	movlb	0	; select bank0
 14162  0FFB  01ED               	clrf	?__doprnt
 14163  0FFC  01EE               	clrf	?__doprnt+1
 14164  0FFD  0008               	return
 14165  0FFE                     L13:	
 14166  0FFE                     __end_of__doprnt:	
 14167  0FFE  3182  2ABD         	ljmp	l4536


Data Sizes:
    Strings     72
    Constant    184
    Data        5
    BSS         10
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     61      80
    BANK2            80     58      60
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 0

    S33$4$0	PTR void  size(1) Largest target is 0

    S33$5$0	PTR void  size(1) Largest target is 0

    S33$8$0	PTR FTN()void  size(2) Largest target is 0

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 50
		 -> main@aux(BANK2[50]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> main@aux(BANK2[50]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[18]), 
		 -> main@aux(BANK2[50]), STR_2(CODE[16]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK1[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> main@aux(BANK2[50]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), printf@ap(BANK1[1]), 

    _doprnt@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> _doprnt@c(BANK1[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[18]), 
		 -> STR_3(CODE[5]), main@aux(BANK2[50]), STR_2(CODE[16]), STR_1(CODE[18]), 

    S840__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S840__prbuf$ptr	PTR unsigned char  size(1) Largest target is 50
		 -> main@aux(BANK2[50]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> main@aux(BANK2[50]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK1[3]), printf@pb(BANK1[3]), 

    spi_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    S154$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S154$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    S154$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    S154$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S154$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S154$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi_isr(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi_isr(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi_setSpiISR(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi_setSpiISR(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi_readByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi_readByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi_writeByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi_writeByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_readBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_readBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_writeBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_writeBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_exchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi_exchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> spi_exchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> spi_exchangeByte(), 

    S33$spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi_close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi_close(), 


Critical Paths under _main in COMMON

    __doprnt->___lldiv
    ___awdiv->___awmod
    _putch->_EUSART_Write
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    ___xxtofl->_HX711_read
    ___fldiv->___xxtofl
    _HX711_read->_spi_exchangeByte

Critical Paths under _main in BANK0

    _sprintf->__doprnt
    _printf->__doprnt
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    _HX711_tare->_HX711_read_average
    ___fltol->_scale
    _HX711_set_offset->___fltol
    _HX711_get_units->_HX711_get_value
    _HX711_get_value->_HX711_read_average
    ___flsub->_HX711_read_average
    _HX711_read_average->___fladd
    ___xxtofl->_HX711_read
    ___fldiv->___xxtofl
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___flsub
    _HX711_tare->_HX711_read_average
    _HX711_get_units->_HX711_get_value
    _HX711_get_value->___flsub
    ___flsub->_HX711_read_average

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   87917
                                              0 BANK2     58    58      0
                    _HX711_get_units
                     _HX711_is_ready
                    _HX711_set_scale
                         _HX711_tare
                  _SYSTEM_Initialize
                             _printf
                           _spi_open
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12     6      6   35213
                                             49 BANK1     12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spi_open                                             4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               9     5      4   35580
                                             49 BANK1      9     5      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             39    36      3   34867
                                             77 BANK0      3     0      3
                                             14 BANK1     35    35      0
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               21    17      4    7408
                                             30 BANK0     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                2     1      1    1021
                                              1 COMMON     2     1      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1      98
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              19    15      4    5871
                                             30 BANK0     19    15      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HX711_tare                                           5     5      0    6151
                                              6 BANK1      5     5      0
                 _HX711_read_average
                   _HX711_set_offset
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     533
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _HX711_set_offset                                     4     0      4      98
                                             62 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _HX711_set_scale                                      4     0      4      98
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _HX711_is_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HX711_get_units                                     10     5      5   10382
                                             19 BANK1     10     5      5
                    _HX711_get_value
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _HX711_get_value                                      6     1      5    8912
                                             77 BANK0      1     1      0
                                             14 BANK1      5     0      5
                 _HX711_read_average
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2789
                                              6 BANK1      8     0      8
                 _HX711_read_average (ARG)
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _HX711_read_average                                  14    10      4    5475
                                             69 BANK0      8     4      4
                                              0 BANK1      6     6      0
                         _HX711_read
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              7 COMMON     4     0      4
                                             10 BANK0     10    10      0
                         _HX711_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             20 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2440
                                             49 BANK0     20    12      8
                         _HX711_read (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) _HX711_read                                          16    12      4     870
                                              1 COMMON     6     2      4
                                              0 BANK0     10    10      0
                   _spi_exchangeByte
 ---------------------------------------------------------------------------------
 (4) _spi_exchangeByte                                     1     0      1     706
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HX711_get_units
     _HX711_get_value
       _HX711_read_average
         _HX711_read
           _spi_exchangeByte
         ___fladd
           _HX711_read (ARG)
             _spi_exchangeByte
           ___xxtofl (ARG)
             _HX711_read (ARG)
               _spi_exchangeByte
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fldiv
           ___xxtofl (ARG)
             _HX711_read (ARG)
               _spi_exchangeByte
         ___xxtofl
           _HX711_read (ARG)
             _spi_exchangeByte
       ___flsub
         _HX711_read_average (ARG)
           _HX711_read
             _spi_exchangeByte
           ___fladd
             _HX711_read (ARG)
               _spi_exchangeByte
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
             _fround (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fldiv
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
           ___xxtofl
             _HX711_read (ARG)
               _spi_exchangeByte
         ___fladd (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
           ___xxtofl (ARG)
             _HX711_read (ARG)
               _spi_exchangeByte
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
       ___xxtofl
         _HX711_read (ARG)
           _spi_exchangeByte
     ___fldiv
       ___xxtofl (ARG)
         _HX711_read (ARG)
           _spi_exchangeByte
   _HX711_is_ready
   _HX711_set_scale
   _HX711_tare
     _HX711_read_average
       _HX711_read
         _spi_exchangeByte
       ___fladd
         _HX711_read (ARG)
           _spi_exchangeByte
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fldiv
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
       ___xxtofl
         _HX711_read (ARG)
           _spi_exchangeByte
     _HX711_set_offset
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     __doprnt
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _HX711_read (ARG)
           _spi_exchangeByte
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
       ___flmul *
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         _HX711_read_average (ARG)
           _HX711_read
             _spi_exchangeByte
           ___fladd
             _HX711_read (ARG)
               _spi_exchangeByte
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
             _fround (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fldiv
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
           ___xxtofl
             _HX711_read (ARG)
               _spi_exchangeByte
         ___fladd (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
           ___xxtofl (ARG)
             _HX711_read (ARG)
               _spi_exchangeByte
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
       ___fltol *
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         _HX711_read (ARG)
           _spi_exchangeByte
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _spi_open
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _HX711_read (ARG)
           _spi_exchangeByte
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
       ___flmul *
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         _HX711_read_average (ARG)
           _HX711_read
             _spi_exchangeByte
           ___fladd
             _HX711_read (ARG)
               _spi_exchangeByte
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
             _fround (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fldiv
             ___xxtofl (ARG)
               _HX711_read (ARG)
                 _spi_exchangeByte
           ___xxtofl
             _HX711_read (ARG)
               _spi_exchangeByte
         ___fladd (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
           ___xxtofl (ARG)
             _HX711_read (ARG)
               _spi_exchangeByte
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           _HX711_read (ARG)
             _spi_exchangeByte
       ___fltol *
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         _HX711_read (ARG)
           _spi_exchangeByte
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     3A      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 10 17:31:25 2019

                                 ___fldiv@aexp 004D                                   ___fldiv@bexp 004C  
                                 ___fldiv@sign 0045                                    __CFG_CP$OFF 0000  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0072  
                          __Umul8_16@word_mpld 0076                                            l115 1D8E  
                                          l421 11A4                                            l423 11BE  
                                          l416 116A                                            l178 1DB1  
                                          l419 1189                                            l620 0518  
                                          l706 0EAA                                            l586 0306  
                                          l747 1DDB                                            l596 0356  
                                          l933 001F                                            l941 1295  
                                          l934 0039                                            l695 0E38  
                                          l928 1453                                            l938 1247  
                                          l957 1211                                            l975 14EF  
                             ?_HX711_get_value 00AE                 ?_EUSART_SetFramingErrorHandler 0070  
                             ?_HX711_get_units 00B3                                   ___awmod@sign 0076  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0036  
                                 ___flmul@bexp 0037                                   ___flmul@sign 0031  
                                 ___flmul@temp 003C                                   ___flmul@prod 0038  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 005D                                           l1130 154E  
                                         l1116 0A50                                           l1108 0A38  
                                         l1221 13A0                                           l1222 13AA  
                                         l1214 138C                                           l1151 1655  
                                         l1080 0939                                           l1152 166D  
                                         l1208 1356                                           l1074 08C3  
                                         l1154 167A                                           l1252 1E19  
                                         l1078 0956                                           l1182 0C77  
                                         l1095 09D9                                           l4000 107E  
                                         l3200 104C                                           l3130 11B6  
                                         l4010 10AC                                           l4002 108C  
                                         l3106 1E13                                           l4100 1FC6  
                                         l3212 1069                                           l3204 1058  
                                         l3302 08B8                                           l4014 10B7  
                                         l4102 1FD4                                           l4110 1FF7  
                                         l3142 10CB                                           l3312 08CD  
                                         l4040 127B                                           l3160 10EA  
                                         l3208 1061                                           l4200 0324  
                                         l3306 08BB                                           l4026 004B  
                                         l4106 1FEC                                           l3234 1F00  
                                         l3226 1EE2                                           l3250 1E4F  
                                         l3170 1105                                           l3412 09F8  
                                         l3404 09EB                                           l3420 0A01  
                                         l4060 11D1                                           l4036 1261  
                                         l3228 1EEE                                           l3252 1E5B  
                                         l3260 1E70                                           l3148 10D6  
                                         l4212 0365                                           l3430 0A0C  
                                         l3350 0941                                           l3342 0909  
                                         l3238 1F09                                           l3174 110D  
                                         l3166 10FC                                           l3158 10DE  
                                         l3190 103A                                           l4230 03B4  
                                         l4222 0367                                           l3352 0943  
                                         l3360 0951                                           l3512 1579  
                                         l4080 11FF                                           l4064 11DA  
                                         l3256 1E67                                           l4400 0CB0  
                                         l4312 0641                                           l4224 0398  
                                         l4208 0358                                           l3426 0A0A  
                                         l3418 09FF                                           l3282 0893  
                                         l3506 156D                                           l4090 121E  
                                         l4082 120D                                           l3186 1033  
                                         l4218 0385                                           l4242 03E1  
                                         l3452 0A4C                                           l3284 089B  
                                         l3532 15C0                                           l3540 15A2  
                                         l3612 0A72                                           l4500 0F22  
                                         l4340 06BB                                           l4332 069B  
                                         l4324 0674                                           l4308 05F3  
                                         l4236 03CD                                           l4244 0401  
                                         l3278 0890                                           l3542 15DE  
                                         l3702 0C0D                                           l3630 0A95  
                                         l3614 0A74                                           l3198 1040  
                                         l4510 0F4C                                           l4502 0F26  
                                         l4430 0DC1                                           l4414 0CED  
                                         l4406 0CCA                                           l4318 0647  
                                         l4238 03D8                                           l3448 0A48  
                                         l3376 0976                                           l3368 0964  
                                         l3472 151F                                           l3800 12B3  
                                         l3720 0C4D                                           l3632 0A97  
                                         l3616 0A7C                                           l4512 0F55  
                                         l4440 0E21                                           l4432 0DD4  
                                         l4360 071B                                           l4352 0700  
                                         l4328 068D                                           l4280 04FD  
                                         l4272 049C                                           l4256 0450  
                                         l4184 02EE                                           l3378 0978  
                                         l3386 0987                                           l3538 15D9  
                                         l3802 1301                                           l3706 0C0F  
                                         l3642 0AAD                                           l3634 0A9F  
                                         l4530 0FE7                                           l4506 0F3A  
                                         l4522 0F85                                           l4418 0CFF  
                                         l4354 06CD                                           l4194 030D  
                                         l3396 09D1                                           l3564 1612  
                                         l3556 15E4                                           l3492 1543  
                                         l3476 1522                                           l3716 0C38  
                                         l3820 17CF                                           l4460 0E6B  
                                         l4444 0E33                                           l4436 0E0D  
                                         l4364 072D                                           l4356 0706  
                                         l4348 06EE                                           l4196 0317  
                                         l4188 0301                                           l3558 15FB  
                                         l3478 152A                                           l3750 1365  
                                         l3726 0C64                                           l3814 174D  
                                         l4534 0F8D                                           l4518 0F73  
                                         l4454 0E65                                           l4390 0C84  
                                         l4374 075C                                           l4366 0732  
                                         l4294 059D                                           l4286 0555  
                                         l4446 0E3D                                           l3592 1676  
                                         l3568 1614                                           l3496 1546  
                                         l3744 134E                                           l3904 14CC  
                                         l4536 02BD                                           l3578 163D  
                                         l3754 1369                                           l3930 13D8  
                                         l3914 14DD                                           l3842 0169  
                                         l4474 0EBC                                           l4466 0E98  
                                         l4394 0C99                                           l4386 07DF  
                                         l4298 05B5                                           l4538 0FFA  
                                         l3764 139E                                           l3756 1379  
                                         l3924 14FC                                           l3916 14EB  
                                         l3860 029D                                           l3836 0103  
                                         l4484 0EDF                                           l4476 0EBF  
                                         l4388 076E                                           l4564 1168  
                                         l3766 1391                                           l3934 13E1  
                                         l3694 0BDF                                           l3854 0237  
                                         l3846 0187                                           l4494 0F0A  
                                         l4398 0CAB                                           l4670 082D  
                                         l3696 0BF6                                           l3872 080C  
                                         l4488 0EF1                                           l3778 13C5  
                                         l3882 1482                                           l4498 0F1C  
                                         l3956 142F                                           l3948 140F  
                                         l4668 086A                                           l3982 1DD5  
                                         l3966 1441                                           l3878 1479  
                                         l3976 1460                                           l3968 144F  
                                         l3896 14B2                                           STR_1 18B6  
                                         STR_2 18C8                                           STR_3 18FB  
                                         STR_4 18A4                                           STR_5 18F4  
                                         _GAIN 00EB                                           STR_7 18EC  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u3215 1E1A  
                                         u3305 10E1                                           u4115 15AA  
                                         u4205 15F0                                           u4125 15B1  
                                         u3325 10EB                                           u3405 1043  
                                         u3255 1194                                           u3335 10F5  
                                         u4145 15BA                                           u5025 1442  
                                         u3505 1EF9                                           u3345 10FD  
                                         u3425 1052                                           u4155 15CE  
                                         u3515 1F01                                           u3435 1059  
                                         u3700 0929                                           u5205 0047  
                                         u5125 1081                                           u4405 0B52  
                                         u5055 1457                                           u4415 0BA8  
                                         u4185 15E7                                           u5145 108D  
                                         u4425 0BBF                                           u3545 1E52  
                                         u4275 162B                                           u5315 1200  
                                         u5155 10A1                                           u4435 0BCE  
                                         u3475 1EE5                                           u3813 0999  
                                         u3805 097C                                           u4285 1646  
                                         u4605 1372                                           u5165 10AD  
                                         u5405 1FE2                                           u5085 1DDC  
                                         u4445 0BE2                                           u3565 1E61  
                                         u3735 0947                                           u4295 165F  
                                         u5415 1FED                                           u5095 1DE1  
                                         u4535 0C26                                           u3495 1EEF  
                                         u3575 1E68                                           u4625 1386  
                                         u5345 1215                                           u4545 0C41  
                                         u4465 0BEB                                           u3690 0928  
                                         u4555 0C57                                           u4395 0B23  
                                         u3685 091D                                           u4645 1398  
                                         u6237 12F6                                           u5285 11E3  
                                         u3855 09EC                                           u5385 1FC9  
                                         u5625 059B                                           u3955 0A23  
                                         u4835 14B3                                           u5475 035E  
                                         u4685 13B2                                           u4925 14F3  
                                         u4845 14C3                                           u4855 14CD  
                                         u5815 0CB9                                           u5735 06D7  
                                         u5655 066A                                           u5825 0CC5  
                                         u5585 0522                                           u5915 0E8E  
                                         u5755 073B                                           u5595 055F  
                                         u4965 1410                                           u4975 1424  
                                         u4895 14DE                                           u4985 1430  
                                         u5955 0EB1                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                  main@reading 0156                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 080E  
                                         _uart 18D8                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0002  
                              ___fldiv@new_exp 0046                                  __CFG_MCLRE$ON 0000  
                          __size_of_HX711_read 005D                            __size_of_HX711_tare 0034  
                             ?_HX711_set_scale 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 1D8E  
                         _spi_interruptHandler 00E4                                  ___fltol@sign1 005C  
                              __end_of___fladd 0A58                                          ?_main 0070  
                              __end_of___fldiv 167F                                __end_of___awdiv 1112  
                              __end_of___flneg 1DAE                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 106E                                __end_of___flmul 0C84  
                              __end_of___flsub 1F43                                __end_of___fltol 122D  
                              __end_of___lldiv 10C0                                ___awdiv@divisor 0077  
                              __end_of___llmod 2000                                __end_of___lwdiv 1F0E  
                              __end_of___lwmod 1E75                                          _SCALE 00E7  
                              ___awdiv@counter 0020                     __end_of_HX711_read_average 1338  
                              __end_of__doprnt 0FFE                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                                __end_of_dpowers 1890  
                                        _scale 004D                                __end_of_isdigit 080E  
                                        _putch 1D95                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 1029                                __initialization 07E4  
                                 __end_of_main 0876                                   __end_of_uart 18E4  
                               ??_EUSART_Write 0071                                 __CFG_LPBOR$OFF 0000  
                         HX711_get_value@times 006D                              ?_HX711_set_offset 005E  
                                       ??_main 007E                      __size_of_spi_exchangeByte 000A  
                               __CFG_PLLEN$OFF 0000                             ??_HX711_set_offset 007E  
                         __size_of__tdiv_to_l_ 009C              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00EC                               ___llmod@dividend 0024  
                                       ?_scale 003E                               ___awdiv@dividend 0079  
                                       _ANSELA 018C                                         ?_putch 0071  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RA2PPS 0E92                                         _RC1STA 019D  
                                       _RB6PPS 0E9E                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       _OFFSET 00DD                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                             __end_of___xxtofl 13CE                                 __CFG_PWRTE$OFF 0000  
                                 __doprnt$1425 00B4                               __end_of__powers_ 1834  
                      __size_of_HX711_is_ready 0007                                         ___flge 122D  
                                       ___fleq 0005                                      ??___fladd 0059  
                                       ___wmul 1DD3                                      ??___fldiv 003C  
                                    ??___awdiv 007B                                      ??___flneg 0074  
                               __CFG_STVREN$ON 0000                                      ??___awmod 0074  
                                    ??___flmul 002C                                      ??___flsub 007E  
                                    ??___fltol 0057                                      ??___lldiv 0078  
                                    ??___llmod 0028                                      ??___lwdiv 007A  
                                    ??___lwmod 0074                                      ??__doprnt 00AE  
                                       _fround 167F                               ___awdiv@quotient 0022  
                              ___awmod@divisor 0070                                   __doprnt@flag 00BD  
                              ___awmod@counter 0075                                         _printf 1DEE  
                                 __doprnt@eexp 00C3                                   __doprnt@fval 00C9  
                                 __doprnt@prec 00BB                         HX711_set_offset@offset 005E  
                      HX711_read_average@times 00A1                                      ??_isdigit 0070  
                           __size_of__Umul8_16 001F                               __end_of_spi_open 116A  
                                 ??_HX711_read 0075                                   ??_HX711_tare 007E  
                                    ??_sprintf 00D7                           HX711_get_units@times 00BC  
                                   ___flge@ff1 0070                                     ___flge@ff2 0074  
                                 ___xxtofl@arg 0030                                   ___xxtofl@exp 002F  
                            _SYSTEM_Initialize 1D9C                                   ___xxtofl@val 0077  
                                   ___fleq@ff1 0070                                     ___fleq@ff2 0074  
                      __end_of__initialization 07FD                                     ___flneg@f1 0070  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0053  
                               __pcstackCOMMON 0070                                   __pidataBANK1 1D6F  
                          ??_SYSTEM_Initialize 0072                                  __end_of_scale 02BB  
                           __end_of_HX711_read 11C7                             __end_of_HX711_tare 1EDA  
                                __end_of_putch 1D9C                                     __div_to_l_ 13CE  
                               _OPTION_REGbits 0095                           HX711_set_scale@scale 0070  
              ??_EUSART_SetOverrunErrorHandler 0072                 spi_open@spiUniqueConfiguration 0073  
                                   __doprnt@ap 006F                                     __doprnt@cp 00B8  
                                   __doprnt@pb 00D0                                __div_to_l_@exp1 0025  
                              __div_to_l_@cntr 0024                          HX711_read_average@sum 00A2  
                                      ??_scale 0042                      __end_of_SYSTEM_Initialize 1DA5  
                              __div_to_l_@quot 0020                                        ??_putch 0072  
                                   __pbssBANK1 00DD                           __end_of_EUSART_Write 1D95  
                                __div_to_l_@f1 0070                                  __div_to_l_@f2 0074  
                            __end_of__Umul8_16 1E28                                     __pmaintext 080E  
                                      ?___flge 0070                                        ?___fleq 0070  
                                      ?___wmul 0070                                __CFG_PPS1WAY$ON 0000  
                                      ?_fround 003E                                        ?_printf 00D1  
                             _spi_exchangeByte 1DAE                                __CFG_WDTCCS$SWC 0000  
                                    ?___xxtofl 0077                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0072  
                     __size_of_HX711_get_value 0039                       __size_of_HX711_get_units 0041  
                           _HX711_read_average 12A8                              __end_of__npowers_ 1868  
                                   _scale$1424 004E                                 _HX711_is_ready 1D80  
                          ?_HX711_read_average 0065                                __size_of___flge 007B  
                              __size_of___fleq 0048                                        ___fladd 0876  
                                    ?_spi_open 0070                                        ___fldiv 1505  
                                      ___awdiv 10C0                                        ___flneg 1DA5  
                                      ___awmod 1029                                        ___flmul 0A58  
                                      ___flsub 1F0E                                        ___fltol 11C7  
                                      ___lldiv 106E                                __size_of___wmul 001B  
                                      ___llmod 1FBD                                        ___lwdiv 1EDA  
                                      ___lwmod 1E49                                        __doprnt 02BB  
                              __size_of_fround 0181                                        __ptext1 1006  
                                      __ptext2 1112                                        __ptext3 1DEE  
                                      __ptext4 02BB                                        __ptext5 004D  
                                      __ptext6 1029                                        __ptext7 10C0  
                                      __ptext8 1D95                                        __ptext9 1D8E  
                              __size_of_printf 001B                                    ?__div_to_l_ 0070  
                                      _dpowers 1868                          _OSCILLATOR_Initialize 1D87  
                                      _isdigit 0800                                     ??___xxtofl 002A  
                             ___awmod@dividend 0072                       __size_of_HX711_set_scale 000A  
                     ??_PIN_MANAGER_Initialize 0070                           ??_HX711_read_average 0069  
                                      _spi_isr 0000                     __size_of_SYSTEM_Initialize 0009  
                                      main@aux 0120                                        _sprintf 1006  
                                __doprnt@width 00CD                           end_of_initialization 07FD  
                    __size_of_HX711_set_offset 0011          __end_of_EUSART_SetOverrunErrorHandler 1006  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 1000  
                        HX711_read@value_32aux 0020                              __end_of_spiMaster 18A4  
                       __end_of_HX711_is_ready 1D87                              _EUSART_Initialize 1E28  
                              ___lldiv@divisor 0070                                ___lldiv@counter 007D  
                           ?_EUSART_Initialize 0070                                        printf@f 00D1  
                           _EUSART_is_rx_ready 0000                                        psplit$0 1D0046  
                                   ??_spi_open 0070                             _EUSART_is_tx_ready 0000  
                               __tdiv_to_l_@f1 0070                                 __tdiv_to_l_@f2 0074  
                                ??__tdiv_to_l_ 0078                            ??_EUSART_Initialize 0072  
                                    _PORTBbits 000D                              _spi_configuration 18E4  
                                    _SSPDATPPS 0E21                                      _SSPCLKPPS 0E20  
                                  ___fladd@grs 0064                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 002E                                      _TRISBbits 008D  
                        __size_of_EUSART_Write 0007                                    ___fldiv@grs 0048  
                                  ___fldiv@rem 0041                __size_of_EUSART_SetErrorHandler 0006  
                                 _MASTER0_open 0000                                    ___flmul@grs 0032  
                    __end_of_EUSART_Initialize 1E49                                ?_HX711_is_ready 0070  
                          __size_of__div_to_l_ 009B                              ??_HX711_get_value 007E  
                            ??_HX711_get_units 007E                                 __end_of___flge 12A8  
                               __end_of___fleq 004D                      __end_of_spi_configuration 18EC  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 1DEE  
                                 _EUSART_Write 1D8E                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_fround 1800                                 __end_of_printf 1E09  
                            pnum$text4_split_1 0046                            start_initialization 07E4  
              __size_of_PIN_MANAGER_Initialize 0031                            __end_of__tdiv_to_l_ 1505  
                                  putch@txData 0071                              ??_HX711_set_scale 0074  
                              ___llmod@divisor 0020                       __end_of_spi_exchangeByte 1DB8  
                              ___llmod@counter 0029                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 00EE                                       ??___flge 0078  
                                     ??___fleq 0078                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 1D74                                    __doprnt@len 00B9  
                                    __Umul8_16 1E09                                    __doprnt@val 00BF  
                                  __pdataBANK1 00E7                                       ??_fround 0042  
                                     ??_printf 00D5                                      ___fladd@a 0055  
                                    ___fladd@b 0051                                     fround@prec 0050  
                                    ___fldiv@a 0034                                      ___fldiv@b 0038  
                                    ___flmul@a 0028                                      ___flmul@b 0024  
                                    ___flsub@a 00A6                                      ___flsub@b 00AA  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                            __size_of___xxtofl 0096                                   _isdigit$1187 0070  
                             _HX711_set_offset 1DC2                     __size_of_EUSART_Initialize 0021  
                                    __doprnt@c 00CF                                      __doprnt@f 006D  
                                    __pnvBANK1 00EC                                      __pnvBANK2 015A  
                              HX711_read@value 0026                               ___lwdiv@dividend 0078  
                       _PIN_MANAGER_Initialize 1E75                                       ?___fladd 0051  
                                     ?___fldiv 0034                                       ?___awdiv 0077  
                                     ?___flneg 0070                                       ?___awmod 0070  
                                     ?___flmul 0024                                       ?___flsub 00A6  
                                     ?___fltol 0053                                       ?___lldiv 0070  
                                     ?___llmod 0020                                      __npowers_ 1834  
                                HX711_tare@sum 00A6                                     ?__Umul8_16 0070  
                                     ?___lwdiv 0076                                       ?___lwmod 0070  
                                     ?__doprnt 006D                              __size_of_spi_open 0058  
                                  __tdiv_to_l_ 1469                                   ??__div_to_l_ 0078  
                                     _BAUD1CON 019F                                       ?_isdigit 0070  
                              HX711_tare@times 00AA                               ___lwdiv@quotient 007B  
                            _spi_exchangeBlock 0000                                       ?_sprintf 00D1  
                               __size_of_scale 026E                                 __size_of_putch 0007  
                               ___wmul@product 0074         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                              _eusartRxLastError 00E6  
                                     _PIR1bits 0010                             __end_of__div_to_l_ 1469  
              ??_EUSART_SetFramingErrorHandler 0072                                      _spiMaster 1890  
                            _EUSART_is_tx_done 0000                              spi_exchangeByte@b 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                      _spi_close 0000  
                            ___wmul@multiplier 0070                    __size_of_HX711_read_average 0090  
                                  _EUSART_Read 0000                                _HX711_get_value 1F43  
                             ??_HX711_is_ready 0070                                _HX711_get_units 1F7C  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 015A                               __size_of___fladd 01E2  
                             __size_of___fldiv 017A                               __size_of___awdiv 0052  
                             __size_of___flneg 0009                               __size_of___awmod 0045  
                             __size_of___flmul 022C                           _HX711_get_units$1421 00B8  
                             __size_of___flsub 0035                               __size_of___fltol 0066  
                             __size_of___lldiv 0052                               __size_of___llmod 0043  
                             __size_of___lwdiv 0034                               __size_of___lwmod 002C  
                                  _fround$1422 004C                                    _fround$1423 0048  
                             __size_of__doprnt 0D43                            HX711_read_new@F9624 00E1  
                              _HX711_set_scale 1DB8                            HX711_read_average@i 00A0  
                                     ___xxtofl 1338                               __size_of_isdigit 000E  
                              ___lwdiv@divisor 0076                                ___lwdiv@counter 007D  
                                     __ptext10 0800                                       __ptext11 167F  
                                     __ptext20 106E                                       __ptext12 1E49  
                                     __ptext21 1DA5                                       __ptext13 1EDA  
                                     __ptext30 1D74                                       __ptext22 122D  
                                     __ptext14 0A58                                       __ptext31 1EA6  
                                     __ptext23 0005                                       __ptext15 1E09  
                                     __ptext40 1338                                       __ptext32 11C7  
                                     __ptext24 1D9C                                       __ptext16 1469  
                                     __ptext41 1505                                       __ptext33 1DC2  
                                     __ptext25 1E75                                       __ptext17 13CE  
                                     __ptext42 0876                                       __ptext34 1DB8  
                                     __ptext26 1D87                                       __ptext18 1DD3  
                                     __ptext43 116A                                       __ptext35 1D80  
                                     __ptext27 1E28                                       __ptext19 1FBD  
                                     __ptext44 1DAE                                       __ptext36 1F7C  
                                     __ptext28 1000                                       __ptext37 1F43  
                                     __ptext29 1D7A                                       __ptext38 1F0E  
                                     __ptext39 12A8                                     _HX711_read 116A  
                                   _HX711_tare 1EA6                                   _SSP1CON1bits 0215  
                                     __powers_ 1800                               __size_of_sprintf 0023  
                                __size_of_main 0068                                      pnum$text4 001D  
                            ?_spi_exchangeByte 0070                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 0070                                     _RC1STAbits 019D  
                           ??_spi_exchangeByte 0071  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     _spi_open 1112          __end_of_EUSART_SetFramingErrorHandler 1D80  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 1D7A  
                                 _SSP1STATbits 0214                       __end_of_HX711_set_offset 1DD3  
                               __doprnt@tmpval 00C5                        __end_of_HX711_get_value 1F7C  
                      __end_of_HX711_get_units 1FBD                                 __pstringtext10 18EC  
                               __pstringtext11 18F4                                 __pstringtext12 18FB  
                               __pstringtext13 0000                                       isdigit@c 0071  
                                     scale@scl 0052                                      sprintf@ap 00D9  
                                    sprintf@pb 00DA                               __tdiv_to_l_@exp1 0025  
                             __tdiv_to_l_@cntr 0024                                      sprintf@wh 00D8  
                             __tdiv_to_l_@quot 0020                                    HX711_read@i 0024  
                             ___lwmod@dividend 0072                               ___lldiv@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 1D7A  
                                _spi_readBlock 0000                              __CFG_CLKOUTEN$OFF 0000  
                                     printf@ap 00D6                                       printf@pb 00D7  
                      __end_of_HX711_set_scale 1DC2  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                _spi_setSpiISR 0000                                   ?__tdiv_to_l_ 0070  
                                __pstringtext1 1800                                  __pstringtext2 1834  
                                __pstringtext3 1890                                  __pstringtext4 18D8  
                                __pstringtext5 18E4                                  __pstringtext6 1868  
                                __pstringtext7 18A4                                  __pstringtext8 18B6  
                                __pstringtext9 18C8                         __Umul8_16@multiplicand 0070  
                                     sprintf@f 00D1                               ___lldiv@quotient 0079  
                              ___lwmod@divisor 0070                                   _spi_readByte 0000  
                              ___lwmod@counter 0075                                    ?_HX711_read 0071  
                                  ?_HX711_tare 0070                                     _TX1STAbits 019E  
                                ___fladd@signs 0061                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 1EA6                                 _spi_writeBlock 0000  
                                 ___fladd@aexp 0062                                   ___fladd@bexp 0063  
                         __Umul8_16@multiplier 0078                                  _spi_writeByte 0000  
                            __Umul8_16@product 0074  
